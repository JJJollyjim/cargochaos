
# This file was @generated by crate2nix 0.9.0-alpha.1 with the command:
#   "generate" "-o" "/home/jamie/Misc/cratesioout/nu/v0.3.0.nix.tmp"
# See https://github.com/kolloch/crate2nix for more info.

{ nixpkgs ? <nixpkgs>
, pkgs ? import nixpkgs { config = {}; }
, lib ? pkgs.lib
, stdenv ? pkgs.stdenv
, buildRustCrate ? pkgs.buildRustCrate
  # This is used as the `crateOverrides` argument for `buildRustCrate`.
, defaultCrateOverrides ? pkgs.defaultCrateOverrides
  # The features to enable for the root_crate or the workspace_members.
, rootFeatures ? [ "default" ]
  # If true, throw errors instead of issueing deprecation warnings.
, strictDeprecation ? false
  # Whether to perform release builds: longer compile times, faster binaries.
, release ? true
  # Additional crate2nix configuration if it exists.
, crateConfig
  ? if builtins.pathExists ./crate-config.nix
    then pkgs.callPackage ./crate-config.nix {}
    else {}
}:

rec {
  #
  # "public" attributes that we attempt to keep stable with new versions of crate2nix.
  #

  rootCrate = rec {
    packageId = "nu";

    # Use this attribute to refer to the derivation building your root crate package.
    # You can override the features with rootCrate.build.override { features = [ "default" "feature1" ... ]; }.
    build = internal.buildRustCrateWithFeatures {
      inherit packageId;
    };

    # Debug support which might change between releases.
    # File a bug if you depend on any for non-debug work!
    debug = internal.debugCrate { inherit packageId; };
  };
  # Refer your crate build derivation by name here.
  # You can override the features with
  # workspaceMembers."${crateName}".build.override { features = [ "default" "feature1" ... ]; }.
  workspaceMembers = {
    "nu" = rec {
      packageId = "nu";
      build = internal.buildRustCrateWithFeatures {
        packageId = "nu";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
  };

  #
  # "internal" ("private") attributes that may change in every new version of crate2nix.
  #

  internal = rec {
    # Build and dependency information for crates.
    # Many of the fields are passed one-to-one to buildRustCrate.
    #
    # Noteworthy:
    # * `dependencies`/`buildDependencies`: similar to the corresponding fields for buildRustCrate.
    #   but with additional information which is used during dependency/feature resolution.
    # * `resolvedDependencies`: the selected default features reported by cargo - only included for debugging.
    # * `devDependencies` as of now not used by `buildRustCrate` but used to
    #   inject test dependencies into the build

    crates = {
      "adler32" = rec {
        crateName = "adler32";
        version = "1.0.3";
        edition = "2015";
        sha256 = "0p7fxlnks9l7p7rwfqi7aqgnk2bps5zc0rjiw00mdw19nnbjjlky";
        authors = [
          "Remi Rampin <remirampin@gmail.com>"
        ];
        
      };
      "aho-corasick" = rec {
        crateName = "aho-corasick";
        version = "0.7.6";
        edition = "2015";
        sha256 = "0b8dh20fhdc59dhhnfi89n2bi80a8zbagzd5c122hf1vv2amxysq";
        libName = "aho_corasick";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "memchr";
            packageId = "memchr";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "memchr/use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "ansi_term 0.11.0" = rec {
        crateName = "ansi_term";
        version = "0.11.0";
        edition = "2015";
        sha256 = "16wpvrghvd0353584i1idnsgm0r3vchg8fyrm0x8ayv1rgvbljgf";
        authors = [
          "ogham@bsago.me"
          "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>"
          "Josh Triplett <josh@joshtriplett.org>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: (target."os" == "windows");
            features = [ "errhandlingapi" "consoleapi" "processenv" ];
          }
        ];
        
      };
      "ansi_term 0.12.1" = rec {
        crateName = "ansi_term";
        version = "0.12.1";
        edition = "2015";
        sha256 = "1ljmkbilxgmhavxvxqa7qvm6f3fjggi7q2l3a72q9x0cxjvrnanm";
        authors = [
          "ogham@bsago.me"
          "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>"
          "Josh Triplett <josh@joshtriplett.org>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: (target."os" == "windows");
            features = [ "consoleapi" "errhandlingapi" "fileapi" "handleapi" "processenv" ];
          }
        ];
        features = {
          "derive_serde_style" = [ "serde" ];
        };
      };
      "app_dirs" = rec {
        crateName = "app_dirs";
        version = "1.2.1";
        edition = "2015";
        sha256 = "0g9ijvl4xqbmahy7d7s0wj570wg0kz3ad0jk77b98smxv6x28fp7";
        authors = [
          "Andy Barron <AndrewLBarron@gmail.com>"
        ];
        dependencies = [
          {
            name = "ole32-sys";
            packageId = "ole32-sys";
            target = { target, features }: target."windows";
          }
          {
            name = "shell32-sys";
            packageId = "shell32-sys";
            target = { target, features }: target."windows";
          }
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
            target = { target, features }: target."windows";
          }
          {
            name = "xdg";
            packageId = "xdg";
            target = { target, features }: (target."unix" && (!(target."os" == "macos")));
          }
        ];
        
      };
      "arrayref" = rec {
        crateName = "arrayref";
        version = "0.3.5";
        edition = "2015";
        sha256 = "1vphy316jbgmgckk4z7m8csvlyc8hih9w95iyq48h8077xc2wf0d";
        authors = [
          "David Roundy <roundyd@physics.oregonstate.edu>"
        ];
        
      };
      "arrayvec" = rec {
        crateName = "arrayvec";
        version = "0.4.11";
        edition = "2015";
        sha256 = "1fmhq4ljxr954mdyazaqa9kdxryl5d2ggr5rialylrd6xndkzmxq";
        authors = [
          "bluss"
        ];
        dependencies = [
          {
            name = "nodrop";
            packageId = "nodrop";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "serde-1" = [ "serde" ];
        };
      };
      "atty" = rec {
        crateName = "atty";
        version = "0.2.13";
        edition = "2015";
        sha256 = "140sswp1bwqwc4zk80bxkbnfb3g936hgrb77g9g0k1zcld3wc0qq";
        authors = [
          "softprops <d.tangren@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: target."unix";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "consoleapi" "processenv" "minwinbase" "minwindef" "winbase" ];
          }
        ];
        
      };
      "autocfg" = rec {
        crateName = "autocfg";
        version = "0.1.5";
        edition = "2015";
        sha256 = "0asl6fnc35yk5l2rxwhp25v128jgm45dp754h9z8x51b6n90w4r2";
        authors = [
          "Josh Stone <cuviper@gmail.com>"
        ];
        
      };
      "backtrace" = rec {
        crateName = "backtrace";
        version = "0.3.34";
        edition = "2018";
        sha256 = "1fk54yqq3aw54dnxjp885wbalbyyrqpxxh2fwgn3gw474hlls5mm";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "backtrace-sys";
            packageId = "backtrace-sys";
            optional = true;
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
          }
          {
            name = "rustc-demangle";
            packageId = "rustc-demangle";
          }
        ];
        features = {
          "default" = [ "std" "libunwind" "libbacktrace" "dladdr" "dbghelp" ];
          "gimli-symbolize" = [ "addr2line" "findshlibs" "memmap" "goblin" ];
          "libbacktrace" = [ "backtrace-sys" ];
          "rustc-dep-of-std" = [ "backtrace-sys/rustc-dep-of-std" "cfg-if/rustc-dep-of-std" "core" "compiler_builtins" "libc/rustc-dep-of-std" "rustc-demangle/rustc-dep-of-std" ];
          "serialize-rustc" = [ "rustc-serialize" ];
          "serialize-serde" = [ "serde" ];
          "verify-winapi" = [ "winapi/dbghelp" "winapi/handleapi" "winapi/libloaderapi" "winapi/minwindef" "winapi/processthreadsapi" "winapi/winbase" "winapi/winnt" ];
        };
        resolvedDefaultFeatures = [ "backtrace-sys" "dbghelp" "default" "dladdr" "libbacktrace" "libunwind" "std" ];
      };
      "backtrace-sys" = rec {
        crateName = "backtrace-sys";
        version = "0.1.31";
        edition = "2015";
        sha256 = "0as2pk77br4br04daywhivpi1ixxb8y2c7f726kj849dxys31a42";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
      "base64" = rec {
        crateName = "base64";
        version = "0.10.1";
        edition = "2015";
        sha256 = "13k6bvd3n6dm7jqn9x918w65dd9xhx454bqphbnv0bkd6n9dj98b";
        authors = [
          "Alice Maz <alice@alicemaz.com>"
          "Marshall Pierce <marshall@mpierce.org>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
        ];
        
      };
      "battery" = rec {
        crateName = "battery";
        version = "0.7.4";
        edition = "2018";
        sha256 = "0yq4dzicqvxr3dca4qcfxj44n861wky9mn3w480fjj80cgjnyvbs";
        authors = [
          "svartalf <self@svartalf.info>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "core-foundation";
            packageId = "core-foundation";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "lazycell";
            packageId = "lazycell";
            target = { target, features }: (target."os" == "linux");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: ((target."os" == "dragonfly") || (target."os" == "freebsd"));
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "mach";
            packageId = "mach 0.2.3";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "nix";
            packageId = "nix 0.14.1";
            target = { target, features }: ((target."os" == "dragonfly") || (target."os" == "freebsd"));
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.8";
            usesDefaultFeatures = false;
          }
          {
            name = "uom";
            packageId = "uom 0.23.1";
            features = [ "autoconvert" "f32" "si" ];
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: (target."os" == "windows");
            features = [ "impl-default" "devguid" "winbase" "ioapiset" "ntdef" "setupapi" "handleapi" "errhandlingapi" "winerror" ];
          }
        ];
        
      };
      "bigdecimal" = rec {
        crateName = "bigdecimal";
        version = "0.1.0";
        edition = "2015";
        sha256 = "1jxsa7gd70aacbgf0pf8rbfarrb0ap6mfw60cx6h420pwb4ja226";
        authors = [
          "Andrew Kubera"
        ];
        dependencies = [
          {
            name = "num-bigint";
            packageId = "num-bigint";
          }
          {
            name = "num-integer";
            packageId = "num-integer";
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.8";
          }
          {
            name = "serde";
            packageId = "serde 1.0.100";
            optional = true;
          }
        ];
        
        resolvedDefaultFeatures = [ "serde" ];
      };
      "bincode" = rec {
        crateName = "bincode";
        version = "1.1.4";
        edition = "2015";
        sha256 = "1xx6bp39irvsndk6prnmmq8m1l9p6q2qj21j6mfks2y81pjsa14z";
        authors = [
          "Ty Overby <ty@pre-alpha.com>"
          "Francesco Mazzoli <f@mazzo.li>"
          "David Tolnay <dtolnay@gmail.com>"
          "Daniel Griffen"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "serde";
            packageId = "serde 1.0.100";
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
        ];
        features = {
        };
      };
      "bitflags" = rec {
        crateName = "bitflags";
        version = "1.1.0";
        edition = "2015";
        sha256 = "1zc1qb1hwsnl2d8rhzicsv9kqd5b2hwbrscrcfw5as4sfr35659x";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "blake2b_simd" = rec {
        crateName = "blake2b_simd";
        version = "0.5.6";
        edition = "2018";
        sha256 = "1cnnprc45vv4lbz2anfjm4g5zwazka57il7pxcfhrdwfka3ln7s6";
        authors = [
          "Jack O'Connor"
        ];
        dependencies = [
          {
            name = "arrayref";
            packageId = "arrayref";
          }
          {
            name = "arrayvec";
            packageId = "arrayvec";
            usesDefaultFeatures = false;
          }
          {
            name = "constant_time_eq";
            packageId = "constant_time_eq";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "block" = rec {
        crateName = "block";
        version = "0.1.6";
        edition = "2015";
        sha256 = "16k9jgll25pzsq14f244q22cdv0zb4bqacldg3kx6h89d7piz30d";
        authors = [
          "Steven Sheldon"
        ];
        
      };
      "bson" = rec {
        crateName = "bson";
        version = "0.14.0";
        edition = "2018";
        sha256 = "0cwbq3dj4mxh0kmrhilbkbjc3ajx09lzyk233p7d35113v99a66n";
        authors = [
          "Y. T. Chung <zonyitoo@gmail.com>"
          "Kevin Yeh <kevinyeah@utexas.edu>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "chrono";
            packageId = "chrono";
          }
          {
            name = "decimal";
            packageId = "decimal";
            optional = true;
          }
          {
            name = "hex";
            packageId = "hex 0.3.2";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "linked-hash-map";
            packageId = "linked-hash-map 0.5.2";
          }
          {
            name = "md5";
            packageId = "md5";
          }
          {
            name = "rand";
            packageId = "rand 0.7.0";
          }
          {
            name = "serde";
            packageId = "serde 1.0.100";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
            features = [ "preserve_order" ];
          }
          {
            name = "time";
            packageId = "time";
          }
        ];
        features = {
          "decimal128" = [ "decimal" ];
        };
        resolvedDefaultFeatures = [ "decimal" "decimal128" "default" ];
      };
      "bstr" = rec {
        crateName = "bstr";
        version = "0.2.6";
        edition = "2015";
        sha256 = "0sllnfbigyxy8cagf42dm7gj48wvkgwjr8kir8hyirs0qzqr59p0";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
            optional = true;
          }
          {
            name = "memchr";
            packageId = "memchr";
            usesDefaultFeatures = false;
          }
          {
            name = "regex-automata";
            packageId = "regex-automata";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde 1.0.100";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" "unicode" ];
          "serde1" = [ "std" "serde1-nostd" "serde/std" ];
          "serde1-nostd" = [ "serde" ];
          "std" = [ "memchr/use_std" ];
          "unicode" = [ "lazy_static" "regex-automata" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "regex-automata" "serde" "serde1" "serde1-nostd" "std" "unicode" ];
      };
      "bumpalo" = rec {
        crateName = "bumpalo";
        version = "2.5.0";
        edition = "2018";
        sha256 = "018b5calz3895v04shk9bn7i73r4zf8yf7p1dqg92s3xya13vm1c";
        authors = [
          "Nick Fitzgerald <fitzgen@gmail.com>"
        ];
        features = {
          "collections" = [ "std" ];
          "default" = [ "collections" "std" ];
        };
        resolvedDefaultFeatures = [ "collections" "default" "std" ];
      };
      "byte-unit" = rec {
        crateName = "byte-unit";
        version = "3.0.1";
        edition = "2015";
        sha256 = "11qyipx8g951wcyvz0d82plwpnncb3ji5wj45n1w8xlpxia9j4wh";
        authors = [
          "Magic Len <len@magiclen.org>"
        ];
        
      };
      "bytecount" = rec {
        crateName = "bytecount";
        version = "0.3.2";
        edition = "2015";
        sha256 = "1n6bmj66dixkvrm80yxmmln77baj9sw1qahcdv5xnmlz6p7djqgq";
        authors = [
          "Andre Bogus <bogusandre@gmail.de>"
          "Joshua Landau <joshua@landau.ws>"
        ];
        features = {
          "avx-accel" = [ "simd-accel" ];
          "simd-accel" = [ "simd" ];
        };
      };
      "byteorder" = rec {
        crateName = "byteorder";
        version = "1.3.2";
        edition = "2015";
        sha256 = "1xbwjlmq2ziqjmjvkqxdx1yh136xxhilxd40bky1w4d7hn4xvhx7";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "bytes" = rec {
        crateName = "bytes";
        version = "0.4.12";
        edition = "2015";
        sha256 = "0768a55q2fsqdjsvcv98ndg9dq7w2g44dvq1avhwpxrdzbydyvr0";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "iovec";
            packageId = "iovec";
          }
        ];
        features = {
          "i128" = [ "byteorder/i128" ];
        };
      };
      "c2-chacha" = rec {
        crateName = "c2-chacha";
        version = "0.2.2";
        edition = "2018";
        sha256 = "00a11qdc8mg3z0k613rhprkc9p6xz0y7b1681x32ixg0hr3x0r3x";
        authors = [
          "The CryptoCorrosion Contributors"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
            optional = true;
          }
          {
            name = "ppv-lite86";
            packageId = "ppv-lite86";
            rename = "ppv-lite86";
          }
        ];
        features = {
          "default" = [ "std" "simd" "rustcrypto_api" ];
          "rustcrypto_api" = [ "stream-cipher" "byteorder" ];
          "simd" = [ "ppv-lite86/simd" ];
          "std" = [ "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "lazy_static" "simd" "std" ];
      };
      "cc" = rec {
        crateName = "cc";
        version = "1.0.45";
        edition = "2018";
        crateBin = [];
        sha256 = "1gm1llpdm3ch58myngjca6id47k7837scjy5bygfp4223xga7jag";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "jobserver";
            packageId = "jobserver";
            optional = true;
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
            optional = true;
          }
        ];
        features = {
          "parallel" = [ "num_cpus" "jobserver" ];
        };
        resolvedDefaultFeatures = [ "jobserver" "num_cpus" "parallel" ];
      };
      "cfg-if" = rec {
        crateName = "cfg-if";
        version = "0.1.9";
        edition = "2015";
        sha256 = "0csygklgz3ybpr0670rkip49zh76m43ar3k7xgypkzbzrwycx1ml";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        
      };
      "chrono" = rec {
        crateName = "chrono";
        version = "0.4.9";
        edition = "2015";
        sha256 = "0s5xbn4im53169bnqbcr4qvnyn44frplvc0v7hcv10w5jrb30jg8";
        authors = [
          "Kang Seonghoon <public+rust@mearie.org>"
          "Brandon W Maister <quodlibetor@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
          }
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.8";
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde 1.0.100";
            optional = true;
          }
          {
            name = "time";
            packageId = "time";
            optional = true;
          }
        ];
        features = {
          "clock" = [ "time" ];
          "default" = [ "clock" ];
          "wasmbind" = [ "wasm-bindgen" "js-sys" ];
        };
        resolvedDefaultFeatures = [ "clock" "default" "serde" "time" ];
      };
      "chrono-humanize" = rec {
        crateName = "chrono-humanize";
        version = "0.0.11";
        edition = "2015";
        sha256 = "03g9nnl9cmf249sf5i78g6l35zyqgypnd7m3x7dd5s2zcn5g8bzb";
        authors = [
          "Cyril Plisko <cyril.plisko@mountall.com>"
        ];
        dependencies = [
          {
            name = "chrono";
            packageId = "chrono";
          }
        ];
        features = {
        };
      };
      "clap" = rec {
        crateName = "clap";
        version = "2.33.0";
        edition = "2015";
        sha256 = "1nf6ld3bims1n5vfzhkvcb55pdzh04bbhzf8nil5vvw05nxzarsh";
        authors = [
          "Kevin K. <kbknapp@gmail.com>"
        ];
        dependencies = [
          {
            name = "ansi_term";
            packageId = "ansi_term 0.11.0";
            optional = true;
            target = { target, features }: (!target."windows");
          }
          {
            name = "atty";
            packageId = "atty";
            optional = true;
          }
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "strsim";
            packageId = "strsim";
            optional = true;
          }
          {
            name = "textwrap";
            packageId = "textwrap";
          }
          {
            name = "unicode-width";
            packageId = "unicode-width";
          }
          {
            name = "vec_map";
            packageId = "vec_map";
            optional = true;
          }
        ];
        features = {
          "color" = [ "ansi_term" "atty" ];
          "default" = [ "suggestions" "color" "vec_map" ];
          "doc" = [ "yaml" ];
          "lints" = [ "clippy" ];
          "suggestions" = [ "strsim" ];
          "wrap_help" = [ "term_size" "textwrap/term_size" ];
          "yaml" = [ "yaml-rust" ];
        };
        resolvedDefaultFeatures = [ "ansi_term" "atty" "color" "default" "strsim" "suggestions" "vec_map" ];
      };
      "clipboard" = rec {
        crateName = "clipboard";
        version = "0.5.0";
        edition = "2015";
        sha256 = "1rxjfn811h09g6jpjjs2vx7z52wj6dxnflbwryfj6h03dij09a95";
        authors = [
          "Avi Weinstock <aweinstock314@gmail.com>"
        ];
        dependencies = [
          {
            name = "clipboard-win";
            packageId = "clipboard-win";
            target = { target, features }: target."windows";
          }
          {
            name = "objc";
            packageId = "objc";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "objc-foundation";
            packageId = "objc-foundation";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "objc_id";
            packageId = "objc_id";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "x11-clipboard";
            packageId = "x11-clipboard";
            target = { target, features }: (target."unix" && (!((target."os" == "macos") || (target."os" == "android"))));
          }
        ];
        
      };
      "clipboard-win" = rec {
        crateName = "clipboard-win";
        version = "2.2.0";
        edition = "2018";
        sha256 = "0svqk0lrw66abaxd6h7l4k4g2s5vd1dcipy34kzfan6mzvb97873";
        libName = "clipboard_win";
        authors = [
          "Douman <douman@gmx.se>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            usesDefaultFeatures = false;
            target = { target, features }: target."windows";
            features = [ "std" "basetsd" "shellapi" "winbase" "winuser" ];
          }
        ];
        features = {
        };
      };
      "cloudabi" = rec {
        crateName = "cloudabi";
        version = "0.0.3";
        edition = "2015";
        sha256 = "0kxcg83jlihy0phnd2g8c2c303px3l2p3pkjz357ll6llnd5pz6x";
        libPath = "cloudabi.rs";
        authors = [
          "Nuxi (https://nuxi.nl/) and contributors"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
            optional = true;
          }
        ];
        features = {
          "default" = [ "bitflags" ];
        };
        resolvedDefaultFeatures = [ "bitflags" "default" ];
      };
      "config" = rec {
        crateName = "config";
        version = "0.9.3";
        edition = "2015";
        sha256 = "1rppjv8q5ffdyir6rawgizyqrm5yg9j8xlg7hrdgmcv2xmw7s47r";
        authors = [
          "Ryan Leckey <leckey.ryan@gmail.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
          }
          {
            name = "nom";
            packageId = "nom 4.2.3";
          }
          {
            name = "rust-ini";
            packageId = "rust-ini";
            optional = true;
          }
          {
            name = "serde";
            packageId = "serde 1.0.100";
          }
          {
            name = "serde-hjson";
            packageId = "serde-hjson 0.8.2";
            optional = true;
          }
          {
            name = "serde_json";
            packageId = "serde_json";
            optional = true;
          }
          {
            name = "toml";
            packageId = "toml 0.4.10";
            optional = true;
          }
          {
            name = "yaml-rust";
            packageId = "yaml-rust";
            optional = true;
          }
        ];
        features = {
          "default" = [ "toml" "json" "yaml" "hjson" "ini" ];
          "hjson" = [ "serde-hjson" ];
          "ini" = [ "rust-ini" ];
          "json" = [ "serde_json" ];
          "yaml" = [ "yaml-rust" ];
        };
        resolvedDefaultFeatures = [ "default" "hjson" "ini" "json" "rust-ini" "serde-hjson" "serde_json" "toml" "yaml" "yaml-rust" ];
      };
      "constant_time_eq" = rec {
        crateName = "constant_time_eq";
        version = "0.1.3";
        edition = "2015";
        sha256 = "17janp8n9dd6kjbbgqiayrh9fw81v4cq9rz04926s5nf4pi15w4g";
        authors = [
          "Cesar Eduardo Barros <cesarb@cesarb.eti.br>"
        ];
        
      };
      "core-foundation" = rec {
        crateName = "core-foundation";
        version = "0.6.4";
        edition = "2015";
        sha256 = "0va97wf49c8dzm9c8pgyk1jn7z21rl0bj1syf2zz5m2z2hzy1f95";
        authors = [
          "The Servo Project Developers"
        ];
        dependencies = [
          {
            name = "core-foundation-sys";
            packageId = "core-foundation-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "mac_os_10_7_support" = [ "core-foundation-sys/mac_os_10_7_support" ];
          "mac_os_10_8_features" = [ "core-foundation-sys/mac_os_10_8_features" ];
          "with-chrono" = [ "chrono" ];
          "with-uuid" = [ "uuid" ];
        };
      };
      "core-foundation-sys" = rec {
        crateName = "core-foundation-sys";
        version = "0.6.2";
        edition = "2015";
        sha256 = "0fzsw1j9g1x598yhwklg59l15hwzc0pyvs01w9fg2kin4598mjp7";
        authors = [
          "The Servo Project Developers"
        ];
        features = {
        };
      };
      "crc32fast" = rec {
        crateName = "crc32fast";
        version = "1.2.0";
        edition = "2015";
        sha256 = "1c9dhkvf3brrzzplcijaywxi2w8wv5578i0ryhcm7x8dmzi5s4ms";
        authors = [
          "Sam Rijs <srijs@airpost.net>"
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "crossbeam-channel" = rec {
        crateName = "crossbeam-channel";
        version = "0.3.9";
        edition = "2015";
        sha256 = "1ylyzb1m9qbvd1nd3vy38x9073wdmcy295ncjs7wf7ap476pzv68";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.6.6";
          }
        ];
        
      };
      "crossbeam-utils 0.5.0" = rec {
        crateName = "crossbeam-utils";
        version = "0.5.0";
        edition = "2015";
        sha256 = "05b00dr1srl94d7jkalhwxdvpkaby2f8p3m37y8jpgg82wx4azb7";
        authors = [
          "The Crossbeam Project Developers"
        ];
        features = {
          "default" = [ "use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
      "crossbeam-utils 0.6.6" = rec {
        crateName = "crossbeam-utils";
        version = "0.6.6";
        edition = "2015";
        sha256 = "1rk0r9n04bmq4a3g2q5qhvvlmrmx780gc6h9lmc94mwndslkz5q4";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" ];
      };
      "crossterm" = rec {
        crateName = "crossterm";
        version = "0.10.2";
        edition = "2015";
        sha256 = "0dbg7a5rk8509qjcdd3mdpq7l93ydpqvighd1km2760fqpbygg4s";
        authors = [
          "T. Post"
        ];
        dependencies = [
          {
            name = "crossterm_cursor";
            packageId = "crossterm_cursor";
            optional = true;
          }
          {
            name = "crossterm_input";
            packageId = "crossterm_input";
            optional = true;
          }
          {
            name = "crossterm_screen";
            packageId = "crossterm_screen";
            optional = true;
          }
          {
            name = "crossterm_style";
            packageId = "crossterm_style";
            optional = true;
          }
          {
            name = "crossterm_terminal";
            packageId = "crossterm_terminal";
            optional = true;
          }
          {
            name = "crossterm_utils";
            packageId = "crossterm_utils";
          }
        ];
        features = {
          "cursor" = [ "crossterm_cursor" ];
          "default" = [ "cursor" "style" "terminal" "screen" "input" ];
          "input" = [ "crossterm_input" ];
          "screen" = [ "crossterm_screen" ];
          "style" = [ "crossterm_style" ];
          "terminal" = [ "crossterm_terminal" ];
        };
        resolvedDefaultFeatures = [ "crossterm_cursor" "crossterm_input" "crossterm_screen" "crossterm_style" "crossterm_terminal" "cursor" "default" "input" "screen" "style" "terminal" ];
      };
      "crossterm_cursor" = rec {
        crateName = "crossterm_cursor";
        version = "0.2.6";
        edition = "2018";
        sha256 = "1p33mwpijrhr1mss3nz8bm31wcxlsd802gwls9n3xn0pbw4gsjzv";
        authors = [
          "T. Post"
        ];
        dependencies = [
          {
            name = "crossterm_utils";
            packageId = "crossterm_utils";
          }
          {
            name = "crossterm_winapi";
            packageId = "crossterm_winapi";
            target = { target, features }: target."windows";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "wincon" "winnt" "minwindef" ];
          }
        ];
        
      };
      "crossterm_input" = rec {
        crateName = "crossterm_input";
        version = "0.3.9";
        edition = "2018";
        sha256 = "0qxn9n0n4svwyc03y8b7nydm0ad8czdjyfgc66p6nnasl1f2bpf6";
        authors = [
          "T. Post"
        ];
        dependencies = [
          {
            name = "crossterm_screen";
            packageId = "crossterm_screen";
          }
          {
            name = "crossterm_utils";
            packageId = "crossterm_utils";
          }
          {
            name = "crossterm_winapi";
            packageId = "crossterm_winapi";
            target = { target, features }: target."windows";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "winnt" "winuser" ];
          }
        ];
        
      };
      "crossterm_screen" = rec {
        crateName = "crossterm_screen";
        version = "0.2.5";
        edition = "2018";
        sha256 = "0xkv1ynf3l8693zbavjdll7f2x6fjw5zq6n42kaj4k639x499whb";
        authors = [
          "T. Post"
        ];
        dependencies = [
          {
            name = "crossterm_utils";
            packageId = "crossterm_utils";
          }
          {
            name = "crossterm_winapi";
            packageId = "crossterm_winapi";
            target = { target, features }: target."windows";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "minwindef" "wincon" ];
          }
        ];
        
      };
      "crossterm_style" = rec {
        crateName = "crossterm_style";
        version = "0.4.1";
        edition = "2018";
        sha256 = "02cc1mzkglk1g6rry3v2r7fng43sns804vlpi9m496p2ca10z5cb";
        authors = [
          "T. Post"
        ];
        dependencies = [
          {
            name = "crossterm_utils";
            packageId = "crossterm_utils";
          }
          {
            name = "crossterm_winapi";
            packageId = "crossterm_winapi";
            target = { target, features }: target."windows";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "wincon" ];
          }
        ];
        
      };
      "crossterm_terminal" = rec {
        crateName = "crossterm_terminal";
        version = "0.2.6";
        edition = "2018";
        sha256 = "0di6468avyc82zm579xrfk5flhfbbjj4wjisyjhnmhp036sld1fv";
        authors = [
          "T. Post"
        ];
        dependencies = [
          {
            name = "crossterm_cursor";
            packageId = "crossterm_cursor";
          }
          {
            name = "crossterm_utils";
            packageId = "crossterm_utils";
          }
          {
            name = "crossterm_winapi";
            packageId = "crossterm_winapi";
            target = { target, features }: target."windows";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
        ];
        
      };
      "crossterm_utils" = rec {
        crateName = "crossterm_utils";
        version = "0.2.4";
        edition = "2015";
        sha256 = "05q6iazwqacdmsramxnpx5njy6iapk4hby6zkmk31is040dsfx7q";
        authors = [
          "T. Post"
        ];
        dependencies = [
          {
            name = "crossterm_winapi";
            packageId = "crossterm_winapi";
            target = { target, features }: target."windows";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "wincon" ];
          }
        ];
        
      };
      "crossterm_winapi" = rec {
        crateName = "crossterm_winapi";
        version = "0.1.5";
        edition = "2015";
        sha256 = "0i8x72ffypprf2lnqi6zfgzz1didibs24w4pkdm2wibwcb6ffmdh";
        authors = [
          "T. Post"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            features = [ "winbase" "consoleapi" "processenv" "handleapi" ];
          }
        ];
        
      };
      "csv" = rec {
        crateName = "csv";
        version = "1.1.1";
        edition = "2018";
        sha256 = "0zgq18xam24rbggm3ybmrygipa0mrr7rscf9r8hmi9vkzp6rql9p";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "bstr";
            packageId = "bstr";
            features = [ "serde1" ];
          }
          {
            name = "csv-core";
            packageId = "csv-core";
          }
          {
            name = "itoa";
            packageId = "itoa";
          }
          {
            name = "ryu";
            packageId = "ryu";
          }
          {
            name = "serde";
            packageId = "serde 1.0.100";
          }
        ];
        devDependencies = [
          {
            name = "serde";
            packageId = "serde 1.0.100";
            features = [ "derive" ];
          }
        ];
        
      };
      "csv-core" = rec {
        crateName = "csv-core";
        version = "0.1.6";
        edition = "2018";
        sha256 = "0k5zs0x0qmmn27pa5kcg86lg84s29491fw5sh3zswxswnavasp4v";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "memchr";
            packageId = "memchr";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "libc" ];
          "libc" = [ "memchr/libc" ];
        };
        resolvedDefaultFeatures = [ "default" "libc" ];
      };
      "ctor" = rec {
        crateName = "ctor";
        version = "0.1.9";
        edition = "2018";
        sha256 = "0b096a0i9q00gbkwhmqw2jn7zp9r4sw88039bwmjbha3jrhifk1v";
        procMacro = true;
        authors = [
          "Matt Mastracci <matthew@mastracci.com>"
        ];
        dependencies = [
          {
            name = "quote";
            packageId = "quote 0.6.13";
          }
          {
            name = "syn";
            packageId = "syn 0.15.43";
            usesDefaultFeatures = false;
            features = [ "full" "fold" "parsing" "printing" "proc-macro" ];
          }
        ];
        
      };
      "ctrlc" = rec {
        crateName = "ctrlc";
        version = "3.1.3";
        edition = "2015";
        sha256 = "0zz8ad4bk28s111af5vy1c5kii4zw0cgh87ivzgj28f8nkcd5py7";
        authors = [
          "Antti Keränen <detegr@gmail.com>"
        ];
        dependencies = [
          {
            name = "nix";
            packageId = "nix 0.14.1";
            target = { target, features }: target."unix";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "consoleapi" "handleapi" "synchapi" "winbase" ];
          }
        ];
        devDependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = {target, features}: target."windows";
            features = [ "fileapi" "processenv" "winnt" ];
          }
        ];
        features = {
        };
      };
      "curl" = rec {
        crateName = "curl";
        version = "0.4.22";
        edition = "2015";
        sha256 = "0pwnkw1dwq39lfgx3z2l5zgsfhraagppjql91jn4jklcm8i9mvgq";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "curl-sys";
            packageId = "curl-sys";
            usesDefaultFeatures = false;
          }
          {
            name = "kernel32-sys";
            packageId = "kernel32-sys";
            target = { target, features }: (target."env" == "msvc");
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "openssl-probe";
            packageId = "openssl-probe";
            optional = true;
            target = { target, features }: (target."unix" && (!(target."os" == "macos")));
          }
          {
            name = "openssl-sys";
            packageId = "openssl-sys";
            optional = true;
            target = { target, features }: (target."unix" && (!(target."os" == "macos")));
          }
          {
            name = "schannel";
            packageId = "schannel";
            target = { target, features }: (target."env" == "msvc");
          }
          {
            name = "socket2";
            packageId = "socket2";
          }
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
            target = { target, features }: target."windows";
          }
        ];
        features = {
          "default" = [ "ssl" ];
          "force-system-lib-on-osx" = [ "curl-sys/force-system-lib-on-osx" ];
          "http2" = [ "curl-sys/http2" ];
          "ssl" = [ "openssl-sys" "openssl-probe" "curl-sys/ssl" ];
          "static-curl" = [ "curl-sys/static-curl" ];
          "static-ssl" = [ "curl-sys/static-ssl" ];
        };
        resolvedDefaultFeatures = [ "default" "http2" "openssl-probe" "openssl-sys" "ssl" ];
      };
      "curl-sys" = rec {
        crateName = "curl-sys";
        version = "0.4.20";
        edition = "2015";
        sha256 = "02542zmvl3fpdqf7ai4cqnamm4albx9j645dkjx5qr1myq8ax42y";
        libName = "curl_sys";
        libPath = "lib.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "libnghttp2-sys";
            packageId = "libnghttp2-sys";
            optional = true;
          }
          {
            name = "libz-sys";
            packageId = "libz-sys";
          }
          {
            name = "openssl-sys";
            packageId = "openssl-sys";
            optional = true;
            target = { target, features }: (target."unix" && (!(target."os" == "macos")));
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "winsock2" "ws2def" ];
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
          {
            name = "vcpkg";
            packageId = "vcpkg";
            target = {target, features}: (target."env" == "msvc");
          }
        ];
        features = {
          "default" = [ "ssl" ];
          "http2" = [ "libnghttp2-sys" ];
          "ssl" = [ "openssl-sys" ];
          "static-ssl" = [ "openssl-sys/vendored" ];
        };
        resolvedDefaultFeatures = [ "default" "http2" "libnghttp2-sys" "openssl-sys" "ssl" ];
      };
      "darwin-libproc" = rec {
        crateName = "darwin-libproc";
        version = "0.1.1";
        edition = "2018";
        sha256 = "0c8agzrimk8n60vv025a2132n3wa92lj2wv8f3vnnr6rz25airdd";
        authors = [
          "svartalf <self@svartalf.info>"
        ];
        dependencies = [
          {
            name = "darwin-libproc-sys";
            packageId = "darwin-libproc-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "memchr";
            packageId = "memchr";
          }
        ];
        
      };
      "darwin-libproc-sys" = rec {
        crateName = "darwin-libproc-sys";
        version = "0.1.1";
        edition = "2018";
        sha256 = "0h8m0cxx03hdflxvad43k79i5i5g0y5qmv9gn21i3nklil3il3f3";
        authors = [
          "svartalf <self@svartalf.info>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        
      };
      "decimal" = rec {
        crateName = "decimal";
        version = "2.0.4";
        edition = "2015";
        crateBin = [];
        sha256 = "1vb3i8vg1dxrw3kzbfiag3gg7rdjd73z80mwbwkq60vnphiqfig6";
        authors = [
          "Alkis Evlogimenos <alkis@evlogimenos.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "ord_subset";
            packageId = "ord_subset";
            optional = true;
          }
          {
            name = "rustc-serialize";
            packageId = "rustc-serialize";
            optional = true;
          }
          {
            name = "serde";
            packageId = "serde 1.0.100";
            optional = true;
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];
        features = {
          "default" = [ "ord_subset" "rustc-serialize" "serde" ];
        };
        resolvedDefaultFeatures = [ "default" "ord_subset" "rustc-serialize" "serde" ];
      };
      "deflate" = rec {
        crateName = "deflate";
        version = "0.7.20";
        edition = "2015";
        sha256 = "1d7d9fpmgjnznrksmd3vlv3dyw01wsrm11ifil6ag22871xnlyvh";
        authors = [
          "oyvindln <oyvindln@users.noreply.github.com>"
        ];
        dependencies = [
          {
            name = "adler32";
            packageId = "adler32";
          }
          {
            name = "byteorder";
            packageId = "byteorder";
          }
        ];
        features = {
          "gzip" = [ "gzip-header" ];
        };
      };
      "derive-new" = rec {
        crateName = "derive-new";
        version = "0.5.8";
        edition = "2015";
        sha256 = "1ncibp4jhpkym7namg3viqyw8hljd32n6abg64af8qjwrn91iwvi";
        procMacro = true;
        authors = [
          "Nick Cameron <ncameron@mozilla.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.1";
          }
          {
            name = "quote";
            packageId = "quote 1.0.2";
          }
          {
            name = "syn";
            packageId = "syn 1.0.4";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "difference" = rec {
        crateName = "difference";
        version = "2.0.0";
        edition = "2015";
        crateBin = [];
        sha256 = "1621wx4k8h452p6xzmzzvm7mz87kxh4yqz0kzxfjj9xmjxlbyk2j";
        authors = [
          "Johann Hofmann <mail@johann-hofmann.com>"
        ];
        features = {
          "bin" = [ "getopts" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "directories" = rec {
        crateName = "directories";
        version = "1.0.2";
        edition = "2015";
        sha256 = "03ybnr3afpspias9d5p12r4pzmax5jc7ijx2ri7psq4h86k3glvj";
        authors = [
          "Simon Ochsenreither <simon@ochsenreither.de>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "knownfolders" "objbase" "shlobj" "winbase" "winerror" ];
          }
        ];
        
      };
      "dirs 1.0.5" = rec {
        crateName = "dirs";
        version = "1.0.5";
        edition = "2015";
        sha256 = "009rrhzj9pxyncmm2vhlj70npg0cgggv2hjbbkiwdl9vccq8kmrz";
        authors = [
          "Simon Ochsenreither <simon@ochsenreither.de>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "redox_users";
            packageId = "redox_users";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "knownfolders" "objbase" "shlobj" "winbase" "winerror" ];
          }
        ];
        
      };
      "dirs 2.0.2" = rec {
        crateName = "dirs";
        version = "2.0.2";
        edition = "2015";
        sha256 = "1qymhyq7w7wlf1dirq6gsnabdyzg6yi2yyxkx6c4ldlkbjdaibhk";
        authors = [
          "Simon Ochsenreither <simon@ochsenreither.de>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "dirs-sys";
            packageId = "dirs-sys";
          }
        ];
        
      };
      "dirs-sys" = rec {
        crateName = "dirs-sys";
        version = "0.3.4";
        edition = "2015";
        sha256 = "0yyykdcmbc476z1v9m4z5jb8y91dw6kgzpkiqi2ig07xx0yv585g";
        authors = [
          "Simon Ochsenreither <simon@ochsenreither.de>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "redox_users";
            packageId = "redox_users";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "knownfolders" "objbase" "shlobj" "winbase" "winerror" ];
          }
        ];
        
      };
      "dtoa" = rec {
        crateName = "dtoa";
        version = "0.4.4";
        edition = "2015";
        sha256 = "0phbm7i0dpn44gzi07683zxaicjap5064w62pidci4fhhciv8mza";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        
      };
      "dunce" = rec {
        crateName = "dunce";
        version = "1.0.0";
        edition = "2018";
        sha256 = "0kys739zvwcvsngspa4lw2dksigiima17i25c09d2j45m3v6pbfh";
        authors = [
          "Kornel <kornel@geekhood.net>"
        ];
        
      };
      "either" = rec {
        crateName = "either";
        version = "1.5.2";
        edition = "2015";
        sha256 = "0yyggfd5yq9hyyp0bd5jj0fgz3rwws42d19ri0znxwwqs3hcy9sm";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
      };
      "encode_unicode" = rec {
        crateName = "encode_unicode";
        version = "0.3.5";
        edition = "2015";
        sha256 = "1g8a8pixkxz6r927f4sc4r15qyc0szxdxb1732v8q7h0di4wkclh";
        authors = [
          "Torbjørn Birch Moltu <t.b.moltu@lyse.net>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "enum-utils" = rec {
        crateName = "enum-utils";
        version = "0.1.1";
        edition = "2018";
        sha256 = "0dl8bf2gm7y3k8ds88zbzdivwfsfbh0vcyp1jgxpj649v5rfc6hz";
        procMacro = true;
        authors = [
          "Dylan MacKenzie <ecstaticmorse@gmail.com>"
        ];
        dependencies = [
          {
            name = "enum-utils-from-str";
            packageId = "enum-utils-from-str";
          }
          {
            name = "failure";
            packageId = "failure";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2 0.4.30";
          }
          {
            name = "quote";
            packageId = "quote 0.6.13";
          }
          {
            name = "serde_derive_internals";
            packageId = "serde_derive_internals";
          }
          {
            name = "syn";
            packageId = "syn 0.15.43";
          }
        ];
        
      };
      "enum-utils-from-str" = rec {
        crateName = "enum-utils-from-str";
        version = "0.1.0";
        edition = "2018";
        sha256 = "06l0flhl4y8iwdlznryhyqs6d63z62ld9g9a28735mvn3ww6jmkb";
        authors = [
          "Dylan MacKenzie <ecstaticmorse@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 0.4.30";
          }
          {
            name = "quote";
            packageId = "quote 0.6.13";
          }
        ];
        
      };
      "env_logger" = rec {
        crateName = "env_logger";
        version = "0.6.2";
        edition = "2015";
        sha256 = "1lx2s5nk96xx4i3m4zc4ghqgi8kb07dsnyiv8jk2clhax42dxz5a";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "atty";
            packageId = "atty";
            optional = true;
          }
          {
            name = "humantime";
            packageId = "humantime";
            optional = true;
          }
          {
            name = "log";
            packageId = "log";
            features = [ "std" ];
          }
          {
            name = "regex";
            packageId = "regex";
            optional = true;
          }
          {
            name = "termcolor";
            packageId = "termcolor";
            optional = true;
          }
        ];
        features = {
          "default" = [ "termcolor" "atty" "humantime" "regex" ];
        };
        resolvedDefaultFeatures = [ "atty" "default" "humantime" "regex" "termcolor" ];
      };
      "failure" = rec {
        crateName = "failure";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1qppmgv4i5jj6vrss91qackqnl0a12h7lnby4l7j5fdy78yxhnvr";
        authors = [
          "Without Boats <boats@mozilla.com>"
        ];
        dependencies = [
          {
            name = "backtrace";
            packageId = "backtrace";
            optional = true;
          }
          {
            name = "failure_derive";
            packageId = "failure_derive";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" "derive" ];
          "derive" = [ "failure_derive" ];
          "std" = [ "backtrace" ];
        };
        resolvedDefaultFeatures = [ "backtrace" "default" "derive" "failure_derive" "std" ];
      };
      "failure_derive" = rec {
        crateName = "failure_derive";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1q97n7dp51j5hndzic9ng2fgn6f3z5ya1992w84l7vypby8n647a";
        procMacro = true;
        authors = [
          "Without Boats <woboats@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 0.4.30";
          }
          {
            name = "quote";
            packageId = "quote 0.6.13";
          }
          {
            name = "syn";
            packageId = "syn 0.15.43";
          }
          {
            name = "synstructure";
            packageId = "synstructure";
          }
        ];
        features = {
        };
      };
      "fallible-iterator" = rec {
        crateName = "fallible-iterator";
        version = "0.2.0";
        edition = "2018";
        sha256 = "1xq759lsr8gqss7hva42azn3whgrbrs2sd9xpn92c5ickxm1fhs4";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "fallible-streaming-iterator" = rec {
        crateName = "fallible-streaming-iterator";
        version = "0.1.9";
        edition = "2015";
        sha256 = "0nj6j26p71bjy8h42x6jahx1hn0ng6mc2miwpgwnp8vnwqf4jq3k";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        features = {
        };
      };
      "fixedbitset" = rec {
        crateName = "fixedbitset";
        version = "0.1.9";
        edition = "2015";
        sha256 = "0czam11mi80dbyhf4rd4lz0ihcf7vkfchrdcrn45wbs0h40dxm46";
        authors = [
          "bluss"
        ];
        
      };
      "flate2" = rec {
        crateName = "flate2";
        version = "1.0.9";
        edition = "2015";
        sha256 = "1n639gc7sbmrkir6pif608xqpwcv60kigmp5cn9x7m8892nk82am";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "crc32fast";
            packageId = "crc32fast";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "miniz-sys";
            packageId = "miniz-sys";
            optional = true;
          }
          {
            name = "miniz_oxide_c_api";
            packageId = "miniz_oxide_c_api";
            optional = true;
            features = [ "no_c_export" ];
          }
          {
            name = "miniz_oxide_c_api";
            packageId = "miniz_oxide_c_api";
            target = { target, features }: ((target."arch" == "wasm32") && (!(target."os" == "emscripten")));
            features = [ "no_c_export" ];
          }
        ];
        features = {
          "default" = [ "miniz-sys" ];
          "rust_backend" = [ "miniz_oxide_c_api" ];
          "tokio" = [ "tokio-io" "futures" ];
          "zlib" = [ "libz-sys" ];
        };
        resolvedDefaultFeatures = [ "default" "miniz-sys" ];
      };
      "fnv" = rec {
        crateName = "fnv";
        version = "1.0.6";
        edition = "2015";
        sha256 = "1ww56bi1r5b8id3ns9j3qxbi7w5h005rzhiryy0zi9h97raqbb9g";
        libPath = "lib.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        
      };
      "fuchsia-cprng" = rec {
        crateName = "fuchsia-cprng";
        version = "0.1.1";
        edition = "2018";
        sha256 = "1fnkqrbz7ixxzsb04bsz9p0zzazanma8znfdqjvh39n14vapfvx0";
        authors = [
          "Erick Tryzelaar <etryzelaar@google.com>"
        ];
        
      };
      "futures" = rec {
        crateName = "futures";
        version = "0.1.28";
        edition = "2015";
        sha256 = "0saq8ffjw1pwf1pzhw3kq1z7dfq6wpd8x93dnni6vbkc799kkp25";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "use_std" "with-deprecated" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" "with-deprecated" ];
      };
      "futures-async-stream" = rec {
        crateName = "futures-async-stream";
        version = "0.1.0-alpha.5";
        edition = "2018";
        sha256 = "16y92g398pkhqfiz904qwiiq3mjwd7xdvlxajir8x2i0ix11ncgn";
        authors = [
          "Taiki Endo <te316e89@gmail.com>"
        ];
        dependencies = [
          {
            name = "futures-async-stream-macro";
            packageId = "futures-async-stream-macro";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-core-preview";
            packageId = "futures-core-preview";
            usesDefaultFeatures = false;
          }
          {
            name = "pin-project";
            packageId = "pin-project";
            usesDefaultFeatures = false;
          }
        ];
        
      };
      "futures-async-stream-macro" = rec {
        crateName = "futures-async-stream-macro";
        version = "0.1.0-alpha.5";
        edition = "2018";
        sha256 = "1ni9mliwzbgd3shic5k4v87vaf15yp0v2j4y63ywfagaq88mhrn7";
        procMacro = true;
        authors = [
          "Taiki Endo <te316e89@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.1";
          }
          {
            name = "quote";
            packageId = "quote 1.0.2";
          }
          {
            name = "syn";
            packageId = "syn 1.0.4";
            features = [ "full" "visit-mut" ];
          }
        ];
        
      };
      "futures-channel-preview" = rec {
        crateName = "futures-channel-preview";
        version = "0.3.0-alpha.18";
        edition = "2018";
        sha256 = "04jvrrx8nsdln2dpaps0mm17j80knkrffm240ivsx964j81gsxzl";
        libName = "futures_channel";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "futures-core-preview";
            packageId = "futures-core-preview";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-sink-preview";
            packageId = "futures-sink-preview";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "futures-core-preview/alloc" ];
          "cfg-target-has-atomic" = [ "futures-core-preview/cfg-target-has-atomic" ];
          "default" = [ "std" ];
          "nightly" = [ "futures-core-preview/nightly" ];
          "sink" = [ "futures-sink-preview" ];
          "std" = [ "alloc" "futures-core-preview/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "futures-sink-preview" "sink" "std" ];
      };
      "futures-core-preview" = rec {
        crateName = "futures-core-preview";
        version = "0.3.0-alpha.18";
        edition = "2018";
        sha256 = "1saki42jrcbw1hws1rb99zxsq4v39fyq236svi3kh6xqfkvjcbsa";
        libName = "futures_core";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "futures-executor-preview" = rec {
        crateName = "futures-executor-preview";
        version = "0.3.0-alpha.18";
        edition = "2018";
        sha256 = "0a3m9vslqwrsh1yvz27r06432a8f8rvpw1gh0nya3y3dj895cw40";
        libName = "futures_executor";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "futures-core-preview";
            packageId = "futures-core-preview";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-util-preview";
            packageId = "futures-util-preview";
            usesDefaultFeatures = false;
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "futures-core-preview/std" "futures-util-preview/std" "num_cpus" ];
        };
        resolvedDefaultFeatures = [ "num_cpus" "std" ];
      };
      "futures-io-preview" = rec {
        crateName = "futures-io-preview";
        version = "0.3.0-alpha.18";
        edition = "2018";
        sha256 = "1lfxnmvr6ljff5z5j1n9qff4vriwcv3zwdq4gd2zj8zdr70y0zgf";
        libName = "futures_io";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "futures-preview" = rec {
        crateName = "futures-preview";
        version = "0.3.0-alpha.18";
        edition = "2018";
        sha256 = "1dg4qijba037xqykminifxpnjasabcjx9pwa3ww8wcmj9w6gka7g";
        libName = "futures";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "futures-channel-preview";
            packageId = "futures-channel-preview";
            usesDefaultFeatures = false;
            features = [ "sink" ];
          }
          {
            name = "futures-core-preview";
            packageId = "futures-core-preview";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-executor-preview";
            packageId = "futures-executor-preview";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-io-preview";
            packageId = "futures-io-preview";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-sink-preview";
            packageId = "futures-sink-preview";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-util-preview";
            packageId = "futures-util-preview";
            usesDefaultFeatures = false;
            features = [ "sink" ];
          }
        ];
        features = {
          "alloc" = [ "futures-core-preview/alloc" "futures-sink-preview/alloc" "futures-channel-preview/alloc" "futures-util-preview/alloc" ];
          "async-await" = [ "futures-util-preview/async-await" "futures-util-preview/join-macro" "futures-util-preview/select-macro" ];
          "cfg-target-has-atomic" = [ "futures-core-preview/cfg-target-has-atomic" "futures-channel-preview/cfg-target-has-atomic" "futures-util-preview/cfg-target-has-atomic" ];
          "compat" = [ "std" "futures-util-preview/compat" ];
          "default" = [ "std" ];
          "io-compat" = [ "compat" "futures-util-preview/io-compat" ];
          "nightly" = [ "futures-core-preview/nightly" "futures-channel-preview/nightly" "futures-util-preview/nightly" ];
          "std" = [ "alloc" "futures-core-preview/std" "futures-executor-preview/std" "futures-io-preview/std" "futures-sink-preview/std" "futures-util-preview/std" "futures-util-preview/io" "futures-util-preview/channel" ];
        };
        resolvedDefaultFeatures = [ "alloc" "compat" "default" "io-compat" "std" ];
      };
      "futures-sink-preview" = rec {
        crateName = "futures-sink-preview";
        version = "0.3.0-alpha.18";
        edition = "2018";
        sha256 = "0na8j9ysdf1qf4mv4wkfvk3qqigd1sf7x84lw1w1ngc6h4j5mdp9";
        libName = "futures_sink";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "futures-core-preview";
            packageId = "futures-core-preview";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "futures-core-preview/alloc" ];
          "default" = [ "std" ];
          "std" = [ "alloc" "futures-core-preview/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
      "futures-timer" = rec {
        crateName = "futures-timer";
        version = "0.4.0";
        edition = "2018";
        sha256 = "0cvx9ahj6ilvaqia3rj16cvmhzn1n10yfwi3xl1glm8kqcpiv3w7";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "futures-core-preview";
            packageId = "futures-core-preview";
          }
          {
            name = "futures-util-preview";
            packageId = "futures-util-preview";
          }
          {
            name = "pin-utils";
            packageId = "pin-utils";
          }
        ];
        
      };
      "futures-util-preview" = rec {
        crateName = "futures-util-preview";
        version = "0.3.0-alpha.18";
        edition = "2018";
        sha256 = "07163nzg6fsw7ankqkx9n3xrcka1n37g6817pwjc1379y6pkvxbx";
        libName = "futures_util";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures";
            rename = "futures_01";
            optional = true;
          }
          {
            name = "futures-channel-preview";
            packageId = "futures-channel-preview";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "futures-core-preview";
            packageId = "futures-core-preview";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-io-preview";
            packageId = "futures-io-preview";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "futures-sink-preview";
            packageId = "futures-sink-preview";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "memchr";
            packageId = "memchr";
            optional = true;
          }
          {
            name = "pin-utils";
            packageId = "pin-utils";
          }
          {
            name = "slab";
            packageId = "slab";
            optional = true;
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
            optional = true;
          }
        ];
        features = {
          "alloc" = [ "futures-core-preview/alloc" ];
          "async-await" = [ "std" ];
          "cfg-target-has-atomic" = [ "futures-core-preview/cfg-target-has-atomic" ];
          "channel" = [ "std" "futures-channel-preview" ];
          "compat" = [ "std" "futures_01" ];
          "default" = [ "std" ];
          "io" = [ "std" "futures-io-preview" "memchr" ];
          "io-compat" = [ "io" "compat" "tokio-io" ];
          "join-macro" = [ "async-await" "futures-join-macro-preview" "proc-macro-hack" "proc-macro-nested" ];
          "nightly" = [ "futures-core-preview/nightly" ];
          "select-macro" = [ "async-await" "futures-select-macro-preview" "proc-macro-hack" "proc-macro-nested" "rand" ];
          "sink" = [ "futures-sink-preview" ];
          "std" = [ "alloc" "futures-core-preview/std" "slab" ];
        };
        resolvedDefaultFeatures = [ "alloc" "channel" "compat" "default" "futures-channel-preview" "futures-io-preview" "futures-sink-preview" "futures_01" "io" "io-compat" "memchr" "sink" "slab" "std" "tokio-io" ];
      };
      "futures_codec" = rec {
        crateName = "futures_codec";
        version = "0.2.5";
        edition = "2018";
        sha256 = "1874n7pzjw0r6jlkd9kaqch82x90s6w563ai2i8i7zak2g9jqm9n";
        authors = [
          "Matt Hunzinger <matthunz2@gmail.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "futures-preview";
            packageId = "futures-preview";
          }
        ];
        
      };
      "getrandom" = rec {
        crateName = "getrandom";
        version = "0.1.8";
        edition = "2018";
        sha256 = "0j9bnr9dk6p7s4f81frawfcjfl9b5rb2ll3lwnsrqz5fy3k3vwrl";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" || (target."os" == "redox") || (target."os" == "wasi"));
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "getset" = rec {
        crateName = "getset";
        version = "0.0.8";
        edition = "2018";
        sha256 = "0rmq79q5wpb4wkc928vchd98b3l9v8nv5zmk3cb10kndmq9mnyhi";
        procMacro = true;
        authors = [
          "Ana Hobden <ana@hoverbear.org>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.1";
            usesDefaultFeatures = false;
          }
          {
            name = "quote";
            packageId = "quote 1.0.2";
          }
          {
            name = "syn";
            packageId = "syn 1.0.4";
          }
        ];
        
      };
      "git2" = rec {
        crateName = "git2";
        version = "0.10.1";
        edition = "2018";
        sha256 = "10jazcfnni2j1dxv1faizk1x7bn55clr0sd5x7n6gv5mzf373wir";
        authors = [
          "Josh Triplett <josh@joshtriplett.org>"
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "libgit2-sys";
            packageId = "libgit2-sys";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "url";
            packageId = "url";
          }
        ];
        features = {
          "default" = [ "ssh" "https" "ssh_key_from_memory" ];
          "https" = [ "libgit2-sys/https" "openssl-sys" "openssl-probe" ];
          "ssh" = [ "libgit2-sys/ssh" ];
          "ssh_key_from_memory" = [ "libgit2-sys/ssh_key_from_memory" ];
          "vendored-openssl" = [ "openssl-sys/vendored" ];
        };
      };
      "glob" = rec {
        crateName = "glob";
        version = "0.3.0";
        edition = "2015";
        sha256 = "0x25wfr7vg3mzxc9x05dcphvd3nwlcmbnxrvwcvrrdwplcrrk4cv";
        authors = [
          "The Rust Project Developers"
        ];
        
      };
      "heck" = rec {
        crateName = "heck";
        version = "0.3.1";
        edition = "2015";
        sha256 = "01a2v7yvkiqxakdqz4hw3w3g4sm52ivz9cs3qcsv2arxsmw4wmi0";
        authors = [
          "Without Boats <woboats@gmail.com>"
        ];
        dependencies = [
          {
            name = "unicode-segmentation";
            packageId = "unicode-segmentation";
          }
        ];
        
      };
      "heim" = rec {
        crateName = "heim";
        version = "0.0.8-alpha.1";
        edition = "2018";
        sha256 = "0rbznz0arcc9w4djbngrxxjypk3zxxd93rwsv8rpkmxyld52ls82";
        authors = [
          "svartalf <self@svartalf.info>"
        ];
        dependencies = [
          {
            name = "heim-common";
            packageId = "heim-common";
          }
          {
            name = "heim-cpu";
            packageId = "heim-cpu";
            optional = true;
          }
          {
            name = "heim-derive";
            packageId = "heim-derive";
          }
          {
            name = "heim-disk";
            packageId = "heim-disk";
            optional = true;
          }
          {
            name = "heim-host";
            packageId = "heim-host";
            optional = true;
          }
          {
            name = "heim-memory";
            packageId = "heim-memory";
            optional = true;
          }
          {
            name = "heim-net";
            packageId = "heim-net";
            optional = true;
          }
          {
            name = "heim-process";
            packageId = "heim-process";
            optional = true;
          }
          {
            name = "heim-runtime";
            packageId = "heim-runtime";
          }
          {
            name = "heim-sensors";
            packageId = "heim-sensors";
            optional = true;
          }
          {
            name = "heim-virt";
            packageId = "heim-virt";
            optional = true;
          }
        ];
        features = {
          "cpu" = [ "heim-cpu" ];
          "default" = [ "host" "cpu" "memory" "disk" "net" "process" "virt" "sensors" "runtime-polyfill" ];
          "disk" = [ "heim-disk" ];
          "host" = [ "heim-host" ];
          "memory" = [ "heim-memory" ];
          "net" = [ "heim-net" ];
          "process" = [ "heim-process" ];
          "runtime-polyfill" = [ "heim-runtime/runtime-polyfill" "heim-cpu/runtime-polyfill" "heim-cpu/runtime-polyfill" "heim-disk/runtime-polyfill" "heim-host/runtime-polyfill" "heim-memory/runtime-polyfill" "heim-net/runtime-polyfill" "heim-process/runtime-polyfill" "heim-virt/runtime-polyfill" "heim-sensors/runtime-polyfill" ];
          "sensors" = [ "heim-sensors" ];
          "virt" = [ "heim-virt" ];
        };
        resolvedDefaultFeatures = [ "cpu" "default" "disk" "heim-cpu" "heim-disk" "heim-host" "heim-memory" "heim-net" "heim-process" "heim-sensors" "heim-virt" "host" "memory" "net" "process" "runtime-polyfill" "sensors" "virt" ];
      };
      "heim-common" = rec {
        crateName = "heim-common";
        version = "0.0.8-alpha.1";
        edition = "2018";
        sha256 = "0w6vsgwf2x16mhzxvskxg9dfyg11lwwcpv2y29iriq08659hg62m";
        authors = [
          "svartalf <self@svartalf.info>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "core-foundation";
            packageId = "core-foundation";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "futures-core-preview";
            packageId = "futures-core-preview";
          }
          {
            name = "futures-util-preview";
            packageId = "futures-util-preview";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
            target = { target, features }: target."unix";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "mach";
            packageId = "mach 0.3.2";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "nix";
            packageId = "nix 0.15.0";
            target = { target, features }: target."unix";
          }
          {
            name = "pin-utils";
            packageId = "pin-utils";
          }
          {
            name = "uom";
            packageId = "uom 0.25.0";
            usesDefaultFeatures = false;
            features = [ "autoconvert" "f32" "f64" "u64" "si" "std" ];
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: (target."os" == "windows");
            features = [ "winnt" "minwindef" "libloaderapi" ];
          }
        ];
        
      };
      "heim-cpu" = rec {
        crateName = "heim-cpu";
        version = "0.0.8-alpha.1";
        edition = "2018";
        sha256 = "1hb9xx34yh8l9hah8lpjnp56gbmslwdb9plnz4win2da5rjkghk0";
        authors = [
          "svartalf <self@svartalf.info>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "heim-common";
            packageId = "heim-common";
          }
          {
            name = "heim-derive";
            packageId = "heim-derive";
          }
          {
            name = "heim-runtime";
            packageId = "heim-runtime";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."os" == "linux");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "mach";
            packageId = "mach 0.3.2";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: (target."os" == "windows");
            features = [ "powerbase" "sysinfoapi" "winnt" "processthreadsapi" "impl-default" "winbase" ];
          }
        ];
        features = {
          "runtime-polyfill" = [ "heim-runtime/runtime-polyfill" ];
        };
        resolvedDefaultFeatures = [ "runtime-polyfill" ];
      };
      "heim-derive" = rec {
        crateName = "heim-derive";
        version = "0.0.8-alpha.1";
        edition = "2018";
        sha256 = "0rja46bfglqgxyaalgh6zp7hjnyryw9rp0x6rsphccd0jvdjdwxk";
        procMacro = true;
        authors = [
          "svartalf <self@svartalf.info>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.1";
          }
          {
            name = "quote";
            packageId = "quote 1.0.2";
          }
          {
            name = "syn";
            packageId = "syn 1.0.4";
            usesDefaultFeatures = false;
            features = [ "derive" "full" "parsing" "printing" "proc-macro" ];
          }
        ];
        
      };
      "heim-disk" = rec {
        crateName = "heim-disk";
        version = "0.0.8-alpha.1";
        edition = "2018";
        sha256 = "18c5krbi0wj2nwpin8k8m2f7xnzp3fj2r3yhg8ly2k055m7wcxdx";
        authors = [
          "svartalf <self@svartalf.info>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "core-foundation";
            packageId = "core-foundation";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "heim-common";
            packageId = "heim-common";
          }
          {
            name = "heim-derive";
            packageId = "heim-derive";
          }
          {
            name = "heim-runtime";
            packageId = "heim-runtime";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "mach";
            packageId = "mach 0.3.2";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "widestring";
            packageId = "widestring";
            target = { target, features }: (target."os" == "windows");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: (target."os" == "windows");
            features = [ "std" "winnt" "ntdef" "fileapi" "handleapi" "ioapiset" "winioctl" "impl-default" "errhandlingapi" "winerror" "winbase" "ws2def" ];
          }
        ];
        features = {
          "runtime-polyfill" = [ "heim-runtime/runtime-polyfill" ];
        };
        resolvedDefaultFeatures = [ "runtime-polyfill" ];
      };
      "heim-host" = rec {
        crateName = "heim-host";
        version = "0.0.8-alpha.1";
        edition = "2018";
        sha256 = "1cgfwi2wwvr3pbgcq4m59b1ij01yhgd9pq091yga0s1mf9cch0b4";
        authors = [
          "svartalf <self@svartalf.info>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "heim-common";
            packageId = "heim-common";
          }
          {
            name = "heim-derive";
            packageId = "heim-derive";
          }
          {
            name = "heim-runtime";
            packageId = "heim-runtime";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "mach";
            packageId = "mach 0.3.2";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "platforms";
            packageId = "platforms";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: (target."os" == "windows");
            features = [ "sysinfoapi" "libloaderapi" "ws2def" "winbase" "minwindef" "winnt" "ntdef" ];
          }
        ];
        features = {
          "runtime-polyfill" = [ "heim-runtime/runtime-polyfill" ];
        };
        resolvedDefaultFeatures = [ "runtime-polyfill" ];
      };
      "heim-memory" = rec {
        crateName = "heim-memory";
        version = "0.0.8-alpha.1";
        edition = "2018";
        sha256 = "00z3cai8ajv7ksw42mwrqy8z3ncyz3qljgfdj8jcrbizdjdm8jj2";
        authors = [
          "svartalf <self@svartalf.info>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "heim-common";
            packageId = "heim-common";
          }
          {
            name = "heim-derive";
            packageId = "heim-derive";
          }
          {
            name = "heim-runtime";
            packageId = "heim-runtime";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."os" == "windows");
          }
          {
            name = "mach";
            packageId = "mach 0.3.2";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            usesDefaultFeatures = false;
            target = { target, features }: (target."os" == "windows");
            features = [ "minwindef" "sysinfoapi" ];
          }
        ];
        features = {
          "runtime-polyfill" = [ "heim-runtime/runtime-polyfill" ];
        };
        resolvedDefaultFeatures = [ "runtime-polyfill" ];
      };
      "heim-net" = rec {
        crateName = "heim-net";
        version = "0.0.8-alpha.1";
        edition = "2018";
        sha256 = "16ijgpbwvvd0z4y0h83ml0pzhj85cda1zk1yf74c3nw6psxbrsyh";
        authors = [
          "svartalf <self@svartalf.info>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "heim-common";
            packageId = "heim-common";
          }
          {
            name = "heim-derive";
            packageId = "heim-derive";
          }
          {
            name = "heim-runtime";
            packageId = "heim-runtime";
          }
          {
            name = "hex";
            packageId = "hex 0.4.0";
            target = { target, features }: (target."os" == "linux");
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "macaddr";
            packageId = "macaddr";
          }
          {
            name = "nix";
            packageId = "nix 0.15.0";
            target = { target, features }: target."unix";
          }
        ];
        features = {
          "runtime-polyfill" = [ "heim-runtime/runtime-polyfill" ];
        };
        resolvedDefaultFeatures = [ "runtime-polyfill" ];
      };
      "heim-process" = rec {
        crateName = "heim-process";
        version = "0.0.8-alpha.1";
        edition = "2018";
        sha256 = "0zfacq650sfk4n6fp5frqgpdb2qrrjmc5chzfa48cw1w2afhsksn";
        authors = [
          "svartalf <self@svartalf.info>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "darwin-libproc";
            packageId = "darwin-libproc";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "heim-common";
            packageId = "heim-common";
          }
          {
            name = "heim-cpu";
            packageId = "heim-cpu";
          }
          {
            name = "heim-derive";
            packageId = "heim-derive";
          }
          {
            name = "heim-host";
            packageId = "heim-host";
            target = { target, features }: (target."os" == "linux");
          }
          {
            name = "heim-host";
            packageId = "heim-host";
            target = { target, features }: (target."os" == "windows");
          }
          {
            name = "heim-net";
            packageId = "heim-net";
            target = { target, features }: (target."os" == "linux");
          }
          {
            name = "heim-runtime";
            packageId = "heim-runtime";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "mach";
            packageId = "mach 0.3.2";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "memchr";
            packageId = "memchr";
          }
          {
            name = "ntapi";
            packageId = "ntapi";
            target = { target, features }: (target."os" == "windows");
          }
          {
            name = "ordered-float";
            packageId = "ordered-float";
            usesDefaultFeatures = false;
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            usesDefaultFeatures = false;
            target = { target, features }: (target."os" == "windows");
            features = [ "impl-default" "minwindef" "winnt" "winbase" "handleapi" "psapi" "processthreadsapi" "winerror" "tlhelp32" ];
          }
        ];
        features = {
          "runtime-polyfill" = [ "heim-runtime/runtime-polyfill" ];
        };
        resolvedDefaultFeatures = [ "runtime-polyfill" ];
      };
      "heim-runtime" = rec {
        crateName = "heim-runtime";
        version = "0.0.4-alpha.1";
        edition = "2018";
        sha256 = "06gsvmz0mv94qn9hgyfvsj3la6kjpxs6swq0vhr4azqbw2kb4nfz";
        authors = [
          "svartalf <self@svartalf.info>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "futures-channel-preview";
            packageId = "futures-channel-preview";
            optional = true;
          }
          {
            name = "heim-common";
            packageId = "heim-common";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
            optional = true;
          }
          {
            name = "threadpool";
            packageId = "threadpool";
            optional = true;
          }
        ];
        features = {
          "default" = [ "runtime-polyfill" ];
          "runtime-polyfill" = [ "threadpool" "lazy_static" "futures-channel-preview" ];
        };
        resolvedDefaultFeatures = [ "default" "futures-channel-preview" "lazy_static" "runtime-polyfill" "threadpool" ];
      };
      "heim-sensors" = rec {
        crateName = "heim-sensors";
        version = "0.0.3-alpha.1";
        edition = "2018";
        sha256 = "1kd7g5p960gj5qdrcg44mkfzgyq134vlnsi39sp2dak20lygqaji";
        authors = [
          "svartalf <self@svartalf.info>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "heim-common";
            packageId = "heim-common";
          }
          {
            name = "heim-derive";
            packageId = "heim-derive";
          }
          {
            name = "heim-runtime";
            packageId = "heim-runtime";
          }
        ];
        features = {
          "runtime-polyfill" = [ "heim-runtime/runtime-polyfill" ];
        };
        resolvedDefaultFeatures = [ "runtime-polyfill" ];
      };
      "heim-virt" = rec {
        crateName = "heim-virt";
        version = "0.0.8-alpha.1";
        edition = "2018";
        sha256 = "0mgipmg7svy2y0llgfn0kxdwxacnsa7bp7s4k6c719d0sa22ldwm";
        authors = [
          "svartalf <self@svartalf.info>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "heim-common";
            packageId = "heim-common";
          }
          {
            name = "heim-runtime";
            packageId = "heim-runtime";
          }
          {
            name = "raw-cpuid";
            packageId = "raw-cpuid";
            target = { target, features }: (target."os" == "linux");
          }
        ];
        features = {
          "runtime-polyfill" = [ "heim-runtime/runtime-polyfill" ];
        };
        resolvedDefaultFeatures = [ "runtime-polyfill" ];
      };
      "hex 0.3.2" = rec {
        crateName = "hex";
        version = "0.3.2";
        edition = "2015";
        sha256 = "0xsdcjiik5j750j67zk42qdnmm4ahirk3gmkmcqgq7qls2jjcl40";
        authors = [
          "KokaKiwi <kokakiwi@kokakiwi.net>"
        ];
        features = {
        };
      };
      "hex 0.4.0" = rec {
        crateName = "hex";
        version = "0.4.0";
        edition = "2018";
        sha256 = "0glsfrx2pxfsf6ivxj7vfrvd7g78j4z47ssgm5idm8p376z3jfq2";
        authors = [
          "KokaKiwi <kokakiwi@kokakiwi.net>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "http" = rec {
        crateName = "http";
        version = "0.1.18";
        edition = "2015";
        sha256 = "1r5nlliz3340dqn1fanr4f13lxfqiwp9r1mhgw8lkr1rz5bcnarp";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Carl Lerche <me@carllerche.com>"
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "itoa";
            packageId = "itoa";
          }
        ];
        
      };
      "humantime" = rec {
        crateName = "humantime";
        version = "1.2.0";
        edition = "2015";
        sha256 = "057ilhy6vc9iqhhby5ymh45m051pgxwq2z437gwkbnqhw7rfb9rw";
        authors = [
          "Paul Colomiets <paul@colomiets.name>"
        ];
        dependencies = [
          {
            name = "quick-error";
            packageId = "quick-error";
          }
        ];
        
      };
      "idna" = rec {
        crateName = "idna";
        version = "0.2.0";
        edition = "2015";
        sha256 = "1a9066imqpdrm1aavfasdyb1zahqaz8jmdcwdawvb1pf60y6gqh2";
        authors = [
          "The rust-url developers"
        ];
        dependencies = [
          {
            name = "matches";
            packageId = "matches";
          }
          {
            name = "unicode-bidi";
            packageId = "unicode-bidi";
          }
          {
            name = "unicode-normalization";
            packageId = "unicode-normalization";
          }
        ];
        
      };
      "image" = rec {
        crateName = "image";
        version = "0.22.2";
        edition = "2015";
        sha256 = "0rrcghjyvnf3mdah80ysq6qybc3qb1w7nxr180asvwm09906a1pf";
        authors = [
          "ccgn"
          "bvssvni <bvssvni@gmail.com>"
          "nwin"
          "TyOverby <ty@pre-alpha.com>"
          "HeroicKatora"
          "Calum"
          "CensoredUsername <cens.username@gmail.com>"
          "fintelia <fintelia@gmail.com>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "jpeg-decoder";
            packageId = "jpeg-decoder";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "num-iter";
            packageId = "num-iter";
          }
          {
            name = "num-rational";
            packageId = "num-rational";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.8";
          }
          {
            name = "png";
            packageId = "png";
            optional = true;
          }
        ];
        features = {
          "default" = [ "gif_codec" "jpeg" "ico" "png_codec" "pnm" "tga" "tiff" "webp" "bmp" "hdr" "dxt" "jpeg_rayon" ];
          "gif_codec" = [ "gif" ];
          "hdr" = [ "scoped_threadpool" ];
          "ico" = [ "bmp" "png_codec" ];
          "jpeg" = [ "jpeg-decoder" ];
          "jpeg_rayon" = [ "jpeg-decoder/rayon" ];
          "png_codec" = [ "png" ];
        };
        resolvedDefaultFeatures = [ "jpeg" "jpeg-decoder" "png" "png_codec" ];
      };
      "indexmap" = rec {
        crateName = "indexmap";
        version = "1.2.0";
        edition = "2015";
        sha256 = "1wwr29axr92bbk5kbmshqw935kqb32h219q4jhg9ajkcwkxh44m6";
        authors = [
          "bluss"
          "Josh Stone <cuviper@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde 1.0.100";
            optional = true;
          }
        ];
        features = {
          "serde-1" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "serde" "serde-1" ];
      };
      "inflate" = rec {
        crateName = "inflate";
        version = "0.4.5";
        edition = "2015";
        sha256 = "1zxjdn8iwa0ssxrnjmywm3r1v284wryvzrf8vkc7nyf5ijbjknqw";
        authors = [
          "nwin <nwin@users.noreply.github.com>"
        ];
        dependencies = [
          {
            name = "adler32";
            packageId = "adler32";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "iovec" = rec {
        crateName = "iovec";
        version = "0.1.2";
        edition = "2015";
        sha256 = "025vi072m22299z3fg73qid188z2iip7k41ba6v5v5yhwwby9rnv";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
            target = { target, features }: target."windows";
          }
        ];
        
      };
      "isahc" = rec {
        crateName = "isahc";
        version = "0.7.1";
        edition = "2018";
        sha256 = "16wf58paw1mf8rpi26z987l0rxjb6y7br92d3njy93ax3d8p3fg1";
        authors = [
          "Stephen M. Coakley <me@stephencoakley.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "crossbeam-channel";
            packageId = "crossbeam-channel";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.6.6";
          }
          {
            name = "curl";
            packageId = "curl";
          }
          {
            name = "curl-sys";
            packageId = "curl-sys";
          }
          {
            name = "futures-io-preview";
            packageId = "futures-io-preview";
          }
          {
            name = "futures-util-preview";
            packageId = "futures-util-preview";
            features = [ "io" ];
          }
          {
            name = "http";
            packageId = "http";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "sluice";
            packageId = "sluice";
          }
        ];
        features = {
          "cookies" = [ "chrono" ];
          "default" = [ "cookies" "http2" "static-curl" ];
          "http2" = [ "curl/http2" ];
          "json" = [ "serde" "serde_json" ];
          "psl" = [ "parking_lot" "publicsuffix" ];
          "static-curl" = [ "curl/static-curl" ];
        };
        resolvedDefaultFeatures = [ "http2" ];
      };
      "isatty" = rec {
        crateName = "isatty";
        version = "0.1.9";
        edition = "2015";
        sha256 = "1p2yx591kwz2b3f2bv7al9hamhn052zmz9jd969rdv4kzj0q46p3";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "consoleapi" "fileapi" "minwinbase" "minwindef" "processenv" "winbase" "winnt" ];
          }
        ];
        
      };
      "itertools 0.7.11" = rec {
        crateName = "itertools";
        version = "0.7.11";
        edition = "2015";
        sha256 = "03cpsj26xmyamcalclqzr1i700vwx8hnbgxbpjvs354f8mnr8iqd";
        authors = [
          "bluss"
        ];
        dependencies = [
          {
            name = "either";
            packageId = "either";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
      "itertools 0.8.0" = rec {
        crateName = "itertools";
        version = "0.8.0";
        edition = "2015";
        sha256 = "0n2k13b6w4x2x6np2lykh9bj3b3z4hwh2r4cn3z2dgnfq7cng12v";
        authors = [
          "bluss"
        ];
        dependencies = [
          {
            name = "either";
            packageId = "either";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
      "itoa" = rec {
        crateName = "itoa";
        version = "0.4.4";
        edition = "2015";
        sha256 = "0zvg2d9qv3avhf3d8ggglh6fdyw8kkwqg3r4622ly5yhxnvnc4jh";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "jobserver" = rec {
        crateName = "jobserver";
        version = "0.1.16";
        edition = "2015";
        sha256 = "042gvpfb558y75ykb8ma1sym1km3lb3qzr16z6dkk5dg7q2p6kpp";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "rand";
            packageId = "rand 0.7.0";
            target = { target, features }: target."windows";
          }
        ];
        
      };
      "jpeg-decoder" = rec {
        crateName = "jpeg-decoder";
        version = "0.1.15";
        edition = "2015";
        sha256 = "038i40nrpln9433dpgdr94h7fvhrv95ificlxaa3yjxk0qrd9dy8";
        authors = [
          "Ulf Nilsson <kaksmet@gmail.com>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
        ];
        features = {
          "default" = [ "rayon" ];
        };
      };
      "js-sys" = rec {
        crateName = "js-sys";
        version = "0.3.27";
        edition = "2018";
        sha256 = "1m6p0bdgdkhwwy6bvapl9z3bw9nq3li2x480anfffn3calm4zz0y";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
          }
        ];
        
      };
      "kernel32-sys" = rec {
        crateName = "kernel32-sys";
        version = "0.2.2";
        edition = "2015";
        sha256 = "1389av0601a9yz8dvx5zha9vmkd6ik7ax0idpb032d28555n41vm";
        libName = "kernel32";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
          }
        ];
        buildDependencies = [
          {
            name = "winapi-build";
            packageId = "winapi-build";
          }
        ];
        
      };
      "language-reporting" = rec {
        crateName = "language-reporting";
        version = "0.3.1";
        edition = "2018";
        sha256 = "1nqmz3kl1sz628nhg7d7rdrskwq3ynhvdsvqgqg4wc7l9aw152b2";
        authors = [
          "Yehuda Katz <wycats@gmail.com>"
          "Brendan Zabarauskas <bjzaba@yahoo.com.au>"
        ];
        dependencies = [
          {
            name = "derive-new";
            packageId = "derive-new";
          }
          {
            name = "itertools";
            packageId = "itertools 0.7.11";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "render-tree";
            packageId = "render-tree";
          }
          {
            name = "serde";
            packageId = "serde 1.0.100";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "termcolor";
            packageId = "termcolor";
          }
        ];
        
      };
      "lazy_static 0.2.11" = rec {
        crateName = "lazy_static";
        version = "0.2.11";
        edition = "2015";
        sha256 = "0wxy8vak7jsx6r8gx475pjqpx11p2bfq4wvw6idmqi31mp3k7w3n";
        authors = [
          "Marvin Löbel <loebel.marvin@gmail.com>"
        ];
        features = {
          "compiletest" = [ "compiletest_rs" ];
          "spin_no_std" = [ "nightly" "spin" ];
        };
      };
      "lazy_static 1.3.0" = rec {
        crateName = "lazy_static";
        version = "1.3.0";
        edition = "2015";
        sha256 = "052ac27w189hrf1j3hz7sga46rp84zl2hqnzyihxv78mgzr2jmxw";
        authors = [
          "Marvin Löbel <loebel.marvin@gmail.com>"
        ];
        features = {
          "spin_no_std" = [ "spin" ];
        };
      };
      "lazycell" = rec {
        crateName = "lazycell";
        version = "1.2.1";
        edition = "2015";
        sha256 = "0gvqycmpv7parc98i6y64ai7rvxrn1947z2a6maa02g4kvxdd55j";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Nikita Pekin <contact@nikitapek.in>"
        ];
        features = {
          "nightly-testing" = [ "clippy" "nightly" ];
        };
      };
      "lexical-core" = rec {
        crateName = "lexical-core";
        version = "0.4.3";
        edition = "2015";
        sha256 = "06gm9w8zbxmjd3wdz6wy5wg4835s65jfn47b35nykpcsjw6gkc5q";type = [ "lib" "staticlib" "cdylib" ];
        authors = [
          "Alex Huszagh <ahuszagh@gmail.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "ryu";
            packageId = "ryu";
            optional = true;
          }
          {
            name = "stackvector";
            packageId = "stackvector";
            optional = true;
          }
          {
            name = "static_assertions";
            packageId = "static_assertions";
          }
        ];
        buildDependencies = [
          {
            name = "rustc_version";
            packageId = "rustc_version";
          }
        ];
        features = {
          "correct" = [ "stackvector" "table" ];
          "default" = [ "correct" "ryu" "std" ];
          "grisu3" = [ "dtoa" ];
        };
        resolvedDefaultFeatures = [ "correct" "default" "ryu" "stackvector" "std" "table" ];
      };
      "libc" = rec {
        crateName = "libc";
        version = "0.2.60";
        edition = "2015";
        sha256 = "1sxmlcyb39v8awlq5ndaiiq2vja3mc4vf97nxz3qjy007xiq0knl";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "std" ];
          "rustc-dep-of-std" = [ "align" "rustc-std-workspace-core" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "extra_traits" "std" "use_std" ];
      };
      "libgit2-sys" = rec {
        crateName = "libgit2-sys";
        version = "0.9.1";
        edition = "2018";
        sha256 = "1cy11h35drwd4fw1b9j3hgflvvl1yzgnl3x0p3inwqarxcvqc3x3";
        libName = "libgit2_sys";
        libPath = "lib.rs";
        authors = [
          "Josh Triplett <josh@joshtriplett.org>"
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "libz-sys";
            packageId = "libz-sys";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
            features = [ "parallel" ];
          }
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
        ];
        features = {
          "https" = [ "openssl-sys" ];
          "ssh" = [ "libssh2-sys" ];
        };
      };
      "libnghttp2-sys" = rec {
        crateName = "libnghttp2-sys";
        version = "0.1.2";
        edition = "2015";
        sha256 = "0qr4lyh7righx9n22c7amlcpk906rn1jnb2zd6gdfpa3yi24s982";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];
        
      };
      "libsqlite3-sys" = rec {
        crateName = "libsqlite3-sys";
        version = "0.16.0";
        edition = "2018";
        sha256 = "09dfyakr6qdm35isn4c543yh9qprny6j6h68imv920ikkkl9ansy";
        authors = [
          "John Gallagher <jgallagher@bignerdranch.com>"
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
            optional = true;
          }
          {
            name = "pkg-config";
            packageId = "pkg-config";
            optional = true;
          }
          {
            name = "vcpkg";
            packageId = "vcpkg";
            optional = true;
            target = {target, features}: (target."env" == "msvc");
          }
        ];
        features = {
          "buildtime_bindgen" = [ "bindgen" "pkg-config" "vcpkg" ];
          "bundled" = [ "cc" ];
          "bundled-windows" = [ "cc" ];
          "default" = [ "min_sqlite_version_3_6_8" ];
          "min_sqlite_version_3_6_23" = [ "pkg-config" "vcpkg" ];
          "min_sqlite_version_3_6_8" = [ "pkg-config" "vcpkg" ];
          "min_sqlite_version_3_7_16" = [ "pkg-config" "vcpkg" ];
          "min_sqlite_version_3_7_7" = [ "pkg-config" "vcpkg" ];
          "session" = [ "preupdate_hook" ];
        };
        resolvedDefaultFeatures = [ "bundled" "cc" "default" "min_sqlite_version_3_6_8" "min_sqlite_version_3_7_7" "pkg-config" "vcpkg" ];
      };
      "libz-sys" = rec {
        crateName = "libz-sys";
        version = "1.0.25";
        edition = "2015";
        sha256 = "1gjycyl2283525abks98bhxa4r259m617xfm5z52p3p3c8ry9d9f";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
          {
            name = "vcpkg";
            packageId = "vcpkg";
            target = {target, features}: (target."env" == "msvc");
          }
        ];
        features = {
        };
      };
      "line-wrap" = rec {
        crateName = "line-wrap";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1ffa2whkyh9mwvdlpk6v8pjkg8p8mlzyjfymq5adll9a18sl80zk";
        authors = [
          "Marshall Pierce <marshall@mpierce.org>"
        ];
        dependencies = [
          {
            name = "safemem";
            packageId = "safemem";
          }
        ];
        
      };
      "linked-hash-map 0.3.0" = rec {
        crateName = "linked-hash-map";
        version = "0.3.0";
        edition = "2015";
        sha256 = "1kaf95grvfqchxn8pl0854g8ab0fzl56217hndhhhz5qqm2j09kd";
        authors = [
          "Stepan Koltsov <stepan.koltsov@gmail.com>"
          "Andrew Paseltiner <apaseltiner@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde 0.8.23";
            optional = true;
          }
          {
            name = "serde_test";
            packageId = "serde_test";
            optional = true;
          }
        ];
        features = {
          "serde_impl" = [ "serde" "serde_test" ];
        };
        resolvedDefaultFeatures = [ "serde" "serde_impl" "serde_test" ];
      };
      "linked-hash-map 0.5.2" = rec {
        crateName = "linked-hash-map";
        version = "0.5.2";
        edition = "2015";
        sha256 = "10qgbvh00q36ql0jh00rxh2jlq6qvl11n6mig0cvkpf4xf5bd4df";
        authors = [
          "Stepan Koltsov <stepan.koltsov@gmail.com>"
          "Andrew Paseltiner <apaseltiner@gmail.com>"
        ];
        features = {
          "heapsize_impl" = [ "heapsize" ];
          "serde_impl" = [ "serde" "serde_test" ];
        };
      };
      "log" = rec {
        crateName = "log";
        version = "0.4.8";
        edition = "2015";
        sha256 = "1xz18ixccl5c6np4linv3ypc7hpmmgpc5zzd2ymp2ssfx0mhbdhl";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
        ];
        features = {
          "kv_unstable_sval" = [ "kv_unstable" "sval/fmt" ];
        };
        resolvedDefaultFeatures = [ "kv_unstable" "std" ];
      };
      "lru-cache" = rec {
        crateName = "lru-cache";
        version = "0.1.2";
        edition = "2015";
        sha256 = "071viv6g2p3akwqmfb3c8vsycs5n7kr17b70l7la071jv0d4zqii";
        authors = [
          "Stepan Koltsov <stepan.koltsov@gmail.com>"
        ];
        dependencies = [
          {
            name = "linked-hash-map";
            packageId = "linked-hash-map 0.5.2";
          }
        ];
        features = {
          "heapsize_impl" = [ "heapsize" "linked-hash-map/heapsize_impl" ];
        };
      };
      "macaddr" = rec {
        crateName = "macaddr";
        version = "0.1.1";
        edition = "2018";
        sha256 = "17x00ar1zx4199ipmc4gr7w73j4ah7h25jvxizkb7zswn4n7bx1z";
        authors = [
          "svartalf <self@svartalf.info>"
        ];
        features = {
          "default" = [ "std" ];
          "serde_std" = [ "std" "serde/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "mach 0.2.3" = rec {
        crateName = "mach";
        version = "0.2.3";
        edition = "2015";
        sha256 = "1qdhs16cl1j3w7kvy6ak7h8lbyqmr6i3i15qfzpnv9gyrn3j9pc6";
        authors = [
          "Nick Fitzgerald <fitzgen@gmail.com>"
          "David Cuddeback <david.cuddeback@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "use_std" "deprecated" ];
          "use_std" = [ "libc/use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "deprecated" "use_std" ];
      };
      "mach 0.3.2" = rec {
        crateName = "mach";
        version = "0.3.2";
        edition = "2015";
        sha256 = "1yksa8lwzqh150gr4417rls1wk20asy9vhp8kq5g9n7z58xyh8xq";
        authors = [
          "Nick Fitzgerald <fitzgen@gmail.com>"
          "David Cuddeback <david.cuddeback@gmail.com>"
          "Gonzalo Brito Gadeschi <gonzalobg88@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
        ];
        features = {
          "rustc-dep-of-std" = [ "rustc-std-workspace-core" "libc/rustc-dep-of-std" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "malloc_buf" = rec {
        crateName = "malloc_buf";
        version = "0.0.6";
        edition = "2015";
        sha256 = "1jqr77j89pwszv51fmnknzvd53i1nkmcr8rjrvcxhm4dx1zr1fv2";
        authors = [
          "Steven Sheldon"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        
      };
      "matches" = rec {
        crateName = "matches";
        version = "0.1.8";
        edition = "2015";
        sha256 = "020axl4q7rk9vz90phs7f8jas4imxal9y9kxl4z4v7a6719mrz3z";
        libPath = "lib.rs";
        authors = [
          "Simon Sapin <simon.sapin@exyr.org>"
        ];
        
      };
      "md5" = rec {
        crateName = "md5";
        version = "0.6.1";
        edition = "2015";
        sha256 = "17b2xm4h4cvxsdjsf3kdrzqv2za60kak961xzi5kmw6g6djcssvy";
        authors = [
          "Ivan Ukhov <ivan.ukhov@gmail.com>"
          "Kamal Ahmad <shibe@openmailbox.org>"
          "Konstantin Stepanov <milezv@gmail.com>"
          "Lukas Kalbertodt <lukas.kalbertodt@gmail.com>"
          "Nathan Musoke <nathan.musoke@gmail.com>"
          "Tony Arcieri <bascule@gmail.com>"
          "Wim de With <register@dewith.io>"
          "Yosef Dinerstein <yosefdi@gmail.com>"
        ];
        
      };
      "memchr" = rec {
        crateName = "memchr";
        version = "2.2.1";
        edition = "2015";
        sha256 = "13j6ji9x9ydpi9grbss106gqqr3xn3bcfp28aydqfa4751qrfmw8";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
          "bluss"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "libc" "use_std" ];
      };
      "mime" = rec {
        crateName = "mime";
        version = "0.3.14";
        edition = "2015";
        sha256 = "1kxg2iqf55xbpkc5xxnb7ad9ppbmhj80amij1k60715ps6n667fx";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        
      };
      "mime_guess" = rec {
        crateName = "mime_guess";
        version = "2.0.1";
        edition = "2015";
        sha256 = "16c5ssgali30db6jh1cndy77dd1qgcykhshiyfyjvxxf94wx03hs";
        authors = [
          "Austin Bonander <austin.bonander@gmail.com>"
        ];
        dependencies = [
          {
            name = "mime";
            packageId = "mime";
          }
          {
            name = "unicase";
            packageId = "unicase";
          }
        ];
        buildDependencies = [
          {
            name = "unicase";
            packageId = "unicase";
          }
        ];
        features = {
          "default" = [ "rev-mappings" ];
        };
        resolvedDefaultFeatures = [ "default" "rev-mappings" ];
      };
      "miniz-sys" = rec {
        crateName = "miniz-sys";
        version = "0.1.12";
        edition = "2015";
        sha256 = "00l2r4anm8g35x0js2zfdnwfbrih9m43vphdpb77c5ga3kjkm7hy";
        libName = "miniz_sys";
        libPath = "lib.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];
        
      };
      "miniz_oxide" = rec {
        crateName = "miniz_oxide";
        version = "0.3.1";
        edition = "2018";
        sha256 = "0nyf7qf3p9yxvxy19z9c8mfxlbgx5wjlqi5larx8sykll32mjagy";
        authors = [
          "Frommi <daniil.liferenko@gmail.com>"
          "oyvindln <oyvindln@users.noreply.github.com>"
        ];
        dependencies = [
          {
            name = "adler32";
            packageId = "adler32";
          }
        ];
        
      };
      "miniz_oxide_c_api" = rec {
        crateName = "miniz_oxide_c_api";
        version = "0.2.3";
        edition = "2015";
        sha256 = "1x7cv30nf8pz80hwncgskgfl3hv3cvay3i0n729ij3bvjn95frvc";
        build = "src/build.rs";
        authors = [
          "Frommi <daniil.liferenko@gmail.com>"
        ];
        dependencies = [
          {
            name = "crc32fast";
            packageId = "crc32fast";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "miniz_oxide";
            packageId = "miniz_oxide";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];
        features = {
          "benching" = [ "build_orig_miniz" "no_c_export" ];
          "fuzzing" = [ "build_orig_miniz" "no_c_export" ];
          "miniz_zip" = [ "build_stub_miniz" ];
        };
        resolvedDefaultFeatures = [ "default" "no_c_export" ];
      };
      "natural" = rec {
        crateName = "natural";
        version = "0.3.0";
        edition = "2015";
        sha256 = "19hh23z4w3r77fsqmj5sw3hgqkdja9cnsj3s1qndlm25ddyrsrgx";
        authors = [
          "chris@cjqed.com"
          "curlywurlycraig@gmail.com"
        ];
        
      };
      "neso" = rec {
        crateName = "neso";
        version = "0.5.0";
        edition = "2018";
        sha256 = "1j78iyrv3r46n7jdayvgwarpq9iaikc7yhqqvdii226bzgg32g3b";type = [ "cdylib" "lib" ];
        authors = [
          "Jeffrey Xiao <jeffrey.xiao1998@gmail.com>"
        ];
        dependencies = [
          {
            name = "bincode";
            packageId = "bincode";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "log";
            packageId = "log";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "serde";
            packageId = "serde 1.0.100";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
            target = { target, features }: (target."arch" == "wasm32");
          }
        ];
        
      };
      "nix 0.14.1" = rec {
        crateName = "nix";
        version = "0.14.1";
        edition = "2015";
        sha256 = "1kmxdlmvnmq8cfpmr3g6wk37rwi2ybdvp1z6z3831m1p23p2nwkc";
        authors = [
          "The nix-rust Project Developers"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "void";
            packageId = "void";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
            target = {target, features}: (target."os" == "dragonfly");
          }
        ];
        
      };
      "nix 0.15.0" = rec {
        crateName = "nix";
        version = "0.15.0";
        edition = "2015";
        sha256 = "0aa2l7wg9pzx24ks4p97gdy09a4hhs1sr9drxnm75v906d7hnbiv";
        authors = [
          "The nix-rust Project Developers"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
            features = [ "extra_traits" ];
          }
          {
            name = "void";
            packageId = "void";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
            target = {target, features}: (target."os" == "dragonfly");
          }
        ];
        
      };
      "nodrop" = rec {
        crateName = "nodrop";
        version = "0.1.13";
        edition = "2015";
        sha256 = "0if9ifn6rvar5jirx4b3qh4sl5kjkmcifycvzhxa9j3crkfng5ig";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "std" ];
          "use_union" = [ "nodrop-union" ];
        };
      };
      "nom 4.2.3" = rec {
        crateName = "nom";
        version = "4.2.3";
        edition = "2015";
        sha256 = "1mkvby8b4m61p4g1px0pwr58yfkphyp1jcfbp4qfp7l6iqdaklia";
        authors = [
          "contact@geoffroycouprie.com"
        ];
        dependencies = [
          {
            name = "memchr";
            packageId = "memchr";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check";
          }
        ];
        features = {
          "default" = [ "std" ];
          "regexp" = [ "regex" ];
          "regexp_macros" = [ "regexp" "lazy_static" ];
          "std" = [ "alloc" "memchr/use_std" ];
          "verbose-errors" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "nom 5.0.0" = rec {
        crateName = "nom";
        version = "5.0.0";
        edition = "2018";
        sha256 = "06snml9wfrvk8k71l4md6gg29jgj4pa8wzsg180q3qr0jf2isxp9";
        authors = [
          "contact@geoffroycouprie.com"
        ];
        dependencies = [
          {
            name = "lexical-core";
            packageId = "lexical-core";
            optional = true;
          }
          {
            name = "memchr";
            packageId = "memchr";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check";
          }
        ];
        features = {
          "default" = [ "std" "lexical" ];
          "lexical" = [ "lexical-core" ];
          "regexp" = [ "regex" ];
          "regexp_macros" = [ "regexp" "lazy_static" ];
          "std" = [ "alloc" "memchr/use_std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "lexical" "lexical-core" "std" ];
      };
      "nom_locate" = rec {
        crateName = "nom_locate";
        version = "1.0.0";
        edition = "2018";
        sha256 = "0dffw6hi1q8pgqh67ajmdf25sr7qz7l1gfp221vzr4g3v17q6cpr";
        authors = [
          "Florent FAYOLLE <florent.fayolle69@gmail.com>"
          "Christopher Durham <cad97@cad97.com>"
          "Valentin Lorentz <progval+git@progval.net>"
        ];
        dependencies = [
          {
            name = "bytecount";
            packageId = "bytecount";
          }
          {
            name = "memchr";
            packageId = "memchr";
          }
          {
            name = "nom";
            packageId = "nom 5.0.0";
          }
        ];
        features = {
          "alloc" = [ "nom/alloc" ];
          "avx-accel" = [ "bytecount/avx-accel" ];
          "default" = [ "std" ];
          "simd-accel" = [ "bytecount/simd-accel" ];
          "std" = [ "nom/std" "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "ntapi" = rec {
        crateName = "ntapi";
        version = "0.3.3";
        edition = "2018";
        sha256 = "00h6xbvvlkiln9sy34p3s19a7kw00dvvmz1hgq4brb43v4f08vpj";
        authors = [
          "MSxDOS <melcodos@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            features = [ "cfg" "evntrace" "in6addr" "inaddr" "minwinbase" "ntsecapi" "windef" "winioctl" ];
          }
        ];
        features = {
          "default" = [ "user" ];
          "impl-default" = [ "winapi/impl-default" ];
        };
        resolvedDefaultFeatures = [ "default" "user" ];
      };
      "nu" = rec {
        crateName = "nu";
        version = "0.3.0";
        edition = "2018";
        crateBin = [
          { name = "nu_plugin_inc"; path = "src/plugins/inc.rs"; }
          { name = "nu_plugin_sum"; path = "src/plugins/sum.rs"; }
          { name = "nu_plugin_embed"; path = "src/plugins/embed.rs"; }
          { name = "nu_plugin_add"; path = "src/plugins/add.rs"; }
          { name = "nu_plugin_edit"; path = "src/plugins/edit.rs"; }
          { name = "nu_plugin_str"; path = "src/plugins/str.rs"; }
          { name = "nu_plugin_skip"; path = "src/plugins/skip.rs"; }
          { name = "nu_plugin_sys"; path = "src/plugins/sys.rs"; }
          { name = "nu_plugin_ps"; path = "src/plugins/ps.rs"; }
          { name = "nu_plugin_tree"; path = "src/plugins/tree.rs"; }
          { name = "nu_plugin_binaryview"; path = "src/plugins/binaryview.rs"; }
          { name = "nu_plugin_textview"; path = "src/plugins/textview.rs"; }
          { name = "nu"; path = "src/main.rs"; }
        ];
        src = pkgs.callPackage ./tarball-v0.3.0.nix {};
        authors = [
          "Yehuda Katz <wycats@gmail.com>"
          "Jonathan Turner <jonathan.d.turner@gmail.com>"
          "Andrés N. Robalino <andres@androbtech.com>"
        ];
        dependencies = [
          {
            name = "ansi_term";
            packageId = "ansi_term 0.12.1";
          }
          {
            name = "app_dirs";
            packageId = "app_dirs";
          }
          {
            name = "base64";
            packageId = "base64";
          }
          {
            name = "battery";
            packageId = "battery";
            optional = true;
          }
          {
            name = "bigdecimal";
            packageId = "bigdecimal";
            features = [ "serde" ];
          }
          {
            name = "bson";
            packageId = "bson";
            features = [ "decimal128" ];
          }
          {
            name = "byte-unit";
            packageId = "byte-unit";
          }
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "chrono";
            packageId = "chrono";
            features = [ "serde" ];
          }
          {
            name = "chrono-humanize";
            packageId = "chrono-humanize";
          }
          {
            name = "clap";
            packageId = "clap";
          }
          {
            name = "clipboard";
            packageId = "clipboard";
            optional = true;
          }
          {
            name = "crossterm";
            packageId = "crossterm";
            optional = true;
          }
          {
            name = "csv";
            packageId = "csv";
          }
          {
            name = "ctrlc";
            packageId = "ctrlc";
          }
          {
            name = "derive-new";
            packageId = "derive-new";
          }
          {
            name = "dirs";
            packageId = "dirs 2.0.2";
          }
          {
            name = "dunce";
            packageId = "dunce";
          }
          {
            name = "enum-utils";
            packageId = "enum-utils";
          }
          {
            name = "futures-async-stream";
            packageId = "futures-async-stream";
          }
          {
            name = "futures-preview";
            packageId = "futures-preview";
            features = [ "compat" "io-compat" ];
          }
          {
            name = "futures-timer";
            packageId = "futures-timer";
          }
          {
            name = "futures_codec";
            packageId = "futures_codec";
          }
          {
            name = "getset";
            packageId = "getset";
          }
          {
            name = "git2";
            packageId = "git2";
            usesDefaultFeatures = false;
          }
          {
            name = "glob";
            packageId = "glob";
          }
          {
            name = "heim";
            packageId = "heim";
            optional = true;
          }
          {
            name = "hex";
            packageId = "hex 0.3.2";
          }
          {
            name = "image";
            packageId = "image";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "png_codec" "jpeg" ];
          }
          {
            name = "indexmap";
            packageId = "indexmap";
            features = [ "serde-1" ];
          }
          {
            name = "itertools";
            packageId = "itertools 0.8.0";
          }
          {
            name = "language-reporting";
            packageId = "language-reporting";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "mime";
            packageId = "mime";
          }
          {
            name = "natural";
            packageId = "natural";
          }
          {
            name = "neso";
            packageId = "neso";
            optional = true;
          }
          {
            name = "nom";
            packageId = "nom 5.0.0";
          }
          {
            name = "nom_locate";
            packageId = "nom_locate";
          }
          {
            name = "num-bigint";
            packageId = "num-bigint";
            features = [ "serde" ];
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.8";
          }
          {
            name = "onig_sys";
            packageId = "onig_sys";
            optional = true;
          }
          {
            name = "pin-utils";
            packageId = "pin-utils";
          }
          {
            name = "pretty-hex";
            packageId = "pretty-hex";
          }
          {
            name = "pretty_env_logger";
            packageId = "pretty_env_logger";
          }
          {
            name = "prettytable-rs";
            packageId = "prettytable-rs";
          }
          {
            name = "ptree";
            packageId = "ptree";
            optional = true;
          }
          {
            name = "rawkey";
            packageId = "rawkey";
            optional = true;
          }
          {
            name = "roxmltree";
            packageId = "roxmltree";
          }
          {
            name = "rusqlite";
            packageId = "rusqlite";
            features = [ "bundled" "blob" ];
          }
          {
            name = "rustyline";
            packageId = "rustyline";
          }
          {
            name = "semver";
            packageId = "semver";
          }
          {
            name = "serde";
            packageId = "serde 1.0.100";
            features = [ "derive" ];
          }
          {
            name = "serde-hjson";
            packageId = "serde-hjson 0.9.1";
          }
          {
            name = "serde_bytes";
            packageId = "serde_bytes";
          }
          {
            name = "serde_ini";
            packageId = "serde_ini";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "serde_urlencoded";
            packageId = "serde_urlencoded";
          }
          {
            name = "serde_yaml";
            packageId = "serde_yaml";
          }
          {
            name = "shellexpand";
            packageId = "shellexpand";
          }
          {
            name = "sublime_fuzzy";
            packageId = "sublime_fuzzy";
          }
          {
            name = "subprocess";
            packageId = "subprocess";
          }
          {
            name = "surf";
            packageId = "surf";
          }
          {
            name = "syntect";
            packageId = "syntect";
            optional = true;
          }
          {
            name = "tempfile";
            packageId = "tempfile";
          }
          {
            name = "term";
            packageId = "term";
          }
          {
            name = "textwrap";
            packageId = "textwrap";
            features = [ "term_size" ];
          }
          {
            name = "toml";
            packageId = "toml 0.5.3";
          }
          {
            name = "unicode-xid";
            packageId = "unicode-xid 0.2.0";
          }
          {
            name = "url";
            packageId = "url";
          }
          {
            name = "uuid";
            packageId = "uuid";
            features = [ "v4" "serde" ];
          }
          {
            name = "which";
            packageId = "which";
          }
        ];
        devDependencies = [
          {
            name = "pretty_assertions";
            packageId = "pretty_assertions";
          }
        ];
        features = {
          "binaryview" = [ "image" "crossterm" ];
          "default" = [ "textview" "sys" "ps" ];
          "ps" = [ "heim" ];
          "raw-key" = [ "rawkey" "neso" ];
          "sys" = [ "heim" "battery" ];
          "textview" = [ "syntect" "onig_sys" "crossterm" ];
        };
        resolvedDefaultFeatures = [ "battery" "binaryview" "clipboard" "crossterm" "default" "heim" "image" "neso" "onig_sys" "ps" "ptree" "raw-key" "rawkey" "syntect" "sys" "textview" ];
      };
      "num-bigint" = rec {
        crateName = "num-bigint";
        version = "0.2.3";
        edition = "2015";
        sha256 = "06hsaiahwbx98xbph5k9086r4hd2m2zzi6sx4v5k9wr4vm6g7hzr";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.8";
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde 1.0.100";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
        ];
        features = {
          "default" = [ "std" ];
          "i128" = [ "num-integer/i128" "num-traits/i128" ];
          "std" = [ "num-integer/std" "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "default" "serde" "std" ];
      };
      "num-integer" = rec {
        crateName = "num-integer";
        version = "0.1.41";
        edition = "2015";
        sha256 = "02dwjjpfbi16c71fq689s4sw3ih52cvfzr5z5gs6qpr5z0g58pmq";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits 0.2.8";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
        ];
        features = {
          "default" = [ "std" ];
          "i128" = [ "num-traits/i128" ];
          "std" = [ "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "num-iter" = rec {
        crateName = "num-iter";
        version = "0.1.39";
        edition = "2015";
        sha256 = "0bhk2qbr3261r6zvfc58lz4spfqjhvdripxgz5mks5rd85r55gbn";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.8";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
        ];
        features = {
          "default" = [ "std" ];
          "i128" = [ "num-integer/i128" "num-traits/i128" ];
          "std" = [ "num-integer/std" "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "num-rational" = rec {
        crateName = "num-rational";
        version = "0.2.2";
        edition = "2015";
        sha256 = "0m5l76rdzzq98cfhnbjsxfngz6w75pal5mnfflpxqapysmw5527j";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.8";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
        ];
        features = {
          "bigint" = [ "num-bigint" ];
          "bigint-std" = [ "bigint" "num-bigint/std" ];
          "default" = [ "bigint-std" "std" ];
          "i128" = [ "num-integer/i128" "num-traits/i128" ];
          "std" = [ "num-integer/std" "num-traits/std" ];
        };
      };
      "num-traits 0.1.43" = rec {
        crateName = "num-traits";
        version = "0.1.43";
        edition = "2015";
        sha256 = "0c9whknf2dm74a3cqirafy6gj83a76gl56g4v3g19k6lkwz13rcj";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits 0.2.8";
          }
        ];
        
      };
      "num-traits 0.2.8" = rec {
        crateName = "num-traits";
        version = "0.2.8";
        edition = "2015";
        sha256 = "0clvrm34rrqc8p6gq5ps5fcgws3kgq5knh7nlqxf2ayarwks9abb";
        authors = [
          "The Rust Project Developers"
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "num_cpus" = rec {
        crateName = "num_cpus";
        version = "1.10.1";
        edition = "2015";
        sha256 = "0wrj3zvj6h3q26sqj9zxpd59frjb54n7jhjwf307clq31ic47vxw";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        
      };
      "objc" = rec {
        crateName = "objc";
        version = "0.2.6";
        edition = "2015";
        sha256 = "03ar7qxhailxgb0zi5lszv7fhwl6b1xkas5y4m8wy1vyng90zlii";
        authors = [
          "Steven Sheldon"
        ];
        dependencies = [
          {
            name = "malloc_buf";
            packageId = "malloc_buf";
          }
        ];
        features = {
          "exception" = [ "objc_exception" ];
        };
      };
      "objc-foundation" = rec {
        crateName = "objc-foundation";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1y9bwb3m5fdq7w7i4bnds067dhm4qxv4m1mbg9y61j9nkrjipp8s";
        authors = [
          "Steven Sheldon"
        ];
        dependencies = [
          {
            name = "block";
            packageId = "block";
          }
          {
            name = "objc";
            packageId = "objc";
          }
          {
            name = "objc_id";
            packageId = "objc_id";
          }
        ];
        
      };
      "objc_id" = rec {
        crateName = "objc_id";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0fq71hnp2sdblaighjc82yrac3adfmqzhpr11irhvdfp9gdlsbf9";
        authors = [
          "Steven Sheldon"
        ];
        dependencies = [
          {
            name = "objc";
            packageId = "objc";
          }
        ];
        
      };
      "ole32-sys" = rec {
        crateName = "ole32-sys";
        version = "0.2.0";
        edition = "2015";
        sha256 = "134xg38xicrqynx4pfjfxnpp8x83m3gqw5j3s8y27rc22w14jb2x";
        libName = "ole32";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
          }
        ];
        buildDependencies = [
          {
            name = "winapi-build";
            packageId = "winapi-build";
          }
        ];
        
      };
      "onig" = rec {
        crateName = "onig";
        version = "4.3.2";
        edition = "2015";
        sha256 = "1rr6gx0qpx1h8mxjgdawhdckl74k293kg410pr4rz8fqvad9him6";
        authors = [
          "Will Speak <will@willspeak.me>"
          "Ivan Ivashchenko <defuz@me.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."windows";
          }
          {
            name = "onig_sys";
            packageId = "onig_sys";
          }
        ];
        features = {
          "posix-api" = [ "onig_sys/posix-api" ];
          "print-debug" = [ "onig_sys/print-debug" ];
        };
      };
      "onig_sys" = rec {
        crateName = "onig_sys";
        version = "69.1.0";
        edition = "2015";
        sha256 = "1c639k5x7kp5m4vrvmvx4hqar8dyyiskknz6b07g2hd3byzi111q";
        authors = [
          "Will Speak <will@willspeak.me>"
          "Ivan Ivashchenko <defuz@me.com>"
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
        ];
        features = {
        };
      };
      "openssl-probe" = rec {
        crateName = "openssl-probe";
        version = "0.1.2";
        edition = "2015";
        sha256 = "1pijrdifgsdwd45b08c2g0dsmnhz7c3kmagb70839ngrd7d29bvp";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        
      };
      "openssl-sys" = rec {
        crateName = "openssl-sys";
        version = "0.9.49";
        edition = "2015";
        sha256 = "1168vivyqbzaxl48bvv9r1x714c03f5c1za8pv5x8fyj9gjxkypl";
        build = "build/main.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
          {
            name = "cc";
            packageId = "cc";
          }
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
          {
            name = "vcpkg";
            packageId = "vcpkg";
            target = {target, features}: (target."env" == "msvc");
          }
        ];
        features = {
          "vendored" = [ "openssl-src" ];
        };
      };
      "ord_subset" = rec {
        crateName = "ord_subset";
        version = "3.1.1";
        edition = "2015";
        sha256 = "1vvb6zmz279nb59dki7kbsvixbk8zpg2gxvgcpsjfnxg9ik19knp";
        authors = [
          "Emerentius"
        ];
        features = {
          "default" = [ "std" ];
          "unchecked_ops" = [ "ops" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "ordered-float" = rec {
        crateName = "ordered-float";
        version = "1.0.2";
        edition = "2015";
        sha256 = "0625x96987kspdxbikry5mb7hsf5pdc5bbanxd8wjwqlx0ar71hq";
        authors = [
          "Jonathan Reem <jonathan.reem@gmail.com>"
          "Matt Brubeck <mbrubeck@limpet.net>"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits 0.2.8";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "ordermap" = rec {
        crateName = "ordermap";
        version = "0.3.5";
        edition = "2015";
        sha256 = "0qr0a50l0qakbjcck93qdayd0xl8gzpp42x0n7b75cs4ybsx6vm8";
        authors = [
          "bluss"
        ];
        features = {
          "serde-1" = [ "serde" ];
        };
      };
      "output_vt100" = rec {
        crateName = "output_vt100";
        version = "0.1.2";
        edition = "2018";
        sha256 = "1ygqplpxz4gg3i8f3rkan2q69pqll7gv65l2mmd8r9dphnvwbkak";
        authors = [
          "Phuntsok Drak-pa <phundrak@phundrak.fr>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            features = [ "winuser" "winbase" "consoleapi" "processenv" ];
          }
        ];
        
      };
      "percent-encoding" = rec {
        crateName = "percent-encoding";
        version = "2.1.0";
        edition = "2015";
        sha256 = "0bp3zrsk3kr47fbpipyczidbbx4g54lzxdm77ni1i3qws10mdzfl";
        libPath = "lib.rs";
        authors = [
          "The rust-url developers"
        ];
        
      };
      "petgraph" = rec {
        crateName = "petgraph";
        version = "0.4.13";
        edition = "2015";
        sha256 = "0kyfmca854s54jk26g2x1kjb04c3k7cjilaxyr0if8lhxv8mjdlw";
        authors = [
          "bluss"
          "mitchmindtree"
        ];
        dependencies = [
          {
            name = "fixedbitset";
            packageId = "fixedbitset";
          }
          {
            name = "ordermap";
            packageId = "ordermap";
            optional = true;
          }
        ];
        features = {
          "all" = [ "unstable" "quickcheck" "stable_graph" "graphmap" ];
          "default" = [ "graphmap" "stable_graph" ];
          "graphmap" = [ "ordermap" ];
          "serde-1" = [ "serde" "serde_derive" ];
          "unstable" = [ "generate" ];
        };
        resolvedDefaultFeatures = [ "default" "graphmap" "ordermap" "stable_graph" ];
      };
      "pin-project" = rec {
        crateName = "pin-project";
        version = "0.4.0-alpha.5";
        edition = "2018";
        sha256 = "1xr1x8nssmalvsrzqq8b64hkjdrvdixwm02b7935ajyi59mdvry6";
        authors = [
          "Taiki Endo <te316e89@gmail.com>"
        ];
        dependencies = [
          {
            name = "pin-project-internal";
            packageId = "pin-project-internal";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "project_attr" = [ "pin-project-internal/project_attr" ];
          "renamed" = [ "pin-project-internal/renamed" ];
        };
      };
      "pin-project-internal" = rec {
        crateName = "pin-project-internal";
        version = "0.4.0-alpha.5";
        edition = "2018";
        sha256 = "1lrgmzlkxybdag7xw5za7pg04p8g6zzll8xg4619c8npzz8hgglc";
        procMacro = true;
        authors = [
          "Taiki Endo <te316e89@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.1";
          }
          {
            name = "quote";
            packageId = "quote 1.0.2";
          }
          {
            name = "syn";
            packageId = "syn 1.0.4";
            features = [ "full" ];
          }
        ];
        features = {
          "project_attr" = [ "syn/visit-mut" ];
          "renamed" = [ "proc-macro-crate" "serde" "lazy_static" ];
        };
      };
      "pin-utils" = rec {
        crateName = "pin-utils";
        version = "0.1.0-alpha.4";
        edition = "2018";
        sha256 = "11xmyx00n4m37d546by2rxb8ryxs12v55cc172i3yak1rqccd52q";
        authors = [
          "Josef Brandl <mail@josefbrandl.de>"
        ];
        
      };
      "pkg-config" = rec {
        crateName = "pkg-config";
        version = "0.3.15";
        edition = "2015";
        sha256 = "1byjfivxlpbh549scss9kp893pzwfig93w14bwxxn557lp7x5hd7";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        
      };
      "platforms" = rec {
        crateName = "platforms";
        version = "0.2.0";
        edition = "2018";
        sha256 = "0v10sdn9vr069wk2k4ywggvr1iqpbl4svanfjkrkmcammkdc1zkc";
        authors = [
          "Tony Arcieri <bascule@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "plist" = rec {
        crateName = "plist";
        version = "0.4.2";
        edition = "2015";
        sha256 = "0zqnxc5i4y6mj119vr0lzpb5j67vffpx2phhgh711533bw3ryajz";
        authors = [
          "Ed Barnard <eabarnard@gmail.com>"
        ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64";
          }
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "humantime";
            packageId = "humantime";
          }
          {
            name = "line-wrap";
            packageId = "line-wrap";
          }
          {
            name = "serde";
            packageId = "serde 1.0.100";
            optional = true;
          }
          {
            name = "xml-rs";
            packageId = "xml-rs";
          }
        ];
        features = {
          "default" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" "serde" ];
      };
      "png" = rec {
        crateName = "png";
        version = "0.15.0";
        edition = "2018";
        sha256 = "00j64vq8y701i426mx5a95pj6qp23hb9xxmfp6bxs4y0n9xv48l4";
        authors = [
          "nwin <nwin@users.noreply.github.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "crc32fast";
            packageId = "crc32fast";
          }
          {
            name = "deflate";
            packageId = "deflate";
            optional = true;
          }
          {
            name = "inflate";
            packageId = "inflate";
          }
        ];
        features = {
          "default" = [ "png-encoding" ];
          "png-encoding" = [ "deflate" ];
        };
        resolvedDefaultFeatures = [ "default" "deflate" "png-encoding" ];
      };
      "ppv-lite86" = rec {
        crateName = "ppv-lite86";
        version = "0.2.5";
        edition = "2018";
        sha256 = "06snnv338w341nicfqba2jgln5dsla72ndkgrw7h1dfdb3vgkjz3";
        authors = [
          "The CryptoCorrosion Contributors"
        ];
        features = {
          "default" = [ "std" "simd" ];
        };
        resolvedDefaultFeatures = [ "default" "simd" "std" ];
      };
      "pretty-hex" = rec {
        crateName = "pretty-hex";
        version = "0.1.0";
        edition = "2015";
        sha256 = "1xxq2vdf45kykzczbpilq6v2iny1qdfinylgi0yvncdplfi2k68i";
        authors = [
          "Andrei Volnin <wolandr@gmail.com>"
        ];
        
      };
      "pretty_assertions" = rec {
        crateName = "pretty_assertions";
        version = "0.6.1";
        edition = "2018";
        sha256 = "09yl14gnmpygiqrdlsa64lcl4w6ydjl9m8jri6kgam0v9rjf309z";
        authors = [
          "Colin Kiegel <kiegel@gmx.de>"
          "Florent Fayolle <florent.fayolle69@gmail.com>"
        ];
        dependencies = [
          {
            name = "ansi_term";
            packageId = "ansi_term 0.11.0";
          }
          {
            name = "ctor";
            packageId = "ctor";
            target = { target, features }: target."windows";
          }
          {
            name = "difference";
            packageId = "difference";
          }
          {
            name = "output_vt100";
            packageId = "output_vt100";
            target = { target, features }: target."windows";
          }
        ];
        
      };
      "pretty_env_logger" = rec {
        crateName = "pretty_env_logger";
        version = "0.3.1";
        edition = "2015";
        sha256 = "0x4hyjlnvvhyk9m74iypzybm22w3dl2k8img4b956239n5vf8zki";
        authors = [
          "Sean McArthur <sean@seanmonstar>"
        ];
        dependencies = [
          {
            name = "chrono";
            packageId = "chrono";
          }
          {
            name = "env_logger";
            packageId = "env_logger";
          }
          {
            name = "log";
            packageId = "log";
          }
        ];
        
      };
      "prettytable-rs" = rec {
        crateName = "prettytable-rs";
        version = "0.8.0";
        edition = "2015";
        crateBin = [];
        sha256 = "0bmcsxkcy94hi0jz5db0fz137w5aaf17z2j1ryn2vyh400blpl0g";
        libName = "prettytable";
        authors = [
          "Pierre-Henri Symoneaux"
        ];
        dependencies = [
          {
            name = "atty";
            packageId = "atty";
          }
          {
            name = "csv";
            packageId = "csv";
            optional = true;
          }
          {
            name = "encode_unicode";
            packageId = "encode_unicode";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
          }
          {
            name = "term";
            packageId = "term";
          }
          {
            name = "unicode-width";
            packageId = "unicode-width";
          }
        ];
        features = {
          "default" = [ "win_crlf" "csv" ];
        };
        resolvedDefaultFeatures = [ "csv" "default" "win_crlf" ];
      };
      "proc-macro2 0.4.30" = rec {
        crateName = "proc-macro2";
        version = "0.4.30";
        edition = "2015";
        sha256 = "0nd71fl24sys066jrha6j7i34nfkjv44yzw8yww9742wmc8j0gfg";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "unicode-xid";
            packageId = "unicode-xid 0.1.0";
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "proc-macro2 1.0.1" = rec {
        crateName = "proc-macro2";
        version = "1.0.1";
        edition = "2018";
        sha256 = "00n8db56q9m6qfcla8ddxi6m9qvmjygbx63nwnm6z1w8ms026p2c";
        libName = "proc_macro2";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "unicode-xid";
            packageId = "unicode-xid 0.2.0";
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "ptree" = rec {
        crateName = "ptree";
        version = "0.2.1";
        edition = "2015";
        sha256 = "1m1qm478d9r713wkcssz6jbzckdblwiwbh9q6b9ppvhr1gh3n2kb";
        authors = [
          "Miha Čančula <miha@noughmad.eu>"
        ];
        dependencies = [
          {
            name = "ansi_term";
            packageId = "ansi_term 0.11.0";
            optional = true;
          }
          {
            name = "config";
            packageId = "config";
          }
          {
            name = "directories";
            packageId = "directories";
          }
          {
            name = "isatty";
            packageId = "isatty";
            optional = true;
          }
          {
            name = "petgraph";
            packageId = "petgraph";
            optional = true;
          }
          {
            name = "serde";
            packageId = "serde 1.0.100";
          }
          {
            name = "serde-value";
            packageId = "serde-value";
            optional = true;
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "tint";
            packageId = "tint";
            optional = true;
          }
        ];
        features = {
          "ansi" = [ "ansi_term" "isatty" "tint" ];
          "default" = [ "petgraph" "ansi" "value" ];
          "value" = [ "serde-value" ];
        };
        resolvedDefaultFeatures = [ "ansi" "ansi_term" "default" "isatty" "petgraph" "serde-value" "tint" "value" ];
      };
      "quick-error" = rec {
        crateName = "quick-error";
        version = "1.2.2";
        edition = "2015";
        sha256 = "1w6kgwwv7p7zr0yyg5rb315lkk24bimywklwx7fsvsbwi10bjx4j";
        authors = [
          "Paul Colomiets <paul@colomiets.name>"
          "Colin Kiegel <kiegel@gmx.de>"
        ];
        
      };
      "quote 0.6.13" = rec {
        crateName = "quote";
        version = "0.6.13";
        edition = "2015";
        sha256 = "1qgqq48jymp5h4y082aanf25hrw6bpb678xh3zw993qfhxmkpqkc";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 0.4.30";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
          "proc-macro" = [ "proc-macro2/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "quote 1.0.2" = rec {
        crateName = "quote";
        version = "1.0.2";
        edition = "2018";
        sha256 = "1zkc46ryacf2jdkc6krsy2z615xbk1x8kp1830rcxz3irj5qqfh5";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.1";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
          "proc-macro" = [ "proc-macro2/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "rand 0.6.5" = rec {
        crateName = "rand";
        version = "0.6.5";
        edition = "2015";
        sha256 = "1jl4449jcl4wgmzld6ffwqj5gwxrp8zvx8w573g1z368qg6xlwbd";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: target."unix";
          }
          {
            name = "rand_chacha";
            packageId = "rand_chacha 0.1.1";
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.4.2";
          }
          {
            name = "rand_hc";
            packageId = "rand_hc 0.1.0";
          }
          {
            name = "rand_isaac";
            packageId = "rand_isaac";
          }
          {
            name = "rand_jitter";
            packageId = "rand_jitter";
          }
          {
            name = "rand_os";
            packageId = "rand_os";
            optional = true;
          }
          {
            name = "rand_pcg";
            packageId = "rand_pcg";
          }
          {
            name = "rand_xorshift";
            packageId = "rand_xorshift";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "minwindef" "ntsecapi" "profileapi" "winnt" ];
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
        ];
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "nightly" = [ "simd_support" ];
          "serde1" = [ "rand_core/serde1" "rand_isaac/serde1" "rand_xorshift/serde1" ];
          "simd_support" = [ "packed_simd" ];
          "std" = [ "rand_core/std" "alloc" "rand_os" "rand_jitter/std" ];
          "stdweb" = [ "rand_os/stdweb" ];
          "wasm-bindgen" = [ "rand_os/wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "rand_os" "std" ];
      };
      "rand 0.7.0" = rec {
        crateName = "rand";
        version = "0.7.0";
        edition = "2018";
        sha256 = "0b05gwx8nnxr9bydyjxd1rszdvqnm946ky15z103ssfrhc7anznl";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "getrandom";
            packageId = "getrandom";
            rename = "getrandom_package";
            optional = true;
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: target."unix";
          }
          {
            name = "rand_chacha";
            packageId = "rand_chacha 0.2.1";
            target = { target, features }: (!(target."os" == "emscripten"));
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.5.0";
          }
          {
            name = "rand_hc";
            packageId = "rand_hc 0.2.0";
            target = { target, features }: (target."os" == "emscripten");
          }
        ];
        devDependencies = [
          {
            name = "rand_hc";
            packageId = "rand_hc 0.2.0";
          }
        ];
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "getrandom" = [ "getrandom_package" "rand_core/getrandom" ];
          "nightly" = [ "simd_support" ];
          "simd_support" = [ "packed_simd" ];
          "small_rng" = [ "rand_pcg" ];
          "std" = [ "rand_core/std" "alloc" "getrandom" ];
          "stdweb" = [ "getrandom_package/stdweb" ];
          "wasm-bindgen" = [ "getrandom_package/wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "getrandom" "getrandom_package" "std" ];
      };
      "rand_chacha 0.1.1" = rec {
        crateName = "rand_chacha";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1vxwyzs4fy1ffjc8l00fsyygpiss135irjf7nyxgq2v0lqf3lvam";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
        ];
        
      };
      "rand_chacha 0.2.1" = rec {
        crateName = "rand_chacha";
        version = "0.2.1";
        edition = "2018";
        sha256 = "0lv8imzzl4h2glm6sjj8mkvasgi8jym23ya48dakyln7m06sk8h3";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
          "The CryptoCorrosion Contributors"
        ];
        dependencies = [
          {
            name = "c2-chacha";
            packageId = "c2-chacha";
            usesDefaultFeatures = false;
            features = [ "simd" ];
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.5.0";
          }
        ];
        features = {
          "default" = [ "std" "simd" ];
          "std" = [ "c2-chacha/std" ];
        };
        resolvedDefaultFeatures = [ "default" "simd" "std" ];
      };
      "rand_core 0.3.1" = rec {
        crateName = "rand_core";
        version = "0.3.1";
        edition = "2015";
        sha256 = "0jzdgszfa4bliigiy4hi66k7fs3gfwi2qxn8vik84ph77fwdwvvs";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.4.2";
          }
        ];
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "serde1" = [ "rand_core/serde1" ];
          "std" = [ "rand_core/std" ];
        };
      };
      "rand_core 0.4.2" = rec {
        crateName = "rand_core";
        version = "0.4.2";
        edition = "2015";
        sha256 = "1p09ynysrq1vcdlmcqnapq4qakl2yd1ng3kxh3qscpx09k2a6cww";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        features = {
          "serde1" = [ "serde" "serde_derive" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
      "rand_core 0.5.0" = rec {
        crateName = "rand_core";
        version = "0.5.0";
        edition = "2015";
        sha256 = "1jis94x9ri8xlxki2w2w5k29sjpfwgzkjylg7paganp74hrnhpk1";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "getrandom";
            packageId = "getrandom";
            optional = true;
          }
        ];
        features = {
          "serde1" = [ "serde" "serde_derive" ];
          "std" = [ "alloc" "getrandom" "getrandom/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "getrandom" "std" ];
      };
      "rand_hc 0.1.0" = rec {
        crateName = "rand_hc";
        version = "0.1.0";
        edition = "2015";
        sha256 = "1i0vl8q5ddvvy0x8hf1zxny393miyzxkwqnw31ifg6p0gdy6fh3v";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1";
            usesDefaultFeatures = false;
          }
        ];
        
      };
      "rand_hc 0.2.0" = rec {
        crateName = "rand_hc";
        version = "0.2.0";
        edition = "2018";
        sha256 = "0g31sqwpmsirdlwr0svnacr4dbqyz339im4ssl9738cjgfpjjcfa";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.5.0";
          }
        ];
        
      };
      "rand_isaac" = rec {
        crateName = "rand_isaac";
        version = "0.1.1";
        edition = "2015";
        sha256 = "027flpjr4znx2csxk7gxb7vrf9c7y5mydmvg5az2afgisp4rgnfy";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "serde1" = [ "serde" "serde_derive" "rand_core/serde1" ];
        };
      };
      "rand_jitter" = rec {
        crateName = "rand_jitter";
        version = "0.1.4";
        edition = "2015";
        sha256 = "16z387y46bfz3csc42zxbjq89vcr1axqacncvv8qhyy93p4xarhi";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.4.2";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: (target."os" == "windows");
            features = [ "profileapi" ];
          }
        ];
        features = {
          "std" = [ "rand_core/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "rand_os" = rec {
        crateName = "rand_os";
        version = "0.1.3";
        edition = "2015";
        sha256 = "0wahppm0s64gkr2vmhcgwc0lij37in1lgfxg5rbgqlz0l5vgcxbv";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "cloudabi";
            packageId = "cloudabi";
            target = { target, features }: (target."os" == "cloudabi");
          }
          {
            name = "fuchsia-cprng";
            packageId = "fuchsia-cprng";
            target = { target, features }: (target."os" == "fuchsia");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.4.2";
            features = [ "std" ];
          }
          {
            name = "rdrand";
            packageId = "rdrand";
            target = { target, features }: (target."env" == "sgx");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "minwindef" "ntsecapi" "winnt" ];
          }
        ];
        
      };
      "rand_pcg" = rec {
        crateName = "rand_pcg";
        version = "0.1.2";
        edition = "2015";
        sha256 = "0i0bdla18a8x4jn1w0fxsbs3jg7ajllz6azmch1zw33r06dv1ydb";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.4.2";
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
        ];
        features = {
          "serde1" = [ "serde" "serde_derive" ];
        };
      };
      "rand_xorshift" = rec {
        crateName = "rand_xorshift";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0p2x8nr00hricpi2m6ca5vysiha7ybnghz79yqhhx6sl4gkfkxyb";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "serde1" = [ "serde" "serde_derive" ];
        };
      };
      "raw-cpuid" = rec {
        crateName = "raw-cpuid";
        version = "7.0.3";
        edition = "2015";
        crateBin = [];
        sha256 = "1bzfpjlsd8701m0gd9biv84clb4bwmvgsrmvdmfzlg1phg54k8xl";
        authors = [
          "Gerd Zellweger <mail@gerdzellweger.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
          {
            name = "rustc_version";
            packageId = "rustc_version";
          }
        ];
        features = {
          "serialize" = [ "serde" "serde_derive" ];
        };
      };
      "rawkey" = rec {
        crateName = "rawkey";
        version = "0.1.2";
        edition = "2018";
        sha256 = "15rqwh2insa0hlijrrrmqr6lxfpkyr9w4aq0bir21f6wjfj1gv1k";
        authors = [
          "Jonathan Turner <jonathan.d.turner@gmail.com>"
        ];
        dependencies = [
          {
            name = "readkey";
            packageId = "readkey";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "user32-sys";
            packageId = "user32-sys";
            target = { target, features }: (target."os" == "windows");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: (target."os" == "windows");
            features = [ "winuser" ];
          }
          {
            name = "x11";
            packageId = "x11";
            target = { target, features }: (target."os" == "linux");
            features = [ "xlib" ];
          }
        ];
        
      };
      "rdrand" = rec {
        crateName = "rdrand";
        version = "0.4.0";
        edition = "2015";
        sha256 = "1cjq0kwx1bk7jx3kzyciiish5gqsj7620dm43dc52sr8fzmm9037";
        authors = [
          "Simonas Kazlauskas <rdrand@kazlauskas.me>"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "readkey" = rec {
        crateName = "readkey";
        version = "0.1.5";
        edition = "2015";
        sha256 = "03wg9qhkhgfr2h981xdgagbminb6jg6lfr8qv342dsgkni5vk3fr";
        authors = [
          "Klas Segeljakt <klasseg@kth.se>"
        ];
        
      };
      "redox_syscall" = rec {
        crateName = "redox_syscall";
        version = "0.1.56";
        edition = "2015";
        sha256 = "110y7dyfm2vci4x5vk7gr0q551dvp31npl99fnsx2fb17wzwcf94";
        libName = "syscall";
        authors = [
          "Jeremy Soller <jackpot51@gmail.com>"
        ];
        
      };
      "redox_users" = rec {
        crateName = "redox_users";
        version = "0.3.1";
        edition = "2015";
        sha256 = "0vdn688q9wg997b1x5abx2gf7406rn1lvd62ypcgh1gj7g5dpkjf";
        authors = [
          "Jose Narvaez <goyox86@gmail.com>"
          "Wesley Hershberger <mggmugginsmc@gmail.com>"
        ];
        dependencies = [
          {
            name = "failure";
            packageId = "failure";
          }
          {
            name = "rand_os";
            packageId = "rand_os";
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
          }
          {
            name = "rust-argon2";
            packageId = "rust-argon2";
          }
        ];
        
      };
      "regex" = rec {
        crateName = "regex";
        version = "1.2.1";
        edition = "2015";
        sha256 = "09jww0faqvdprr9482ppxm1asbp6lhihr8zl9ma5sa4474cxkhw8";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "aho-corasick";
            packageId = "aho-corasick";
          }
          {
            name = "memchr";
            packageId = "memchr";
          }
          {
            name = "regex-syntax";
            packageId = "regex-syntax";
          }
          {
            name = "thread_local";
            packageId = "thread_local";
          }
        ];
        features = {
          "default" = [ "use_std" ];
          "unstable" = [ "pattern" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
      "regex-automata" = rec {
        crateName = "regex-automata";
        version = "0.1.8";
        edition = "2015";
        sha256 = "1y89vkwd9z7797lsdsizvhw4lw7i1mhfx97a8315bhkh2wm3rdwj";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "regex-syntax" "utf8-ranges" ];
        };
      };
      "regex-syntax" = rec {
        crateName = "regex-syntax";
        version = "0.6.11";
        edition = "2015";
        sha256 = "0grli4djafrkckh4ilvcw5z3wwqmasqzi3lqf5b6vrd55kmwqhxi";
        authors = [
          "The Rust Project Developers"
        ];
        
      };
      "remove_dir_all" = rec {
        crateName = "remove_dir_all";
        version = "0.5.2";
        edition = "2015";
        sha256 = "0bkrlyg26mgizpiy1yb2hhpgscxcag8r5fnckqsvk25608vzm0sa";
        authors = [
          "Aaronepower <theaaronepower@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "std" "errhandlingapi" "winerror" "fileapi" "winbase" ];
          }
        ];
        
      };
      "render-tree" = rec {
        crateName = "render-tree";
        version = "0.1.1";
        edition = "2018";
        sha256 = "0r0nwdkyqj5rpz62d4q45hi9y8fv4izggs3gpkhprywwy1ymivb8";
        authors = [
          "Yehuda Katz <wycats@gmail.com>"
        ];
        dependencies = [
          {
            name = "itertools";
            packageId = "itertools 0.7.11";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "termcolor";
            packageId = "termcolor";
          }
        ];
        
      };
      "result" = rec {
        crateName = "result";
        version = "1.0.0";
        edition = "2015";
        sha256 = "0q2mslk9mvpdrl5zr1yvlb8ikmynpq5786c8ybn1wpa03rcqwk8r";
        authors = [
          "arcnmx"
        ];
        
      };
      "roxmltree" = rec {
        crateName = "roxmltree";
        version = "0.7.0";
        edition = "2015";
        sha256 = "0756w1df02ylhw1cygzg0f5zi81v12yr5vrpwspzg3pvx5y3cg0m";
        authors = [
          "Evgeniy Reizner <razrfalcon@gmail.com>"
        ];
        dependencies = [
          {
            name = "xmlparser";
            packageId = "xmlparser";
          }
        ];
        
      };
      "rusqlite" = rec {
        crateName = "rusqlite";
        version = "0.20.0";
        edition = "2018";
        sha256 = "0lfhxmx1isrk29vmbqg6jwsgf991vh81phhvb9j3aw2jxxrl669a";
        authors = [
          "John Gallagher <jgallagher@bignerdranch.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "fallible-iterator";
            packageId = "fallible-iterator";
          }
          {
            name = "fallible-streaming-iterator";
            packageId = "fallible-streaming-iterator";
          }
          {
            name = "libsqlite3-sys";
            packageId = "libsqlite3-sys";
          }
          {
            name = "lru-cache";
            packageId = "lru-cache";
          }
          {
            name = "memchr";
            packageId = "memchr";
          }
          {
            name = "time";
            packageId = "time";
          }
        ];
        features = {
          "array" = [ "vtab" ];
          "backup" = [ "libsqlite3-sys/min_sqlite_version_3_6_23" ];
          "blob" = [ "libsqlite3-sys/min_sqlite_version_3_7_7" ];
          "buildtime_bindgen" = [ "libsqlite3-sys/buildtime_bindgen" ];
          "bundled" = [ "libsqlite3-sys/bundled" ];
          "csvtab" = [ "csv" "vtab" ];
          "functions" = [ "libsqlite3-sys/min_sqlite_version_3_7_7" ];
          "i128_blob" = [ "byteorder" ];
          "series" = [ "vtab" ];
          "session" = [ "libsqlite3-sys/session" "hooks" ];
          "sqlcipher" = [ "libsqlite3-sys/sqlcipher" ];
          "trace" = [ "libsqlite3-sys/min_sqlite_version_3_6_23" ];
          "unlock_notify" = [ "libsqlite3-sys/unlock_notify" ];
          "vtab" = [ "libsqlite3-sys/min_sqlite_version_3_7_7" "lazy_static" ];
          "vtab_v3" = [ "vtab" ];
          "window" = [ "functions" ];
        };
        resolvedDefaultFeatures = [ "blob" "bundled" ];
      };
      "rust-argon2" = rec {
        crateName = "rust-argon2";
        version = "0.5.1";
        edition = "2015";
        sha256 = "1krjkmyfn37hy7sfs6lqia0fsvw130nn1z2850glsjcva7pym92c";
        libName = "argon2";
        authors = [
          "Martijn Rijkeboer <mrr@sru-systems.com>"
        ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64";
          }
          {
            name = "blake2b_simd";
            packageId = "blake2b_simd";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.6.6";
          }
        ];
        
      };
      "rust-ini" = rec {
        crateName = "rust-ini";
        version = "0.13.0";
        edition = "2015";
        sha256 = "1hifnbgaz01zja5995chy6vjacbif2m76nlxsisw7y1pxx4c2liy";
        libName = "ini";
        authors = [
          "Y. T. Chung <zonyitoo@gmail.com>"
        ];
        
      };
      "rustc-demangle" = rec {
        crateName = "rustc-demangle";
        version = "0.1.15";
        edition = "2015";
        sha256 = "1brqf2bknkxsdzn3kd3wfifvzfc33bmvdy9r1k6fp4a8dz7xrx57";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
      "rustc-serialize" = rec {
        crateName = "rustc-serialize";
        version = "0.3.24";
        edition = "2015";
        sha256 = "1nkg3vasg7nk80ffkazizgiyv3hb1l9g3d8h17cajbkx538jiwfw";
        authors = [
          "The Rust Project Developers"
        ];
        
      };
      "rustc_version" = rec {
        crateName = "rustc_version";
        version = "0.2.3";
        edition = "2015";
        sha256 = "02h3x57lcr8l2pm0a645s9whdh33pn5cnrwvn5cb57vcrc53x3hk";
        authors = [
          "Marvin Löbel <loebel.marvin@gmail.com>"
        ];
        dependencies = [
          {
            name = "semver";
            packageId = "semver";
          }
        ];
        
      };
      "rustyline" = rec {
        crateName = "rustyline";
        version = "5.0.3";
        edition = "2018";
        sha256 = "05y4i4mp4n3fb46xij4d1sldlw8kk7a5ql9bysfyqzg5wrvy55a7";
        authors = [
          "Katsu Kawakami <kkawa1570@gmail.com>"
        ];
        dependencies = [
          {
            name = "dirs";
            packageId = "dirs 2.0.2";
            optional = true;
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "memchr";
            packageId = "memchr";
          }
          {
            name = "nix";
            packageId = "nix 0.14.1";
            target = { target, features }: target."unix";
          }
          {
            name = "unicode-segmentation";
            packageId = "unicode-segmentation";
          }
          {
            name = "unicode-width";
            packageId = "unicode-width";
          }
          {
            name = "utf8parse";
            packageId = "utf8parse";
            target = { target, features }: target."unix";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "consoleapi" "handleapi" "minwindef" "processenv" "winbase" "wincon" "winuser" ];
          }
        ];
        features = {
          "default" = [ "with-dirs" ];
          "with-dirs" = [ "dirs" ];
        };
        resolvedDefaultFeatures = [ "default" "dirs" "with-dirs" ];
      };
      "ryu" = rec {
        crateName = "ryu";
        version = "1.0.0";
        edition = "2015";
        sha256 = "15r9z2wzgbj04pks4jz7y6wif5xqhf1wqkl2nd7qrvn08ys68969";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
        };
      };
      "safemem" = rec {
        crateName = "safemem";
        version = "0.3.1";
        edition = "2015";
        sha256 = "1mcx6gfcmzf56by3i3lbcdzxqmkx50cgczwarj4lzkfiyk2cqcz1";
        authors = [
          "Austin Bonander <austin.bonander@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "same-file" = rec {
        crateName = "same-file";
        version = "1.0.5";
        edition = "2015";
        sha256 = "08a4zy10pjindf2rah320s6shgswk13mqw7s61m8i1y1xpf8spjq";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi-util";
            packageId = "winapi-util";
            target = { target, features }: target."windows";
          }
        ];
        
      };
      "schannel" = rec {
        crateName = "schannel";
        version = "0.1.15";
        edition = "2015";
        sha256 = "0f9k4pm8yc3z0n1n8hazvnrvg52f0sfxjc91bhf3r76rb3rapxpj";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
          "Steffen Butzer <steffen.butzer@outlook.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            features = [ "lmcons" "minschannel" "securitybaseapi" "schannel" "sspi" "sysinfoapi" "timezoneapi" "winbase" "wincrypt" "winerror" ];
          }
        ];
        
      };
      "semver" = rec {
        crateName = "semver";
        version = "0.9.0";
        edition = "2015";
        sha256 = "00q4lkcj0rrgbhviv9sd4p6qmdsipkwkbra7rh11jrhq5kpvjzhx";
        authors = [
          "Steve Klabnik <steve@steveklabnik.com>"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "semver-parser";
            packageId = "semver-parser";
          }
        ];
        features = {
          "ci" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "semver-parser" = rec {
        crateName = "semver-parser";
        version = "0.7.0";
        edition = "2015";
        sha256 = "18vhypw6zgccnrlm5ps1pwa0khz7ry927iznpr88b87cagr1v2iq";
        authors = [
          "Steve Klabnik <steve@steveklabnik.com>"
        ];
        
      };
      "serde 0.8.23" = rec {
        crateName = "serde";
        version = "0.8.23";
        edition = "2015";
        sha256 = "1j4ajipn0sf4ya0crgcb94s848qp7mfc35n6d0q2rf8rk5skzbcx";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
        ];
        features = {
          "alloc" = [ "unstable" ];
          "collections" = [ "alloc" ];
          "default" = [ "std" ];
          "unstable-testing" = [ "clippy" "unstable" "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "serde 1.0.100" = rec {
        crateName = "serde";
        version = "1.0.100";
        edition = "2015";
        sha256 = "0nnrl6b053v0qpky46cj6ikcq7d5iys76406y87p64xj0s2kwizl";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde_derive";
            packageId = "serde_derive";
            optional = true;
          }
        ];
        devDependencies = [
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
        ];
        features = {
          "default" = [ "std" ];
          "derive" = [ "serde_derive" ];
        };
        resolvedDefaultFeatures = [ "default" "derive" "serde_derive" "std" ];
      };
      "serde-hjson 0.8.2" = rec {
        crateName = "serde-hjson";
        version = "0.8.2";
        edition = "2015";
        sha256 = "0lv1qwis9rr767xv9w27y1g1r71ayf02k2wkypawwlkxsrd3r0qb";
        authors = [
          "Christian Zangl <laktak@cdak.net>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 0.2.11";
          }
          {
            name = "linked-hash-map";
            packageId = "linked-hash-map 0.3.0";
            optional = true;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.1.43";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "serde";
            packageId = "serde 0.8.23";
          }
        ];
        features = {
          "default" = [ "preserve_order" ];
          "preserve_order" = [ "linked-hash-map" "linked-hash-map/serde_impl" ];
          "unstable-testing" = [ "clippy" ];
        };
        resolvedDefaultFeatures = [ "default" "linked-hash-map" "preserve_order" ];
      };
      "serde-hjson 0.9.1" = rec {
        crateName = "serde-hjson";
        version = "0.9.1";
        edition = "2015";
        sha256 = "1y3lzs8556bxqa9jfdyg38pd5jjffblczikckwh571d8m074wfka";
        authors = [
          "Christian Zangl <laktak@cdak.net>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
          }
          {
            name = "linked-hash-map";
            packageId = "linked-hash-map 0.3.0";
            optional = true;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.1.43";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "serde";
            packageId = "serde 0.8.23";
          }
        ];
        features = {
          "default" = [ "preserve_order" ];
          "preserve_order" = [ "linked-hash-map" "linked-hash-map/serde_impl" ];
          "unstable-testing" = [ "clippy" ];
        };
        resolvedDefaultFeatures = [ "default" "linked-hash-map" "preserve_order" ];
      };
      "serde-value" = rec {
        crateName = "serde-value";
        version = "0.5.3";
        edition = "2015";
        sha256 = "0kz4i4a2if0la082ww64bbf38b0b1nycdm2rlp0ymi7d7n3kyrks";
        authors = [
          "arcnmx"
        ];
        dependencies = [
          {
            name = "ordered-float";
            packageId = "ordered-float";
          }
          {
            name = "serde";
            packageId = "serde 1.0.100";
          }
        ];
        
      };
      "serde_bytes" = rec {
        crateName = "serde_bytes";
        version = "0.11.2";
        edition = "2018";
        sha256 = "1z7gwq92wrav9ln68gnmqmvaa99qv9kynd8257maxav4zy103bs5";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde 1.0.100";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "serde/alloc" ];
          "default" = [ "std" ];
          "std" = [ "serde/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "serde_derive" = rec {
        crateName = "serde_derive";
        version = "1.0.98";
        edition = "2015";
        sha256 = "172jgdv5csxmmsycs16pqr9qd0bvfn65n9zfcxa287v3i8drxrh1";
        procMacro = true;
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 0.4.30";
          }
          {
            name = "quote";
            packageId = "quote 0.6.13";
          }
          {
            name = "syn";
            packageId = "syn 0.15.43";
            features = [ "visit" ];
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "serde_derive_internals" = rec {
        crateName = "serde_derive_internals";
        version = "0.24.1";
        edition = "2015";
        sha256 = "1ywgn5917kczly5yrbzi2xfl4yhrzbly5sf7q97fmg7bn70cd04a";
        libPath = "lib.rs";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 0.4.30";
          }
          {
            name = "syn";
            packageId = "syn 0.15.43";
            usesDefaultFeatures = false;
            features = [ "derive" "parsing" "clone-impls" ];
          }
        ];
        
      };
      "serde_ini" = rec {
        crateName = "serde_ini";
        version = "0.2.0";
        edition = "2015";
        sha256 = "0f8ir1bbcdyad50aj1c53dkiwr24x6dr88f045skl1xvwa3nc8zb";
        authors = [
          "arcnmx"
        ];
        dependencies = [
          {
            name = "result";
            packageId = "result";
          }
          {
            name = "serde";
            packageId = "serde 1.0.100";
          }
          {
            name = "void";
            packageId = "void";
          }
        ];
        
      };
      "serde_json" = rec {
        crateName = "serde_json";
        version = "1.0.40";
        edition = "2015";
        sha256 = "010pa89zx07aqx1cwgw2a603wcp3q5n2iy0k71ppqbr8kwi4j705";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "indexmap";
            packageId = "indexmap";
            optional = true;
          }
          {
            name = "itoa";
            packageId = "itoa";
          }
          {
            name = "ryu";
            packageId = "ryu";
          }
          {
            name = "serde";
            packageId = "serde 1.0.100";
          }
        ];
        features = {
          "preserve_order" = [ "indexmap" ];
        };
        resolvedDefaultFeatures = [ "default" "indexmap" "preserve_order" ];
      };
      "serde_test" = rec {
        crateName = "serde_test";
        version = "0.8.23";
        edition = "2015";
        sha256 = "1m939j7cgs7i58r6vxf0ffp3nbr8advr8p9dqa9w8zk0z2yks2qi";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde 0.8.23";
          }
        ];
        
      };
      "serde_urlencoded" = rec {
        crateName = "serde_urlencoded";
        version = "0.6.1";
        edition = "2015";
        sha256 = "15rcwfkff0md5i231m2ym5756ksw1mkh5b5g2rw72wsc5mzdgicy";
        authors = [
          "Anthony Ramine <n.oxyde@gmail.com>"
        ];
        dependencies = [
          {
            name = "dtoa";
            packageId = "dtoa";
          }
          {
            name = "itoa";
            packageId = "itoa";
          }
          {
            name = "serde";
            packageId = "serde 1.0.100";
          }
          {
            name = "url";
            packageId = "url";
          }
        ];
        
      };
      "serde_yaml" = rec {
        crateName = "serde_yaml";
        version = "0.8.9";
        edition = "2015";
        sha256 = "10mmjpnshgrwij01a13679nxy1hnh5yfr0343kh0y9p5j2d8mc1q";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "dtoa";
            packageId = "dtoa";
          }
          {
            name = "linked-hash-map";
            packageId = "linked-hash-map 0.5.2";
          }
          {
            name = "serde";
            packageId = "serde 1.0.100";
          }
          {
            name = "yaml-rust";
            packageId = "yaml-rust";
          }
        ];
        
      };
      "shell32-sys" = rec {
        crateName = "shell32-sys";
        version = "0.1.2";
        edition = "2015";
        sha256 = "0b0jjnv8rr4flllvpx9lkfvvxdl3hac53cd2klf14mqz2134pq4y";
        libName = "shell32";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
          }
        ];
        buildDependencies = [
          {
            name = "winapi-build";
            packageId = "winapi-build";
          }
        ];
        
      };
      "shellexpand" = rec {
        crateName = "shellexpand";
        version = "1.0.0";
        edition = "2015";
        sha256 = "0r3mfdvcjda7j57iz5g6aa9q918v3819n8702252gza2j5d5nyny";
        authors = [
          "Vladimir Matveev <vladimir.matweev@gmail.com>"
        ];
        
      };
      "slab" = rec {
        crateName = "slab";
        version = "0.4.2";
        edition = "2015";
        sha256 = "1y59xsa27jk84sxzswjk60xcjf8b4fm5960jwpznrrcmasyva4f1";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        
      };
      "sluice" = rec {
        crateName = "sluice";
        version = "0.4.1";
        edition = "2018";
        sha256 = "1dsr9sdc9ifk6ia7jfszj5q73x1bwrn1qagp3152s9kwn71xfw7c";
        authors = [
          "Stephen M. Coakley <me@stephencoakley.com>"
        ];
        dependencies = [
          {
            name = "futures-channel-preview";
            packageId = "futures-channel-preview";
          }
          {
            name = "futures-core-preview";
            packageId = "futures-core-preview";
          }
          {
            name = "futures-io-preview";
            packageId = "futures-io-preview";
          }
        ];
        features = {
        };
      };
      "smallvec" = rec {
        crateName = "smallvec";
        version = "0.6.10";
        edition = "2015";
        sha256 = "1dyl43rgzny79jjpgzi07y0ly2ggx1xwsn64csxj0j91bsf6lq5b";
        libPath = "lib.rs";
        authors = [
          "Simon Sapin <simon.sapin@exyr.org>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "socket2" = rec {
        crateName = "socket2";
        version = "0.3.11";
        edition = "2018";
        sha256 = "11bdcz04i106g4q7swkll0qxrb4287srqd2k3aq2q6i22zjlvdz8";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
            target = { target, features }: (target."unix" || (target."os" == "redox"));
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" || (target."os" == "redox"));
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "handleapi" "ws2def" "ws2ipdef" "ws2tcpip" "minwindef" ];
          }
        ];
        features = {
        };
      };
      "sourcefile" = rec {
        crateName = "sourcefile";
        version = "0.1.4";
        edition = "2015";
        sha256 = "1lwa6973zs4bgj29my7agfjgk4nw9hp6j7dfnr13nid85fw7rxsb";
        authors = [
          "Richard Dodd <richard.o.dodd@gmail.com>"
        ];
        
      };
      "stackvector" = rec {
        crateName = "stackvector";
        version = "1.0.6";
        edition = "2015";
        sha256 = "1bv820fhdad16islwli1g3iksk39ivf0zaqz4j1m08vq15jjaiqw";
        authors = [
          "Alex Huszagh <ahuszagh@ahuszagh.localdomain>"
        ];
        dependencies = [
          {
            name = "unreachable";
            packageId = "unreachable";
          }
        ];
        buildDependencies = [
          {
            name = "rustc_version";
            packageId = "rustc_version";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "static_assertions" = rec {
        crateName = "static_assertions";
        version = "0.3.3";
        edition = "2015";
        sha256 = "0hdj6cxknz53vxnf7szpifs16rk4l3x0n0i4bzmm6li1v8vdxy5l";
        authors = [
          "Nikolai Vazquez"
        ];
        features = {
        };
      };
      "strsim" = rec {
        crateName = "strsim";
        version = "0.8.0";
        edition = "2015";
        sha256 = "0sjsm7hrvjdifz661pjxq5w4hf190hx53fra8dfvamacvff139cf";
        authors = [
          "Danny Guo <dannyguo91@gmail.com>"
        ];
        
      };
      "sublime_fuzzy" = rec {
        crateName = "sublime_fuzzy";
        version = "0.5.0";
        edition = "2015";
        sha256 = "1kvs0zgcs47gkk9w534zw10z6d622yhzzhk0gwx3ljgak3b7mgcp";
        authors = [
          "Benedikt Schatz <schlchtwtrfrnt@gmail.com>"
        ];
        
      };
      "subprocess" = rec {
        crateName = "subprocess";
        version = "0.1.18";
        edition = "2015";
        crateBin = [];
        sha256 = "001wzxqyvssfphi7g943asll20xrsbbafyilklrp7nn0y100zz18";
        authors = [
          "Hrvoje Nikšić <hniksic@gmail.com>"
        ];
        dependencies = [
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.5.0";
            target = { target, features }: target."windows";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "std" "handleapi" "namedpipeapi" "processenv" "synchapi" "winerror" "processthreadsapi" "winbase" ];
          }
        ];
        
      };
      "surf" = rec {
        crateName = "surf";
        version = "1.0.2";
        edition = "2018";
        sha256 = "10zqns5ksbi71ik4nvcrw2xvx0j8qv2m0pahi3mmnifymrjfv3h1";
        authors = [
          "Yoshua Wuyts <yoshuawuyts@gmail.com>"
        ];
        dependencies = [
          {
            name = "futures-preview";
            packageId = "futures-preview";
            features = [ "compat" "io-compat" ];
          }
          {
            name = "http";
            packageId = "http";
          }
          {
            name = "isahc";
            packageId = "isahc";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: (!(target."arch" == "wasm32"));
            features = [ "http2" ];
          }
          {
            name = "js-sys";
            packageId = "js-sys";
            optional = true;
            target = { target, features }: (target."arch" == "wasm32");
          }
          {
            name = "log";
            packageId = "log";
            features = [ "kv_unstable" ];
          }
          {
            name = "mime";
            packageId = "mime";
          }
          {
            name = "mime_guess";
            packageId = "mime_guess";
          }
          {
            name = "serde";
            packageId = "serde 1.0.100";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "serde_urlencoded";
            packageId = "serde_urlencoded";
          }
          {
            name = "url";
            packageId = "url";
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
            optional = true;
            target = { target, features }: (target."arch" == "wasm32");
          }
          {
            name = "wasm-bindgen-futures";
            packageId = "wasm-bindgen-futures";
            optional = true;
            target = { target, features }: (target."arch" == "wasm32");
            features = [ "futures_0_3" ];
          }
          {
            name = "web-sys";
            packageId = "web-sys";
            optional = true;
            target = { target, features }: (target."arch" == "wasm32");
            features = [ "AbortSignal" "Headers" "ObserverCallback" "ReferrerPolicy" "Request" "RequestCache" "RequestCredentials" "RequestInit" "RequestMode" "RequestRedirect" "Response" "Window" ];
          }
        ];
        devDependencies = [
          {
            name = "serde";
            packageId = "serde 1.0.100";
            features = [ "derive" ];
          }
        ];
        features = {
          "curl-client" = [ "isahc" ];
          "default" = [ "native-client" "middleware-logger" ];
          "hyper-client" = [ "hyper" "runtime" "runtime-raw" "runtime-tokio" ];
          "native-client" = [ "curl-client" "wasm-client" ];
          "wasm-client" = [ "js-sys" "web-sys" "wasm-bindgen" "wasm-bindgen-futures" ];
        };
        resolvedDefaultFeatures = [ "curl-client" "default" "isahc" "js-sys" "middleware-logger" "native-client" "wasm-bindgen" "wasm-bindgen-futures" "wasm-client" "web-sys" ];
      };
      "syn 0.15.43" = rec {
        crateName = "syn";
        version = "0.15.43";
        edition = "2015";
        sha256 = "1wqan28bhdaws6yqc2gsifgki8s4cbhqpd66cwi9md8ac95yl1pf";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 0.4.30";
            usesDefaultFeatures = false;
          }
          {
            name = "quote";
            packageId = "quote 0.6.13";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "unicode-xid";
            packageId = "unicode-xid 0.1.0";
          }
        ];
        features = {
          "default" = [ "derive" "parsing" "printing" "clone-impls" "proc-macro" ];
          "printing" = [ "quote" ];
          "proc-macro" = [ "proc-macro2/proc-macro" "quote/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "clone-impls" "default" "derive" "extra-traits" "fold" "full" "parsing" "printing" "proc-macro" "quote" "visit" ];
      };
      "syn 1.0.4" = rec {
        crateName = "syn";
        version = "1.0.4";
        edition = "2018";
        sha256 = "0cf75rv1wwak2jxs913ddrf766gw652yvy8wlihnp5rdn4d9apf6";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.1";
            usesDefaultFeatures = false;
          }
          {
            name = "quote";
            packageId = "quote 1.0.2";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "unicode-xid";
            packageId = "unicode-xid 0.2.0";
          }
        ];
        features = {
          "default" = [ "derive" "parsing" "printing" "clone-impls" "proc-macro" ];
          "printing" = [ "quote" ];
          "proc-macro" = [ "proc-macro2/proc-macro" "quote/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "clone-impls" "default" "derive" "full" "parsing" "printing" "proc-macro" "quote" "visit" "visit-mut" ];
      };
      "synstructure" = rec {
        crateName = "synstructure";
        version = "0.10.2";
        edition = "2015";
        sha256 = "0grirdkgh2wl4hf9a3nbiazpgccxgq54kn52ms0xrr6njvgkwd82";
        authors = [
          "Nika Layzell <nika@thelayzells.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 0.4.30";
          }
          {
            name = "quote";
            packageId = "quote 0.6.13";
          }
          {
            name = "syn";
            packageId = "syn 0.15.43";
            features = [ "visit" "extra-traits" ];
          }
          {
            name = "unicode-xid";
            packageId = "unicode-xid 0.1.0";
          }
        ];
        features = {
        };
      };
      "syntect" = rec {
        crateName = "syntect";
        version = "3.2.0";
        edition = "2015";
        sha256 = "0yqnja471ddz90q8wm8mmk37jxg5y0fg09rpzhpijhx5qlqqh2z8";
        authors = [
          "Tristan Hume <tristan@thume.ca>"
        ];
        dependencies = [
          {
            name = "bincode";
            packageId = "bincode";
            optional = true;
          }
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "flate2";
            packageId = "flate2";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "fnv";
            packageId = "fnv";
            optional = true;
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
          }
          {
            name = "lazycell";
            packageId = "lazycell";
          }
          {
            name = "onig";
            packageId = "onig";
            optional = true;
          }
          {
            name = "plist";
            packageId = "plist";
          }
          {
            name = "regex-syntax";
            packageId = "regex-syntax";
            optional = true;
          }
          {
            name = "serde";
            packageId = "serde 1.0.100";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "walkdir";
            packageId = "walkdir";
          }
          {
            name = "yaml-rust";
            packageId = "yaml-rust";
            optional = true;
          }
        ];
        features = {
          "default" = [ "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create" ];
          "dump-create" = [ "flate2/default" "bincode" ];
          "dump-create-rs" = [ "flate2/rust_backend" "bincode" ];
          "dump-load" = [ "flate2/default" "bincode" ];
          "dump-load-rs" = [ "flate2/rust_backend" "bincode" ];
          "html" = [ "parsing" "assets" ];
          "metadata" = [ "parsing" ];
          "parsing" = [ "onig" "regex-syntax" "fnv" ];
          "yaml-load" = [ "yaml-rust" "parsing" ];
        };
        resolvedDefaultFeatures = [ "assets" "bincode" "default" "dump-create" "dump-load" "flate2" "fnv" "html" "onig" "parsing" "regex-syntax" "yaml-load" "yaml-rust" ];
      };
      "tempfile" = rec {
        crateName = "tempfile";
        version = "3.1.0";
        edition = "2018";
        sha256 = "1a9cfdqw70n7bcnkx05aih9xdba8lqazmqlkjpkmn2la6gcj8vks";
        authors = [
          "Steven Allen <steven@stebalien.com>"
          "The Rust Project Developers"
          "Ashley Mannix <ashleymannix@live.com.au>"
          "Jason White <jasonaw0@gmail.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "rand";
            packageId = "rand 0.7.0";
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "remove_dir_all";
            packageId = "remove_dir_all";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "fileapi" "handleapi" "winbase" ];
          }
        ];
        
      };
      "term" = rec {
        crateName = "term";
        version = "0.5.2";
        edition = "2015";
        sha256 = "0hkgjrfisj6zjwz525639pmsvzhlc48a0h65nw87qrdp6jihdlgd";
        authors = [
          "The Rust Project Developers"
          "Steven Allen"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "dirs";
            packageId = "dirs 1.0.5";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "consoleapi" "wincon" "handleapi" "fileapi" ];
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "term_size" = rec {
        crateName = "term_size";
        version = "0.3.1";
        edition = "2015";
        sha256 = "09wk3173ngmb710qs9rwgibq4w250q8lgnwjvb9cypc1vdk9lnwy";
        authors = [
          "Kevin K. <kbknapp@gmail.com>"
          "Benjamin Sago <ogham@bsago.me>"
        ];
        dependencies = [
          {
            name = "kernel32-sys";
            packageId = "kernel32-sys";
            target = { target, features }: (target."os" == "windows");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (!(target."os" == "windows"));
          }
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
            target = { target, features }: (target."os" == "windows");
          }
        ];
        features = {
          "lints" = [ "clippy" "nightly" ];
          "travis" = [ "lints" "nightly" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "termcolor" = rec {
        crateName = "termcolor";
        version = "1.0.5";
        edition = "2015";
        sha256 = "0vjfsn1a8zvqhnrbygrz1id6yckwv1dncw3w4zj65qdx0f00kmln";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "wincolor";
            packageId = "wincolor";
            target = { target, features }: target."windows";
          }
        ];
        
      };
      "textwrap" = rec {
        crateName = "textwrap";
        version = "0.11.0";
        edition = "2015";
        sha256 = "0q5hky03ik3y50s9sz25r438bc4nwhqc6dqwynv4wylc807n29nk";
        authors = [
          "Martin Geisler <martin@geisler.net>"
        ];
        dependencies = [
          {
            name = "term_size";
            packageId = "term_size";
            optional = true;
          }
          {
            name = "unicode-width";
            packageId = "unicode-width";
          }
        ];
        
        resolvedDefaultFeatures = [ "term_size" ];
      };
      "thread_local" = rec {
        crateName = "thread_local";
        version = "0.3.6";
        edition = "2015";
        sha256 = "06rzik99p8c5js8238yhc8rk6np543ylb1dy9nrw5v80j0r3xdf6";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
          }
        ];
        
      };
      "threadpool" = rec {
        crateName = "threadpool";
        version = "1.7.1";
        edition = "2015";
        sha256 = "0rd89n1q7vy47w4c32cnynibffv9kj3jy3dwr0536n9lbw5ckw72";
        authors = [
          "The Rust Project Developers"
          "Corey Farwell <coreyf@rwell.org>"
          "Stefan Schindler <dns2utf8@estada.ch>"
        ];
        dependencies = [
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
        ];
        
      };
      "time" = rec {
        crateName = "time";
        version = "0.1.42";
        edition = "2015";
        sha256 = "0vsbvsz0ryxb35dy9j4anxvy8zlaplmjmi0a4z4l64bc135cz3fv";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "std" "minwinbase" "minwindef" "ntdef" "profileapi" "sysinfoapi" "timezoneapi" ];
          }
        ];
        devDependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            features = [ "std" "processthreadsapi" "winbase" ];
          }
        ];
        
      };
      "tint" = rec {
        crateName = "tint";
        version = "1.0.1";
        edition = "2015";
        sha256 = "15k89pp3ddxczfnv2j995yvy02mfpmjrmxmv7mkp8c2acrq4bwks";
        authors = [
          "Brian Savage <savage13@gmail.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 0.2.11";
          }
        ];
        
      };
      "tokio-io" = rec {
        crateName = "tokio-io";
        version = "0.1.12";
        edition = "2015";
        sha256 = "09jrz1hh4h1vj45qy09y7m7m8jsy1hl6g32clnky25mdim3dp42h";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "log";
            packageId = "log";
          }
        ];
        
      };
      "toml 0.4.10" = rec {
        crateName = "toml";
        version = "0.4.10";
        edition = "2015";
        sha256 = "07qilkzinn8z13vq2sss65n2lza7wrmqpvkbclw919m3f7y691km";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde 1.0.100";
          }
        ];
        
      };
      "toml 0.5.3" = rec {
        crateName = "toml";
        version = "0.5.3";
        edition = "2018";
        sha256 = "093p48vpqm4bb8q3514xsij0dkljxlr3jp9ypxr4p48xjisvxan7";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde 1.0.100";
          }
        ];
        features = {
          "preserve_order" = [ "linked-hash-map" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "typenum" = rec {
        crateName = "typenum";
        version = "1.10.0";
        edition = "2015";
        sha256 = "0sc1jirllfhdi52z1xv9yqzxzpk6v7vadd13n7wvs1wnjipn6bb1";
        build = "build/main.rs";
        authors = [
          "Paho Lurie-Gregg <paho@paholg.com>"
          "Andre Bogus <bogusandre@gmail.com>"
        ];
        features = {
        };
      };
      "unicase" = rec {
        crateName = "unicase";
        version = "2.4.0";
        edition = "2015";
        sha256 = "1xmpmkakhhblq7dzab1kwyv925kv7fqjkjsxjspg6ix9n88makm8";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check";
          }
        ];
        features = {
        };
      };
      "unicode-bidi" = rec {
        crateName = "unicode-bidi";
        version = "0.3.4";
        edition = "2015";
        sha256 = "1malx8ljgm7v1gbaazkn7iicy5wj0bwcyadj3l727a38ch6bvwj9";
        libName = "unicode_bidi";
        authors = [
          "The Servo Project Developers"
        ];
        dependencies = [
          {
            name = "matches";
            packageId = "matches";
          }
        ];
        features = {
          "flame_it" = [ "flame" "flamer" ];
          "with_serde" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "unicode-normalization" = rec {
        crateName = "unicode-normalization";
        version = "0.1.8";
        edition = "2015";
        sha256 = "09i49va90rvia1agvgni4gicnqv50y5zy1naw8mr8bcqifh3j4ql";
        authors = [
          "kwantam <kwantam@gmail.com>"
        ];
        dependencies = [
          {
            name = "smallvec";
            packageId = "smallvec";
          }
        ];
        
      };
      "unicode-segmentation" = rec {
        crateName = "unicode-segmentation";
        version = "1.3.0";
        edition = "2015";
        sha256 = "1a9jqg7rb1yq6w2xc9jgxcs111yk5vxm9afjfvykfnrmzk6z8rqr";
        authors = [
          "kwantam <kwantam@gmail.com>"
        ];
        features = {
        };
      };
      "unicode-width" = rec {
        crateName = "unicode-width";
        version = "0.1.6";
        edition = "2015";
        sha256 = "082f9hv1r3gcd1xl33whjhrm18p0w9i77zhhhkiccb5r47adn1vh";
        authors = [
          "kwantam <kwantam@gmail.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "std" "core" "compiler_builtins" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "unicode-xid 0.1.0" = rec {
        crateName = "unicode-xid";
        version = "0.1.0";
        edition = "2015";
        sha256 = "1z57lqh4s18rr4x0j4fw4fmp9hf9346h0kmdgqsqx0fhjr3k0wpw";
        authors = [
          "erick.tryzelaar <erick.tryzelaar@gmail.com>"
          "kwantam <kwantam@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "unicode-xid 0.2.0" = rec {
        crateName = "unicode-xid";
        version = "0.2.0";
        edition = "2015";
        sha256 = "0z09fn515xm7zyr0mmdyxa9mx2f7azcpv74pqmg611iralwpcvl2";
        authors = [
          "erick.tryzelaar <erick.tryzelaar@gmail.com>"
          "kwantam <kwantam@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "unreachable" = rec {
        crateName = "unreachable";
        version = "1.0.0";
        edition = "2015";
        sha256 = "0mps2il4xy2mjqc3appas27hhn2xmvixc3bzzhfrjj74gy3i0a1q";
        authors = [
          "Jonathan Reem <jonathan.reem@gmail.com>"
        ];
        dependencies = [
          {
            name = "void";
            packageId = "void";
            usesDefaultFeatures = false;
          }
        ];
        
      };
      "uom 0.23.1" = rec {
        crateName = "uom";
        version = "0.23.1";
        edition = "2015";
        sha256 = "1v1z9dqzgfa72j31698r6nj47av4yxhk60xhvfcf8djp73lbpx9y";
        authors = [
          "Mike Boutin <mike.boutin@gmail.com>"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits 0.2.8";
            usesDefaultFeatures = false;
          }
          {
            name = "typenum";
            packageId = "typenum";
          }
        ];
        features = {
          "bigint" = [ "bigint-support" ];
          "bigint-support" = [ "num-bigint" "num-rational/bigint" ];
          "bigrational" = [ "bigint-support" ];
          "biguint" = [ "bigint-support" ];
          "default" = [ "autoconvert" "f32" "f64" "si" "std" ];
          "i16" = [ "rational-support" ];
          "i32" = [ "rational-support" ];
          "i64" = [ "rational-support" ];
          "i8" = [ "rational-support" ];
          "isize" = [ "rational-support" ];
          "rational" = [ "rational-support" ];
          "rational-support" = [ "num-rational" ];
          "rational32" = [ "rational-support" ];
          "rational64" = [ "rational-support" ];
          "std" = [ "num-traits/std" ];
          "u16" = [ "rational-support" ];
          "u32" = [ "rational-support" ];
          "u64" = [ "rational-support" ];
          "u8" = [ "rational-support" ];
          "use_serde" = [ "serde" ];
          "usize" = [ "rational-support" ];
        };
        resolvedDefaultFeatures = [ "autoconvert" "default" "f32" "f64" "si" "std" ];
      };
      "uom 0.25.0" = rec {
        crateName = "uom";
        version = "0.25.0";
        edition = "2015";
        sha256 = "1hbm4p74a0d3zr5a9hmhghjhlkagvhfs4jigfcys5a4z36gw561i";
        authors = [
          "Mike Boutin <mike.boutin@gmail.com>"
        ];
        dependencies = [
          {
            name = "num-rational";
            packageId = "num-rational";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.8";
            usesDefaultFeatures = false;
          }
          {
            name = "typenum";
            packageId = "typenum";
          }
        ];
        features = {
          "bigint" = [ "bigint-support" ];
          "bigint-support" = [ "num-bigint" "num-rational/bigint" ];
          "bigrational" = [ "bigint-support" ];
          "biguint" = [ "bigint-support" ];
          "default" = [ "autoconvert" "f32" "f64" "si" "std" ];
          "i128" = [ "rational-support" ];
          "i16" = [ "rational-support" ];
          "i32" = [ "rational-support" ];
          "i64" = [ "rational-support" ];
          "i8" = [ "rational-support" ];
          "isize" = [ "rational-support" ];
          "rational" = [ "rational-support" ];
          "rational-support" = [ "num-rational" ];
          "rational32" = [ "rational-support" ];
          "rational64" = [ "rational-support" ];
          "std" = [ "num-traits/std" ];
          "u128" = [ "rational-support" ];
          "u16" = [ "rational-support" ];
          "u32" = [ "rational-support" ];
          "u64" = [ "rational-support" ];
          "u8" = [ "rational-support" ];
          "use_serde" = [ "serde" ];
          "usize" = [ "rational-support" ];
        };
        resolvedDefaultFeatures = [ "autoconvert" "f32" "f64" "num-rational" "rational-support" "si" "std" "u64" ];
      };
      "url" = rec {
        crateName = "url";
        version = "2.1.0";
        edition = "2015";
        sha256 = "0qcxx9kr0wfawsr83h0kfgxl6dxw4cgrbgxsz7bpkj34qkv19d3m";
        authors = [
          "The rust-url developers"
        ];
        dependencies = [
          {
            name = "idna";
            packageId = "idna";
          }
          {
            name = "matches";
            packageId = "matches";
          }
          {
            name = "percent-encoding";
            packageId = "percent-encoding";
          }
        ];
        
      };
      "user32-sys" = rec {
        crateName = "user32-sys";
        version = "0.2.0";
        edition = "2015";
        sha256 = "0ivxc7hmsxax9crdhxdd1nqwik4s9lhb2x59lc8b88bv20fp3x2f";
        libName = "user32";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
          }
        ];
        buildDependencies = [
          {
            name = "winapi-build";
            packageId = "winapi-build";
          }
        ];
        
      };
      "utf8parse" = rec {
        crateName = "utf8parse";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0zamsj2986shm4x9zncjf2m5qy9scaw7qnxw4f89b2afpg6a8wl7";
        authors = [
          "Joe Wilm <joe@jwilm.com>"
        ];
        
      };
      "uuid" = rec {
        crateName = "uuid";
        version = "0.7.4";
        edition = "2015";
        sha256 = "0ank4xk20x3nrz926w8j9mz53bi3v8bykxmhlq2pffa8xc8wdnwh";
        authors = [
          "Ashley Mannix<ashleymannix@live.com.au>"
          "Christopher Armstrong"
          "Dylan DPC<dylan.dpc@gmail.com>"
          "Hunar Roop Kahlon<hunar.roop@gmail.com>"
        ];
        dependencies = [
          {
            name = "rand";
            packageId = "rand 0.6.5";
            optional = true;
          }
          {
            name = "serde";
            packageId = "serde 1.0.100";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "const_fn" = [ "nightly" ];
          "default" = [ "std" ];
          "guid" = [ "winapi" ];
          "stdweb" = [ "rand/stdweb" ];
          "u128" = [ "byteorder" ];
          "v3" = [ "md5" ];
          "v4" = [ "rand" ];
          "v5" = [ "sha1" ];
          "wasm-bindgen" = [ "rand/wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "default" "rand" "serde" "std" "v4" ];
      };
      "vcpkg" = rec {
        crateName = "vcpkg";
        version = "0.2.7";
        edition = "2015";
        sha256 = "15dzk1b96q946v9aisbd1bbhi33n93wvgziwh1shmscn1xflbp9k";
        authors = [
          "Jim McGrath <jimmc2@gmail.com>"
        ];
        
      };
      "vec_map" = rec {
        crateName = "vec_map";
        version = "0.8.1";
        edition = "2015";
        sha256 = "06n8hw4hlbcz328a3gbpvmy0ma46vg1lc0r5wf55900szf3qdiq5";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Jorge Aparicio <japaricious@gmail.com>"
          "Alexis Beingessner <a.beingessner@gmail.com>"
          "Brian Anderson <>"
          "tbu- <>"
          "Manish Goregaokar <>"
          "Aaron Turon <aturon@mozilla.com>"
          "Adolfo Ochagavía <>"
          "Niko Matsakis <>"
          "Steven Fackler <>"
          "Chase Southwood <csouth3@illinois.edu>"
          "Eduard Burtescu <>"
          "Florian Wilkens <>"
          "Félix Raimundo <>"
          "Tibor Benke <>"
          "Markus Siemens <markus@m-siemens.de>"
          "Josh Branchaud <jbranchaud@gmail.com>"
          "Huon Wilson <dbau.pp@gmail.com>"
          "Corey Farwell <coref@rwell.org>"
          "Aaron Liblong <>"
          "Nick Cameron <nrc@ncameron.org>"
          "Patrick Walton <pcwalton@mimiga.net>"
          "Felix S Klock II <>"
          "Andrew Paseltiner <apaseltiner@gmail.com>"
          "Sean McArthur <sean.monstar@gmail.com>"
          "Vadim Petrochenkov <>"
        ];
        features = {
          "eders" = [ "serde" ];
        };
      };
      "version_check" = rec {
        crateName = "version_check";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1pf91pvj8n6akh7w6j5ypka6aqz08b3qpzgs0ak2kjf4frkiljwi";
        authors = [
          "Sergio Benitez <sb@sergio.bz>"
        ];
        
      };
      "void" = rec {
        crateName = "void";
        version = "1.0.2";
        edition = "2015";
        sha256 = "0zc8f0ksxvmhvgx4fdg0zyn6vdnbxd2xv9hfx4nhzg6kbs4f80ka";
        authors = [
          "Jonathan Reem <jonathan.reem@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "walkdir" = rec {
        crateName = "walkdir";
        version = "2.2.9";
        edition = "2015";
        sha256 = "07ppalpvxkf8cnqr64np422792y4z5bs9m8b4nrflh5rm17wjn4n";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "same-file";
            packageId = "same-file";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "std" "winnt" ];
          }
          {
            name = "winapi-util";
            packageId = "winapi-util";
            target = { target, features }: target."windows";
          }
        ];
        
      };
      "wasm-bindgen" = rec {
        crateName = "wasm-bindgen";
        version = "0.2.50";
        edition = "2018";
        sha256 = "1z5f5x7jibp4vz3hs8185vpy8rslirl6q4kvnv197k8nicqcmpfw";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "wasm-bindgen-macro";
            packageId = "wasm-bindgen-macro";
          }
        ];
        features = {
          "default" = [ "spans" "std" ];
          "enable-interning" = [ "std" ];
          "serde-serialize" = [ "serde" "serde_json" "std" ];
          "spans" = [ "wasm-bindgen-macro/spans" ];
          "strict-macro" = [ "wasm-bindgen-macro/strict-macro" ];
          "xxx_debug_only_print_generated_code" = [ "wasm-bindgen-macro/xxx_debug_only_print_generated_code" ];
        };
        resolvedDefaultFeatures = [ "default" "spans" "std" ];
      };
      "wasm-bindgen-backend" = rec {
        crateName = "wasm-bindgen-backend";
        version = "0.2.50";
        edition = "2018";
        sha256 = "1l7xzb4nq5bjfi0v5g8pmrc9n6r7i4cgsq4r773fbiszicrdj1gq";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "bumpalo";
            packageId = "bumpalo";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.1";
          }
          {
            name = "quote";
            packageId = "quote 1.0.2";
          }
          {
            name = "syn";
            packageId = "syn 1.0.4";
            features = [ "full" ];
          }
          {
            name = "wasm-bindgen-shared";
            packageId = "wasm-bindgen-shared";
          }
        ];
        features = {
          "extra-traits" = [ "syn/extra-traits" ];
        };
        resolvedDefaultFeatures = [ "spans" ];
      };
      "wasm-bindgen-futures" = rec {
        crateName = "wasm-bindgen-futures";
        version = "0.3.25";
        edition = "2018";
        sha256 = "1ngyq9rrwlc8jlmkav8lcbmhnmmwpidga562i2a90k38xq85ihkk";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "futures-channel-preview";
            packageId = "futures-channel-preview";
            optional = true;
          }
          {
            name = "futures-util-preview";
            packageId = "futures-util-preview";
            optional = true;
          }
          {
            name = "js-sys";
            packageId = "js-sys";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
            optional = true;
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
          }
        ];
        features = {
          "futures_0_3" = [ "futures-util-preview" "futures-channel-preview" "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "futures-channel-preview" "futures-util-preview" "futures_0_3" "lazy_static" ];
      };
      "wasm-bindgen-macro" = rec {
        crateName = "wasm-bindgen-macro";
        version = "0.2.50";
        edition = "2018";
        sha256 = "1s9r8m1wmy7785c5xc1ny5sgs7pb335zc88nj9izraw2lh0q5y1z";
        procMacro = true;
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "quote";
            packageId = "quote 1.0.2";
          }
          {
            name = "wasm-bindgen-macro-support";
            packageId = "wasm-bindgen-macro-support";
          }
        ];
        features = {
          "spans" = [ "wasm-bindgen-macro-support/spans" ];
          "strict-macro" = [ "wasm-bindgen-macro-support/strict-macro" ];
        };
        resolvedDefaultFeatures = [ "spans" ];
      };
      "wasm-bindgen-macro-support" = rec {
        crateName = "wasm-bindgen-macro-support";
        version = "0.2.50";
        edition = "2018";
        sha256 = "03mv8pif4qaz2w673n2lk7gbfrrlkz7wh06gdza7g7yvxj4kshva";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.1";
          }
          {
            name = "quote";
            packageId = "quote 1.0.2";
          }
          {
            name = "syn";
            packageId = "syn 1.0.4";
            features = [ "visit" ];
          }
          {
            name = "wasm-bindgen-backend";
            packageId = "wasm-bindgen-backend";
          }
          {
            name = "wasm-bindgen-shared";
            packageId = "wasm-bindgen-shared";
          }
        ];
        features = {
          "extra-traits" = [ "syn/extra-traits" ];
          "spans" = [ "wasm-bindgen-backend/spans" ];
        };
        resolvedDefaultFeatures = [ "spans" ];
      };
      "wasm-bindgen-shared" = rec {
        crateName = "wasm-bindgen-shared";
        version = "0.2.50";
        edition = "2018";
        sha256 = "0z826ky62159jrgn0dpbnmdsjigx8m002pn1138zikbh6nyc27yl";
        authors = [
          "The wasm-bindgen Developers"
        ];
        
      };
      "wasm-bindgen-webidl" = rec {
        crateName = "wasm-bindgen-webidl";
        version = "0.2.50";
        edition = "2018";
        sha256 = "057zak44nyrawipgi37m451fjkxz6ix5rzcw11d699rgpy4x4lxy";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "failure";
            packageId = "failure";
          }
          {
            name = "heck";
            packageId = "heck";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.1";
          }
          {
            name = "quote";
            packageId = "quote 1.0.2";
          }
          {
            name = "syn";
            packageId = "syn 1.0.4";
            features = [ "full" ];
          }
          {
            name = "wasm-bindgen-backend";
            packageId = "wasm-bindgen-backend";
          }
          {
            name = "weedle";
            packageId = "weedle";
          }
        ];
        
      };
      "web-sys" = rec {
        crateName = "web-sys";
        version = "0.3.27";
        edition = "2018";
        sha256 = "0lccdl3ihqh70s48dzvzpm09gpwvdjyw4wksk848dm0a41vw8db4";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "js-sys";
            packageId = "js-sys";
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
          }
        ];
        buildDependencies = [
          {
            name = "failure";
            packageId = "failure";
          }
          {
            name = "sourcefile";
            packageId = "sourcefile";
          }
          {
            name = "wasm-bindgen-webidl";
            packageId = "wasm-bindgen-webidl";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "AbortSignal" "Headers" "ObserverCallback" "ReferrerPolicy" "Request" "RequestCache" "RequestCredentials" "RequestInit" "RequestMode" "RequestRedirect" "Response" "Window" ];
      };
      "weedle" = rec {
        crateName = "weedle";
        version = "0.10.0";
        edition = "2015";
        sha256 = "0r0i2kllvkn9jil6cjzxdi1zsc6p1gjyk751w8lyclaii1q3zd1v";
        authors = [
          "Sharad Chand <sharad.d.chand@gmail.com>"
        ];
        dependencies = [
          {
            name = "nom";
            packageId = "nom 4.2.3";
          }
        ];
        
      };
      "which" = rec {
        crateName = "which";
        version = "2.0.1";
        edition = "2015";
        sha256 = "0r7i793sc0xqnd2fxnqbksj7j1kx65bwn81b8z49750v4c8cnymm";
        authors = [
          "Harry Fei <tiziyuanfang@gmail.com>"
        ];
        dependencies = [
          {
            name = "failure";
            packageId = "failure";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        
      };
      "widestring" = rec {
        crateName = "widestring";
        version = "0.4.0";
        edition = "2015";
        sha256 = "1dhx6dndjsz1y7c9w06922412kdxyrrkqblvggm76mh8z17hxz7g";
        authors = [
          "Kathryn Long <squeeself@gmail.com>"
        ];
        
      };
      "winapi 0.2.8" = rec {
        crateName = "winapi";
        version = "0.2.8";
        edition = "2015";
        sha256 = "0yh816lh6lf56dpsgxy189c2ai1z3j8mw9si6izqb6wsjkbcjz8n";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        
      };
      "winapi 0.3.8" = rec {
        crateName = "winapi";
        version = "0.3.8";
        edition = "2015";
        sha256 = "1ii9j9lzrhwri0902652awifzx9fpayimbp6hfhhc296xcg0k4w0";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi-i686-pc-windows-gnu";
            packageId = "winapi-i686-pc-windows-gnu";
            target = { target, features }: (stdenv.hostPlatform.config == "i686-pc-windows-gnu");
          }
          {
            name = "winapi-x86_64-pc-windows-gnu";
            packageId = "winapi-x86_64-pc-windows-gnu";
            target = { target, features }: (stdenv.hostPlatform.config == "x86_64-pc-windows-gnu");
          }
        ];
        features = {
          "debug" = [ "impl-debug" ];
        };
        resolvedDefaultFeatures = [ "basetsd" "cfg" "consoleapi" "devguid" "errhandlingapi" "evntrace" "fileapi" "handleapi" "impl-default" "in6addr" "inaddr" "ioapiset" "knownfolders" "libloaderapi" "lmcons" "minschannel" "minwinbase" "minwindef" "namedpipeapi" "ntdef" "ntsecapi" "objbase" "powerbase" "processenv" "processthreadsapi" "profileapi" "psapi" "schannel" "securitybaseapi" "setupapi" "shellapi" "shlobj" "sspi" "std" "synchapi" "sysinfoapi" "timezoneapi" "tlhelp32" "winbase" "wincon" "wincrypt" "windef" "winerror" "winioctl" "winnt" "winsock2" "winuser" "ws2def" "ws2ipdef" "ws2tcpip" ];
      };
      "winapi-build" = rec {
        crateName = "winapi-build";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1g4rqsgjky0a7530qajn2bbfcrl2v0zb39idgdws9b1l7gp5wc9d";
        libName = "build";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        
      };
      "winapi-i686-pc-windows-gnu" = rec {
        crateName = "winapi-i686-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "1dmpa6mvcvzz16zg6d5vrfy4bxgg541wxrcip7cnshi06v38ffxc";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        
      };
      "winapi-util" = rec {
        crateName = "winapi-util";
        version = "0.1.2";
        edition = "2015";
        sha256 = "1j839dc6y8vszvrsb7yk0qvs0w6asnahxzbyans37vnsw6vbls3i";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "std" "consoleapi" "errhandlingapi" "fileapi" "minwindef" "processenv" "winbase" "wincon" "winerror" "winnt" ];
          }
        ];
        
      };
      "winapi-x86_64-pc-windows-gnu" = rec {
        crateName = "winapi-x86_64-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "0gqq64czqb64kskjryj8isp62m2sgvx25yyj3kpc2myh85w24bki";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        
      };
      "wincolor" = rec {
        crateName = "wincolor";
        version = "1.0.1";
        edition = "2015";
        sha256 = "1fp9sxq63kw3vjjcjrl3f7px082pplzxcr3qza2n2pa6mq0xj7jn";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            features = [ "minwindef" "wincon" ];
          }
          {
            name = "winapi-util";
            packageId = "winapi-util";
          }
        ];
        
      };
      "x11" = rec {
        crateName = "x11";
        version = "2.18.1";
        edition = "2015";
        sha256 = "0dg2d0yrqmwg6prpxkw3vpmwzwxnaki2cn0v64ylh5gp4cqpws9r";
        authors = [
          "daggerbot <daggerbot@gmail.com>"
          "Erle Pereira <erle@erlepereira.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
        ];
        features = {
          "xrecord" = [ "xtst" ];
          "xtest" = [ "xtst" ];
        };
        resolvedDefaultFeatures = [ "xlib" ];
      };
      "x11-clipboard" = rec {
        crateName = "x11-clipboard";
        version = "0.3.3";
        edition = "2015";
        sha256 = "1smwyr23jns0dncm6bwv00xfxxy99bv6qlx6df7dkdcydk04kgc9";
        authors = [
          "quininer kel <quininer@live.com>"
        ];
        dependencies = [
          {
            name = "xcb";
            packageId = "xcb";
            features = [ "thread" "xfixes" ];
          }
        ];
        
      };
      "xcb" = rec {
        crateName = "xcb";
        version = "0.8.2";
        edition = "2015";
        sha256 = "1ph27r9nxyfy3hh1c7x85g6dciwxcinf6514pvw9ybhl4hzpm4ay";
        authors = [
          "Remi Thebault <remi.thebault@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "log";
            packageId = "log";
          }
        ];
        buildDependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "composite" = [ "xfixes" ];
          "damage" = [ "xfixes" ];
          "debug_all" = [ "thread" "composite" "damage" "dpms" "dri2" "dri3" "glx" "randr" "record" "render" "res" "screensaver" "shape" "shm" "xevie" "xf86dri" "xfixes" "xinerama" "xkb" "xprint" "xselinux" "xtest" "xvmc" "xv" "xlib_xcb" ];
          "present" = [ "render" "xfixes" "sync" ];
          "randr" = [ "render" ];
          "xfixes" = [ "render" "shape" ];
          "xinput" = [ "xfixes" ];
          "xlib_xcb" = [ "x11/xlib" ];
          "xv" = [ "shm" ];
          "xvmc" = [ "xv" ];
        };
        resolvedDefaultFeatures = [ "render" "shape" "thread" "xfixes" ];
      };
      "xdg" = rec {
        crateName = "xdg";
        version = "2.2.0";
        edition = "2015";
        sha256 = "0mws8a0fr3cqk5nh7aq9lmkmhzghvasqy4mhw6nnza06l4d6i2fh";
        authors = [
          "Ben Longbons <b.r.longbons@gmail.com>"
          "whitequark <whitequark@whitequark.org>"
        ];
        
      };
      "xml-rs" = rec {
        crateName = "xml-rs";
        version = "0.8.0";
        edition = "2015";
        crateBin = [];
        sha256 = "1db4v716rbpgjiasaim2s17rmvsfcq1qzwg6nji6mdf5k34i46sl";
        libName = "xml";
        authors = [
          "Vladimir Matveev <vladimir.matweev@gmail.com>"
        ];
        
      };
      "xmlparser" = rec {
        crateName = "xmlparser";
        version = "0.9.0";
        edition = "2015";
        sha256 = "1vhw7s5672557vdz9s5kkmv0j53xz0haakp6af8h3zxh1zq9bv7c";
        authors = [
          "Evgeniy Reizner <razrfalcon@gmail.com>"
        ];
        
      };
      "yaml-rust" = rec {
        crateName = "yaml-rust";
        version = "0.4.3";
        edition = "2015";
        sha256 = "0ka3qhqc5lvk3hz14wmsj32jhmh44blcbfrx5hfxli2gg38kv4k5";
        authors = [
          "Yuheng Chen <yuhengchen@sensetime.com>"
        ];
        dependencies = [
          {
            name = "linked-hash-map";
            packageId = "linked-hash-map 0.5.2";
          }
        ];
        
      };
    };

    #
# crate2nix/default.nix (excerpt start)
#

  /* Target (platform) data for conditional dependencies.
     This corresponds roughly to what buildRustCrate is setting.
  */
  defaultTarget = {
    unix = true;
    windows = false;
    fuchsia = true;
    test = false;

    # This doesn't appear to be officially documented anywhere yet.
    # See https://github.com/rust-lang-nursery/rust-forge/issues/101.
    os = if stdenv.hostPlatform.isDarwin
    then "macos"
    else stdenv.hostPlatform.parsed.kernel.name;
    arch = stdenv.hostPlatform.parsed.cpu.name;
    family = "unix";
    env = "gnu";
    endian =
      if stdenv.hostPlatform.parsed.cpu.significantByte.name == "littleEndian"
      then "little" else "big";
    pointer_width = toString stdenv.hostPlatform.parsed.cpu.bits;
    vendor = stdenv.hostPlatform.parsed.vendor.name;
    debug_assertions = false;
  };

  /* Filters common temp files and build files. */
  # TODO(pkolloch): Substitute with gitignore filter
  sourceFilter = name: type:
    let
      baseName = builtins.baseNameOf (builtins.toString name);
    in
      ! (
        # Filter out git
        baseName == ".gitignore"
        || (type == "directory" && baseName == ".git")

        # Filter out build results
        || (
          type == "directory" && (
            baseName == "target"
            || baseName == "_site"
            || baseName == ".sass-cache"
            || baseName == ".jekyll-metadata"
            || baseName == "build-artifacts"
          )
        )

        # Filter out nix-build result symlinks
        || (
          type == "symlink" && lib.hasPrefix "result" baseName
        )

        # Filter out IDE config
        || (
          type == "directory" && (
            baseName == ".idea" || baseName == ".vscode"
          )
        ) || lib.hasSuffix ".iml" baseName

        # Filter out nix build files
        || baseName == "Cargo.nix"

        # Filter out editor backup / swap files.
        || lib.hasSuffix "~" baseName
        || builtins.match "^\\.sw[a-z]$$" baseName != null
        || builtins.match "^\\..*\\.sw[a-z]$$" baseName != null
        || lib.hasSuffix ".tmp" baseName
        || lib.hasSuffix ".bak" baseName
        || baseName == "tests.nix"
      );

  /* Returns a crate which depends on successful test execution
     of crate given as the second argument.

     testCrateFlags: list of flags to pass to the test exectuable
     testInputs: list of packages that should be available during test execution
  */
  crateWithTest = { crate, testCrate, testCrateFlags, testInputs }:
    assert builtins.typeOf testCrateFlags == "list";
    assert builtins.typeOf testInputs == "list";
    let
      # override the `crate` so that it will build and execute tests instead of
      # building the actual lib and bin targets We just have to pass `--test`
      # to rustc and it will do the right thing.  We execute the tests and copy
      # their log and the test executables to $out for later inspection.
      test = let
        drv = testCrate.override (
          _: {
            buildTests = true;
          }
        );
      in
        pkgs.runCommand "run-tests-${testCrate.name}" {
          inherit testCrateFlags;
          buildInputs = testInputs;
        } ''
          set -ex

          export RUST_BACKTRACE=1

          # recreate a file hierarchy as when running tests with cargo

          # the source for test data
          ${pkgs.xorg.lndir}/bin/lndir ${crate.src}

          # build outputs
          testRoot=target/debug
          mkdir -p $testRoot

          # executables of the crate
          # we copy to prevent std::env::current_exe() to resolve to a store location
          for i in ${crate}/bin/*; do
            cp "$i" "$testRoot"
          done
          chmod +w -R .

          # test harness executables are suffixed with a hash, like cargo does
          # this allows to prevent name collision with the main
          # executables of the crate
          hash=$(basename $out)
          for file in ${drv}/tests/*; do
            f=$testRoot/$(basename $file)-$hash
            cp $file $f
            $f $testCrateFlags 2>&1 | tee -a $out
          done
        '';
    in
      crate.overrideAttrs (
        old: {
          checkPhase = ''
            test -e ${test}
          '';
          passthru = (old.passthru or {}) // {
            inherit test;
          };
        }
      );

  /* A restricted overridable version of builtRustCratesWithFeatures. */
  buildRustCrateWithFeatures =
    { packageId
    , features ? rootFeatures
    , crateOverrides ? defaultCrateOverrides
    , buildRustCrateFunc ? null
    , runTests ? false
    , testCrateFlags ? []
    , testInputs ? []
    }:
      lib.makeOverridable
        (
          { features
          , crateOverrides
          , runTests
          , testCrateFlags
          , testInputs
          }:
            let
              buildRustCrateFuncOverriden = if buildRustCrateFunc != null
              then buildRustCrateFunc
              else (
                if crateOverrides == pkgs.defaultCrateOverrides
                then buildRustCrate
                else buildRustCrate.override {
                  defaultCrateOverrides = crateOverrides;
                }
              );
              builtRustCrates = builtRustCratesWithFeatures {
                inherit packageId features;
                buildRustCrateFunc = buildRustCrateFuncOverriden;
                runTests = false;
              };
              builtTestRustCrates = builtRustCratesWithFeatures {
                inherit packageId features;
                buildRustCrateFunc = buildRustCrateFuncOverriden;
                runTests = true;
              };
              drv = builtRustCrates.${packageId};
              testDrv = builtTestRustCrates.${packageId};
              derivation = if runTests then
                crateWithTest {
                  crate = drv;
                  testCrate = testDrv;
                  inherit testCrateFlags testInputs;
                }
              else drv;
            in
              derivation
        )
        { inherit features crateOverrides runTests testCrateFlags testInputs; };

  /* Returns an attr set with packageId mapped to the result of buildRustCrateFunc
     for the corresponding crate.
  */
  builtRustCratesWithFeatures =
    { packageId
    , features
    , crateConfigs ? crates
    , buildRustCrateFunc
    , runTests
    , target ? defaultTarget
    } @ args:
      assert (builtins.isAttrs crateConfigs);
      assert (builtins.isString packageId);
      assert (builtins.isList features);
      assert (builtins.isAttrs target);
      assert (builtins.isBool runTests);
      let
        rootPackageId = packageId;
        mergedFeatures = mergePackageFeatures (
          args // {
            inherit rootPackageId;
            target = target // { test = runTests; };
          }
        );

        buildByPackageId = packageId: buildByPackageIdImpl packageId;

        # Memoize built packages so that reappearing packages are only built once.
        builtByPackageId =
          lib.mapAttrs (packageId: value: buildByPackageId packageId) crateConfigs;

        buildByPackageIdImpl = packageId:
          let
            features = mergedFeatures."${packageId}" or [];
            crateConfig' = crateConfigs."${packageId}";
            crateConfig =
              builtins.removeAttrs crateConfig' [ "resolvedDefaultFeatures" "devDependencies" ];
            devDependencies =
              lib.optionals
                (runTests && packageId == rootPackageId)
                (crateConfig'.devDependencies or []);
            dependencies =
              dependencyDerivations {
                inherit builtByPackageId features target;
                dependencies =
                  (crateConfig.dependencies or [])
                  ++ devDependencies;
              };
            buildDependencies =
              dependencyDerivations {
                inherit builtByPackageId features target;
                dependencies = crateConfig.buildDependencies or [];
              };

            filterEnabledDependenciesForThis = dependencies: filterEnabledDependencies {
              inherit dependencies features target;
            };

            dependenciesWithRenames =
              lib.filter (d: d ? "rename") (
                filterEnabledDependenciesForThis
                  (
                    (crateConfig.buildDependencies or [])
                    ++ (crateConfig.dependencies or [])
                    ++ devDependencies
                  )
              );

            crateRenames =
              builtins.listToAttrs
                (map (d: { name = d.name; value = d.rename; }) dependenciesWithRenames);
          in
            buildRustCrateFunc (
              crateConfig // {
                src = crateConfig.src or (
                  pkgs.fetchurl {
                    name = "${crateConfig.crateName}-${crateConfig.version}.tar.gz";
                    # https://www.pietroalbini.org/blog/downloading-crates-io/
                    # Not rate-limited, CDN URL.
                    url = "https://static.crates.io/crates/${crateConfig.crateName}/${crateConfig.crateName}-${crateConfig.version}.crate";
                    sha256 = crateConfig.sha256;
                  }
                );
                inherit features dependencies buildDependencies crateRenames release;
              }
            );
      in
        builtByPackageId;

  /* Returns the actual derivations for the given dependencies. */
  dependencyDerivations =
    { builtByPackageId
    , features
    , dependencies
    , target
    }:
      assert (builtins.isAttrs builtByPackageId);
      assert (builtins.isList features);
      assert (builtins.isList dependencies);
      assert (builtins.isAttrs target);
      let
        enabledDependencies = filterEnabledDependencies {
          inherit dependencies features target;
        };
        depDerivation = dependency: builtByPackageId.${dependency.packageId};
      in
        map depDerivation enabledDependencies;

  /* Returns a sanitized version of val with all values substituted that cannot
     be serialized as JSON.
  */
  sanitizeForJson = val:
    if builtins.isAttrs val
    then lib.mapAttrs (n: v: sanitizeForJson v) val
    else if builtins.isList val
    then builtins.map sanitizeForJson val
    else if builtins.isFunction val
    then "function"
    else val;

  /* Returns various tools to debug a crate. */
  debugCrate = { packageId, target ? defaultTarget }:
    assert (builtins.isString packageId);
    let
      debug = rec {
        # The built tree as passed to buildRustCrate.
        buildTree = buildRustCrateWithFeatures {
          buildRustCrateFunc = lib.id;
          inherit packageId;
        };
        sanitizedBuildTree = sanitizeForJson buildTree;
        dependencyTree = sanitizeForJson (
          buildRustCrateWithFeatures {
            buildRustCrateFunc = crate: {
              "01_crateName" = crate.crateName or false;
              "02_features" = crate.features or [];
              "03_dependencies" = crate.dependencies or [];
            };
            inherit packageId;
          }
        );
        mergedPackageFeatures = mergePackageFeatures {
          features = rootFeatures;
          inherit packageId target;
        };
        diffedDefaultPackageFeatures = diffDefaultPackageFeatures {
          inherit packageId target;
        };
      };
    in
      { internal = debug; };

  /* Returns differences between cargo default features and crate2nix default
     features.

     This is useful for verifying the feature resolution in crate2nix.
  */
  diffDefaultPackageFeatures =
    { crateConfigs ? crates
    , packageId
    , target
    }:
      assert (builtins.isAttrs crateConfigs);
      let
        prefixValues = prefix: lib.mapAttrs (n: v: { "${prefix}" = v; });
        mergedFeatures =
          prefixValues
            "crate2nix"
            (mergePackageFeatures { inherit crateConfigs packageId target; features = [ "default" ]; });
        configs = prefixValues "cargo" crateConfigs;
        combined = lib.foldAttrs (a: b: a // b) {} [ mergedFeatures configs ];
        onlyInCargo =
          builtins.attrNames
            (lib.filterAttrs (n: v: !(v ? "crate2nix") && (v ? "cargo")) combined);
        onlyInCrate2Nix =
          builtins.attrNames
            (lib.filterAttrs (n: v: (v ? "crate2nix") && !(v ? "cargo")) combined);
        differentFeatures = lib.filterAttrs
          (
            n: v:
              (v ? "crate2nix")
              && (v ? "cargo")
              && (v.crate2nix.features or []) != (v."cargo".resolved_default_features or [])
          )
          combined;
      in
        builtins.toJSON {
          inherit onlyInCargo onlyInCrate2Nix differentFeatures;
        };

  /* Returns an attrset mapping packageId to the list of enabled features.

     If multiple paths to a dependency enable different features, the
     corresponding feature sets are merged. Features in rust are additive.
  */
  mergePackageFeatures =
    { crateConfigs ? crates
    , packageId
    , rootPackageId ? packageId
    , features ? rootFeatures
    , dependencyPath ? [ crates.${packageId}.crateName ]
    , featuresByPackageId ? {}
    , target
      # Adds devDependencies to the crate with rootPackageId.
    , runTests ? false
    , ...
    } @ args:
      assert (builtins.isAttrs crateConfigs);
      assert (builtins.isString packageId);
      assert (builtins.isString rootPackageId);
      assert (builtins.isList features);
      assert (builtins.isList dependencyPath);
      assert (builtins.isAttrs featuresByPackageId);
      assert (builtins.isAttrs target);
      assert (builtins.isBool runTests);
      let
        crateConfig = crateConfigs."${packageId}" or (builtins.throw "Package not found: ${packageId}");
        expandedFeatures = expandFeatures (crateConfig.features or {}) features;

        depWithResolvedFeatures = dependency:
          let
            packageId = dependency.packageId;
            features = dependencyFeatures expandedFeatures dependency;
          in
            { inherit packageId features; };

        resolveDependencies = cache: path: dependencies:
          assert (builtins.isAttrs cache);
          assert (builtins.isList dependencies);
          let
            enabledDependencies = filterEnabledDependencies {
              inherit dependencies target;
              features = expandedFeatures;
            };
            directDependencies = map depWithResolvedFeatures enabledDependencies;
            foldOverCache = op: lib.foldl op cache directDependencies;
          in
            foldOverCache
              (
                cache: { packageId, features }:
                  let
                    cacheFeatures = cache.${packageId} or [];
                    combinedFeatures = sortedUnique (cacheFeatures ++ features);
                  in
                    if cache ? ${packageId} && cache.${packageId} == combinedFeatures
                    then cache
                    else mergePackageFeatures {
                      features = combinedFeatures;
                      featuresByPackageId = cache;
                      inherit crateConfigs packageId target runTests rootPackageId;
                    }
              );

        cacheWithSelf =
          let
            cacheFeatures = featuresByPackageId.${packageId} or [];
            combinedFeatures = sortedUnique (cacheFeatures ++ expandedFeatures);
          in
            featuresByPackageId // {
              "${packageId}" = combinedFeatures;
            };

        cacheWithDependencies =
          resolveDependencies cacheWithSelf "dep" (
            crateConfig.dependencies or []
            ++ lib.optionals
              (runTests && packageId == rootPackageId)
              (crateConfig.devDependencies or [])
          );

        cacheWithAll =
          resolveDependencies
            cacheWithDependencies "build"
            (crateConfig.buildDependencies or []);
      in
        cacheWithAll;

  /* Returns the enabled dependencies given the enabled features. */
  filterEnabledDependencies = { dependencies, features, target }:
    assert (builtins.isList dependencies);
    assert (builtins.isList features);
    assert (builtins.isAttrs target);

    lib.filter
      (
        dep:
          let
            targetFunc = dep.target or (features: true);
          in
            targetFunc { inherit features target; }
            && (
              !(dep.optional or false)
              || builtins.any (doesFeatureEnableDependency dep) features
            )
      )
      dependencies;

  /* Returns whether the given feature should enable the given dependency. */
  doesFeatureEnableDependency = { name, rename ? null, ... }: feature:
    let
      prefix = "${name}/";
      len = builtins.stringLength prefix;
      startsWithPrefix = builtins.substring 0 len feature == prefix;
    in
      (rename == null && feature == name)
      || (rename != null && rename == feature)
      || startsWithPrefix;

  /* Returns the expanded features for the given inputFeatures by applying the
     rules in featureMap.

     featureMap is an attribute set which maps feature names to lists of further
     feature names to enable in case this feature is selected.
  */
  expandFeatures = featureMap: inputFeatures:
    assert (builtins.isAttrs featureMap);
    assert (builtins.isList inputFeatures);
    let
      expandFeature = feature:
        assert (builtins.isString feature);
        [ feature ] ++ (expandFeatures featureMap (featureMap."${feature}" or []));
      outFeatures = lib.concatMap expandFeature inputFeatures;
    in
      sortedUnique outFeatures;

  /*
     Returns the actual features for the given dependency.

     features: The features of the crate that refers this dependency.
  */
  dependencyFeatures = features: dependency:
    assert (builtins.isList features);
    assert (builtins.isAttrs dependency);
    let
      defaultOrNil = if dependency.usesDefaultFeatures or true
      then [ "default" ]
      else [];
      explicitFeatures = dependency.features or [];
      additionalDependencyFeatures =
        let
          dependencyPrefix = (dependency.rename or dependency.name) + "/";
          dependencyFeatures =
            builtins.filter (f: lib.hasPrefix dependencyPrefix f) features;
        in
          builtins.map (lib.removePrefix dependencyPrefix) dependencyFeatures;
    in
      defaultOrNil ++ explicitFeatures ++ additionalDependencyFeatures;

  /* Sorts and removes duplicates from a list of strings. */
  sortedUnique = features:
    assert (builtins.isList features);
    assert (builtins.all builtins.isString features);
    let
      outFeaturesSet = lib.foldl (set: feature: set // { "${feature}" = 1; }) {} features;
      outFeaturesUnique = builtins.attrNames outFeaturesSet;
    in
      builtins.sort (a: b: a < b) outFeaturesUnique;

  deprecationWarning = message: value:
    if strictDeprecation
    then builtins.throw "strictDeprecation enabled, aborting: ${message}"
    else builtins.trace message value;

  #
  # crate2nix/default.nix (excerpt end)
  #

  };
}
