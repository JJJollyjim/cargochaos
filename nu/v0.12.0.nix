
# This file was @generated by crate2nix 0.9.0-alpha.1 with the command:
#   "generate" "-o" "/home/jamie/Misc/cratesioout/nu/v0.12.0.nix.tmp"
# See https://github.com/kolloch/crate2nix for more info.

{ nixpkgs ? <nixpkgs>
, pkgs ? import nixpkgs { config = {}; }
, lib ? pkgs.lib
, stdenv ? pkgs.stdenv
, buildRustCrate ? pkgs.buildRustCrate
  # This is used as the `crateOverrides` argument for `buildRustCrate`.
, defaultCrateOverrides ? pkgs.defaultCrateOverrides
  # The features to enable for the root_crate or the workspace_members.
, rootFeatures ? [ "default" ]
  # If true, throw errors instead of issueing deprecation warnings.
, strictDeprecation ? false
  # Whether to perform release builds: longer compile times, faster binaries.
, release ? true
  # Additional crate2nix configuration if it exists.
, crateConfig
  ? if builtins.pathExists ./crate-config.nix
    then pkgs.callPackage ./crate-config.nix {}
    else {}
}:

rec {
  #
  # "public" attributes that we attempt to keep stable with new versions of crate2nix.
  #

  rootCrate = rec {
    packageId = "nu";

    # Use this attribute to refer to the derivation building your root crate package.
    # You can override the features with rootCrate.build.override { features = [ "default" "feature1" ... ]; }.
    build = internal.buildRustCrateWithFeatures {
      inherit packageId;
    };

    # Debug support which might change between releases.
    # File a bug if you depend on any for non-debug work!
    debug = internal.debugCrate { inherit packageId; };
  };
  # Refer your crate build derivation by name here.
  # You can override the features with
  # workspaceMembers."${crateName}".build.override { features = [ "default" "feature1" ... ]; }.
  workspaceMembers = {
    "nu" = rec {
      packageId = "nu";
      build = internal.buildRustCrateWithFeatures {
        packageId = "nu";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
  };

  #
  # "internal" ("private") attributes that may change in every new version of crate2nix.
  #

  internal = rec {
    # Build and dependency information for crates.
    # Many of the fields are passed one-to-one to buildRustCrate.
    #
    # Noteworthy:
    # * `dependencies`/`buildDependencies`: similar to the corresponding fields for buildRustCrate.
    #   but with additional information which is used during dependency/feature resolution.
    # * `resolvedDependencies`: the selected default features reported by cargo - only included for debugging.
    # * `devDependencies` as of now not used by `buildRustCrate` but used to
    #   inject test dependencies into the build

    crates = {
      "adler32" = rec {
        crateName = "adler32";
        version = "1.0.4";
        edition = "2015";
        sha256 = "1hnan4fgmnidgn2k84hh2i67c3wp2c5iwd5hs61yi7gwwx1p6bjx";
        authors = [
          "Remi Rampin <remirampin@gmail.com>"
        ];
        
      };
      "aho-corasick" = rec {
        crateName = "aho-corasick";
        version = "0.7.8";
        edition = "2015";
        sha256 = "048q5vr1qac4lf90z80lw8kcya6qmlxw857xhwxsssk832jdafkl";
        libName = "aho_corasick";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "memchr";
            packageId = "memchr";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "memchr/use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "ansi_term 0.11.0" = rec {
        crateName = "ansi_term";
        version = "0.11.0";
        edition = "2015";
        sha256 = "16wpvrghvd0353584i1idnsgm0r3vchg8fyrm0x8ayv1rgvbljgf";
        authors = [
          "ogham@bsago.me"
          "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>"
          "Josh Triplett <josh@joshtriplett.org>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: (target."os" == "windows");
            features = [ "errhandlingapi" "consoleapi" "processenv" ];
          }
        ];
        
      };
      "ansi_term 0.12.1" = rec {
        crateName = "ansi_term";
        version = "0.12.1";
        edition = "2015";
        sha256 = "1ljmkbilxgmhavxvxqa7qvm6f3fjggi7q2l3a72q9x0cxjvrnanm";
        authors = [
          "ogham@bsago.me"
          "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>"
          "Josh Triplett <josh@joshtriplett.org>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: (target."os" == "windows");
            features = [ "consoleapi" "errhandlingapi" "fileapi" "handleapi" "processenv" ];
          }
        ];
        features = {
          "derive_serde_style" = [ "serde" ];
        };
      };
      "anyhow" = rec {
        crateName = "anyhow";
        version = "1.0.26";
        edition = "2018";
        sha256 = "0g6mzcxyj88k8bv8rr3zx4yczgimqvvgr12n14a29sqj6s1zc9bq";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "app_dirs" = rec {
        crateName = "app_dirs";
        version = "1.2.1";
        edition = "2015";
        sha256 = "0g9ijvl4xqbmahy7d7s0wj570wg0kz3ad0jk77b98smxv6x28fp7";
        authors = [
          "Andy Barron <AndrewLBarron@gmail.com>"
        ];
        dependencies = [
          {
            name = "ole32-sys";
            packageId = "ole32-sys";
            target = { target, features }: target."windows";
          }
          {
            name = "shell32-sys";
            packageId = "shell32-sys";
            target = { target, features }: target."windows";
          }
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
            target = { target, features }: target."windows";
          }
          {
            name = "xdg";
            packageId = "xdg";
            target = { target, features }: (target."unix" && (!(target."os" == "macos")));
          }
        ];
        
      };
      "arc-swap" = rec {
        crateName = "arc-swap";
        version = "0.4.4";
        edition = "2015";
        sha256 = "1zwswfi9n7n3hiq51w1xv34572k2diazx680rrxlc9w07c9akf6p";
        authors = [
          "Michal 'vorner' Vaner <vorner@vorner.cz>"
        ];
        features = {
        };
      };
      "arrayref" = rec {
        crateName = "arrayref";
        version = "0.3.6";
        edition = "2015";
        sha256 = "0i6m1l3f73i0lf0cjdf5rh3xpvxydyhfbakq7xx7bkrp5qajgid4";
        authors = [
          "David Roundy <roundyd@physics.oregonstate.edu>"
        ];
        
      };
      "arrayvec 0.4.12" = rec {
        crateName = "arrayvec";
        version = "0.4.12";
        edition = "2015";
        sha256 = "1fdiv5m627gh6flp4mpmi1mh647imm9x423licsr11psz97d97yd";
        authors = [
          "bluss"
        ];
        dependencies = [
          {
            name = "nodrop";
            packageId = "nodrop";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "serde-1" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "array-sizes-33-128" "default" "std" ];
      };
      "arrayvec 0.5.1" = rec {
        crateName = "arrayvec";
        version = "0.5.1";
        edition = "2018";
        sha256 = "1f5mca8kiiwhvhxd1mbnq68j6v6rk139sch567zwwzl6hs37vxyg";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "std" ];
        };
      };
      "async-attributes" = rec {
        crateName = "async-attributes";
        version = "1.1.1";
        edition = "2018";
        sha256 = "08w41342hybxhln7j7hjsf7v04p3r9d6qdczfwp8d53xj5bd3lzg";
        procMacro = true;
        authors = [
          "Yoshua Wuyts <yoshuawuyts@gmail.com>"
        ];
        dependencies = [
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" ];
          }
        ];
        
      };
      "async-std" = rec {
        crateName = "async-std";
        version = "1.4.0";
        edition = "2018";
        sha256 = "0glay7k4b0akmspz3dsrqwqrw0pfjamx7fcqs5by002k66dh7xhb";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
          "Yoshua Wuyts <yoshuawuyts@gmail.com>"
          "Contributors to async-std"
        ];
        dependencies = [
          {
            name = "async-attributes";
            packageId = "async-attributes";
            optional = true;
          }
          {
            name = "async-task";
            packageId = "async-task";
            optional = true;
          }
          {
            name = "crossbeam-channel";
            packageId = "crossbeam-channel 0.4.0";
            optional = true;
          }
          {
            name = "crossbeam-deque";
            packageId = "crossbeam-deque";
            optional = true;
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.7.0";
            optional = true;
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            optional = true;
          }
          {
            name = "futures-io";
            packageId = "futures-io";
            optional = true;
          }
          {
            name = "futures-timer";
            packageId = "futures-timer 2.0.2";
            optional = true;
          }
          {
            name = "kv-log-macro";
            packageId = "kv-log-macro";
            optional = true;
          }
          {
            name = "log";
            packageId = "log";
            optional = true;
            features = [ "kv_unstable" ];
          }
          {
            name = "memchr";
            packageId = "memchr";
            optional = true;
          }
          {
            name = "mio";
            packageId = "mio";
            optional = true;
          }
          {
            name = "mio-uds";
            packageId = "mio-uds";
            optional = true;
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
            optional = true;
          }
          {
            name = "once_cell";
            packageId = "once_cell";
            optional = true;
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite";
            optional = true;
          }
          {
            name = "pin-utils";
            packageId = "pin-utils";
            optional = true;
          }
          {
            name = "slab";
            packageId = "slab";
            optional = true;
          }
        ];
        features = {
          "attributes" = [ "async-attributes" ];
          "default" = [ "std" "async-task" "crossbeam-channel" "crossbeam-deque" "futures-timer" "kv-log-macro" "log" "mio" "mio-uds" "num_cpus" "pin-project-lite" ];
          "docs" = [ "attributes" "unstable" ];
          "std" = [ "crossbeam-utils" "futures-core" "futures-io" "memchr" "once_cell" "pin-project-lite" "pin-utils" "slab" ];
          "unstable" = [ "default" "broadcaster" ];
        };
        resolvedDefaultFeatures = [ "async-attributes" "async-task" "attributes" "crossbeam-channel" "crossbeam-deque" "crossbeam-utils" "default" "futures-core" "futures-io" "futures-timer" "kv-log-macro" "log" "memchr" "mio" "mio-uds" "num_cpus" "once_cell" "pin-project-lite" "pin-utils" "slab" "std" ];
      };
      "async-stream" = rec {
        crateName = "async-stream";
        version = "0.2.1";
        edition = "2018";
        sha256 = "1x8az0155hq0s9fgjf8mws2as6pgfs4sykgxzkp44jai3468q1i2";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "async-stream-impl";
            packageId = "async-stream-impl";
          }
          {
            name = "futures-core";
            packageId = "futures-core";
          }
        ];
        
      };
      "async-stream-impl" = rec {
        crateName = "async-stream-impl";
        version = "0.2.1";
        edition = "2018";
        sha256 = "0w26845j6l731b1y4i07wll3jj9vadkr2r6cwpvhp1xg70xxpy95";
        procMacro = true;
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "extra-traits" "full" "visit-mut" ];
          }
        ];
        
      };
      "async-task" = rec {
        crateName = "async-task";
        version = "1.3.1";
        edition = "2018";
        sha256 = "0p88087z43zvv924my16a17qd65kdlv1r59h80h73rvrn0bc1hha";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "processthreadsapi" ];
          }
        ];
        
      };
      "attohttpc" = rec {
        crateName = "attohttpc";
        version = "0.12.0";
        edition = "2018";
        sha256 = "1cv20n22qh770s08xvdvjv51b21cr0r3336rqqcv1n5dy0bx0cyy";
        authors = [
          "Simon Bernier St-Pierre <git@sbstp.ca>"
        ];
        dependencies = [
          {
            name = "http";
            packageId = "http 0.2.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "native-tls";
            packageId = "native-tls";
            optional = true;
          }
          {
            name = "openssl";
            packageId = "openssl";
            optional = true;
            target = { target, features }: (!((target."os" == "windows") || (target."os" == "macos") || (target."os" == "ios")));
          }
          {
            name = "serde";
            packageId = "serde 1.0.105";
            optional = true;
          }
          {
            name = "serde_urlencoded";
            packageId = "serde_urlencoded";
            optional = true;
          }
          {
            name = "url";
            packageId = "url";
          }
        ];
        features = {
          "charsets" = [ "encoding_rs" "encoding_rs_io" ];
          "compress" = [ "flate2" ];
          "default" = [ "compress" "tls" ];
          "form" = [ "serde" "serde_urlencoded" ];
          "json" = [ "serde" "serde_json" ];
          "tls" = [ "native-tls" "openssl" ];
          "tls-rustls" = [ "rustls" "webpki" "webpki-roots" ];
        };
        resolvedDefaultFeatures = [ "form" "native-tls" "openssl" "serde" "serde_urlencoded" "tls" ];
      };
      "atty" = rec {
        crateName = "atty";
        version = "0.2.14";
        edition = "2015";
        sha256 = "1s7yslcs6a28c5vz7jwj63lkfgyx8mx99fdirlhi9lbhhzhrpcyr";
        authors = [
          "softprops <d.tangren@gmail.com>"
        ];
        dependencies = [
          {
            name = "hermit-abi";
            packageId = "hermit-abi";
            target = { target, features }: (target."os" == "hermit");
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: target."unix";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "consoleapi" "processenv" "minwinbase" "minwindef" "winbase" ];
          }
        ];
        
      };
      "autocfg 0.1.7" = rec {
        crateName = "autocfg";
        version = "0.1.7";
        edition = "2015";
        sha256 = "1chwgimpx5z7xbag7krr9d8asxfqbh683qhgl9kn3hxk2l0djj8x";
        authors = [
          "Josh Stone <cuviper@gmail.com>"
        ];
        
      };
      "autocfg 1.0.0" = rec {
        crateName = "autocfg";
        version = "1.0.0";
        edition = "2015";
        sha256 = "17cv6pwb4q08s0ynpr4n8hv5299hcmhdgvdchzixfpw8y5qcgapq";
        authors = [
          "Josh Stone <cuviper@gmail.com>"
        ];
        
      };
      "backtrace" = rec {
        crateName = "backtrace";
        version = "0.3.43";
        edition = "2018";
        sha256 = "0kwczvl76fgsksmy47yrjml9gv9nyrk77mrngvgyfrwgqxmjb03z";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "backtrace-sys";
            packageId = "backtrace-sys";
            optional = true;
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
          }
          {
            name = "rustc-demangle";
            packageId = "rustc-demangle";
          }
        ];
        features = {
          "default" = [ "std" "libunwind" "libbacktrace" "dladdr" "dbghelp" ];
          "gimli-symbolize" = [ "addr2line" "findshlibs" "memmap" "goblin" ];
          "libbacktrace" = [ "backtrace-sys" ];
          "rustc-dep-of-std" = [ "backtrace-sys/rustc-dep-of-std" "cfg-if/rustc-dep-of-std" "core" "compiler_builtins" "libc/rustc-dep-of-std" "rustc-demangle/rustc-dep-of-std" ];
          "serialize-rustc" = [ "rustc-serialize" ];
          "serialize-serde" = [ "serde" ];
          "verify-winapi" = [ "winapi/dbghelp" "winapi/handleapi" "winapi/libloaderapi" "winapi/minwindef" "winapi/processthreadsapi" "winapi/synchapi" "winapi/winbase" "winapi/winnt" ];
        };
        resolvedDefaultFeatures = [ "backtrace-sys" "dbghelp" "default" "dladdr" "libbacktrace" "libunwind" "std" ];
      };
      "backtrace-sys" = rec {
        crateName = "backtrace-sys";
        version = "0.1.32";
        edition = "2015";
        sha256 = "14c406z8bdmms8a5l8cv79jfkz1mk10qk5p97izf4vai53qparax";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
      "base64 0.10.1" = rec {
        crateName = "base64";
        version = "0.10.1";
        edition = "2015";
        sha256 = "13k6bvd3n6dm7jqn9x918w65dd9xhx454bqphbnv0bkd6n9dj98b";
        authors = [
          "Alice Maz <alice@alicemaz.com>"
          "Marshall Pierce <marshall@mpierce.org>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
        ];
        
      };
      "base64 0.11.0" = rec {
        crateName = "base64";
        version = "0.11.0";
        edition = "2018";
        sha256 = "1iqmims6yvr6vwzyy54qd672zw29ipjj17p8klcr578c9ajpw6xl";
        authors = [
          "Alice Maz <alice@alicemaz.com>"
          "Marshall Pierce <marshall@mpierce.org>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "base64 0.12.0" = rec {
        crateName = "base64";
        version = "0.12.0";
        edition = "2018";
        sha256 = "1czzrk3i89259m47x144x2nvzh6cz6ynnnpax7wlhgyw1b6s4p3x";
        authors = [
          "Alice Maz <alice@alicemaz.com>"
          "Marshall Pierce <marshall@mpierce.org>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "battery" = rec {
        crateName = "battery";
        version = "0.7.5";
        edition = "2018";
        sha256 = "01srwjgbddlmpbbsfd9yi30lnbjypyc5k0aak4c5sjh297j9i9in";
        authors = [
          "svartalf <self@svartalf.info>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "core-foundation";
            packageId = "core-foundation 0.6.4";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "lazycell";
            packageId = "lazycell";
            target = { target, features }: (target."os" == "linux");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: ((target."os" == "dragonfly") || (target."os" == "freebsd"));
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "mach";
            packageId = "mach 0.2.3";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "nix";
            packageId = "nix 0.15.0";
            target = { target, features }: ((target."os" == "dragonfly") || (target."os" == "freebsd"));
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
            usesDefaultFeatures = false;
          }
          {
            name = "uom";
            packageId = "uom 0.26.0";
            features = [ "autoconvert" "f32" "si" ];
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: (target."os" == "windows");
            features = [ "impl-default" "devguid" "winbase" "ioapiset" "ntdef" "setupapi" "handleapi" "errhandlingapi" "winerror" ];
          }
        ];
        
      };
      "bigdecimal" = rec {
        crateName = "bigdecimal";
        version = "0.1.0";
        edition = "2015";
        sha256 = "1jxsa7gd70aacbgf0pf8rbfarrb0ap6mfw60cx6h420pwb4ja226";
        authors = [
          "Andrew Kubera"
        ];
        dependencies = [
          {
            name = "num-bigint";
            packageId = "num-bigint";
          }
          {
            name = "num-integer";
            packageId = "num-integer";
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
          }
          {
            name = "serde";
            packageId = "serde 1.0.105";
            optional = true;
          }
        ];
        
        resolvedDefaultFeatures = [ "serde" ];
      };
      "bincode" = rec {
        crateName = "bincode";
        version = "1.2.1";
        edition = "2015";
        sha256 = "1gvxm3n67xv1874fwxmnlircdlphlk1hcw75ykrrnw9l2nky4lsp";
        authors = [
          "Ty Overby <ty@pre-alpha.com>"
          "Francesco Mazzoli <f@mazzo.li>"
          "David Tolnay <dtolnay@gmail.com>"
          "Daniel Griffen"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "serde";
            packageId = "serde 1.0.105";
          }
        ];
        features = {
        };
      };
      "bitflags" = rec {
        crateName = "bitflags";
        version = "1.2.1";
        edition = "2015";
        sha256 = "14qnd5nq8p2almk79m4m8ydqhd413yaxsyjp5xd19g3mikzf47fg";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "blake2b_simd" = rec {
        crateName = "blake2b_simd";
        version = "0.5.10";
        edition = "2018";
        sha256 = "12icvk8ixlivv3jv5nyrg01sajp4s279zb1kmif0nfja4ms2vyyq";
        authors = [
          "Jack O'Connor"
        ];
        dependencies = [
          {
            name = "arrayref";
            packageId = "arrayref";
          }
          {
            name = "arrayvec";
            packageId = "arrayvec 0.5.1";
            usesDefaultFeatures = false;
          }
          {
            name = "constant_time_eq";
            packageId = "constant_time_eq";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "block" = rec {
        crateName = "block";
        version = "0.1.6";
        edition = "2015";
        sha256 = "16k9jgll25pzsq14f244q22cdv0zb4bqacldg3kx6h89d7piz30d";
        authors = [
          "Steven Sheldon"
        ];
        
      };
      "bson" = rec {
        crateName = "bson";
        version = "0.14.1";
        edition = "2018";
        sha256 = "000wqyb4icy32h74wl5wb6iw2flzwwlrpgq51xgcw91g2b87w5rw";
        authors = [
          "Y. T. Chung <zonyitoo@gmail.com>"
          "Kevin Yeh <kevinyeah@utexas.edu>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "chrono";
            packageId = "chrono";
          }
          {
            name = "decimal";
            packageId = "decimal";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "hex";
            packageId = "hex 0.3.2";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "linked-hash-map";
            packageId = "linked-hash-map 0.5.2";
          }
          {
            name = "md5";
            packageId = "md5";
          }
          {
            name = "rand";
            packageId = "rand";
          }
          {
            name = "serde";
            packageId = "serde 1.0.105";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
            features = [ "preserve_order" ];
          }
          {
            name = "time";
            packageId = "time";
          }
        ];
        features = {
          "decimal128" = [ "decimal" ];
        };
        resolvedDefaultFeatures = [ "decimal" "decimal128" "default" ];
      };
      "bstr" = rec {
        crateName = "bstr";
        version = "0.2.11";
        edition = "2015";
        sha256 = "0j1cki9nmplv99gdwrdlj8z4kf8ncid9b99qpn7xnnha392f2ajh";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
            optional = true;
          }
          {
            name = "memchr";
            packageId = "memchr";
            usesDefaultFeatures = false;
          }
          {
            name = "regex-automata";
            packageId = "regex-automata";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde 1.0.105";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" "unicode" ];
          "serde1" = [ "std" "serde1-nostd" "serde/std" ];
          "serde1-nostd" = [ "serde" ];
          "std" = [ "memchr/use_std" ];
          "unicode" = [ "lazy_static" "regex-automata" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "regex-automata" "serde" "serde1" "serde1-nostd" "std" "unicode" ];
      };
      "bumpalo" = rec {
        crateName = "bumpalo";
        version = "3.1.2";
        edition = "2018";
        sha256 = "1x1j6lgaidayfvg7yh9ysdpfjlaiqx60y4vvg1rmy2nw3n607f2z";
        authors = [
          "Nick Fitzgerald <fitzgen@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "byte-unit" = rec {
        crateName = "byte-unit";
        version = "3.0.3";
        edition = "2018";
        sha256 = "0mlh8xngs5izs8nl10ryr1q0x0zql1nql4wsy7cr0x40a2asg538";
        authors = [
          "Magic Len <len@magiclen.org>"
        ];
        
      };
      "bytecount" = rec {
        crateName = "bytecount";
        version = "0.3.2";
        edition = "2015";
        sha256 = "1n6bmj66dixkvrm80yxmmln77baj9sw1qahcdv5xnmlz6p7djqgq";
        authors = [
          "Andre Bogus <bogusandre@gmail.de>"
          "Joshua Landau <joshua@landau.ws>"
        ];
        features = {
          "avx-accel" = [ "simd-accel" ];
          "simd-accel" = [ "simd" ];
        };
      };
      "byteorder" = rec {
        crateName = "byteorder";
        version = "1.3.2";
        edition = "2015";
        sha256 = "1xbwjlmq2ziqjmjvkqxdx1yh136xxhilxd40bky1w4d7hn4xvhx7";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "bytes 0.4.12" = rec {
        crateName = "bytes";
        version = "0.4.12";
        edition = "2015";
        sha256 = "0768a55q2fsqdjsvcv98ndg9dq7w2g44dvq1avhwpxrdzbydyvr0";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "iovec";
            packageId = "iovec";
          }
        ];
        features = {
          "i128" = [ "byteorder/i128" ];
        };
      };
      "bytes 0.5.4" = rec {
        crateName = "bytes";
        version = "0.5.4";
        edition = "2018";
        sha256 = "1q9r7si1l8vndg4n2ny2nv833ghp5vyqzk5indb9rmhd5ibaq2hk";
        authors = [
          "Carl Lerche <me@carllerche.com>"
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "c2-chacha" = rec {
        crateName = "c2-chacha";
        version = "0.2.3";
        edition = "2018";
        sha256 = "1fzn2n9k51b8wp4m41pkdzwlk1dbkjb6ha9rqdp4jfmzl753hhi1";
        authors = [
          "The CryptoCorrosion Contributors"
        ];
        dependencies = [
          {
            name = "ppv-lite86";
            packageId = "ppv-lite86";
            rename = "ppv-lite86";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" "simd" "rustcrypto_api" ];
          "rustcrypto_api" = [ "stream-cipher" "byteorder" ];
          "simd" = [ "ppv-lite86/simd" ];
          "std" = [ "ppv-lite86/std" ];
        };
        resolvedDefaultFeatures = [ "simd" "std" ];
      };
      "calamine" = rec {
        crateName = "calamine";
        version = "0.16.1";
        edition = "2015";
        sha256 = "1fhk2zs9v8p6sd9kbrd9isk4qhhb2w2z29p5wr2h8lpc4yh9vhxb";
        authors = [
          "Johann Tuffe <tafia973@gmail.com>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "codepage";
            packageId = "codepage";
          }
          {
            name = "encoding_rs";
            packageId = "encoding_rs";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "quick-xml";
            packageId = "quick-xml";
            features = [ "encoding" ];
          }
          {
            name = "serde";
            packageId = "serde 1.0.105";
          }
          {
            name = "zip";
            packageId = "zip";
            usesDefaultFeatures = false;
            features = [ "deflate" ];
          }
        ];
        features = {
          "dates" = [ "chrono" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "cc" = rec {
        crateName = "cc";
        version = "1.0.50";
        edition = "2018";
        crateBin = [];
        sha256 = "1kdqm8ka7xg9h56b694pcz29ka33fsz27mzrphqc78gx96h8zqlm";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "jobserver";
            packageId = "jobserver";
            optional = true;
          }
        ];
        features = {
          "parallel" = [ "jobserver" ];
        };
        resolvedDefaultFeatures = [ "jobserver" "parallel" ];
      };
      "cfg-if" = rec {
        crateName = "cfg-if";
        version = "0.1.10";
        edition = "2018";
        sha256 = "08h80ihs74jcyp24cd75wwabygbbdgl05k6p5dmq8akbr78vv1a7";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
      "chrono" = rec {
        crateName = "chrono";
        version = "0.4.11";
        edition = "2015";
        sha256 = "1cmmxamkzzs36zncqjjr7qm7xkb6zyrkjslnlj3axdgqki84y2c0";
        authors = [
          "Kang Seonghoon <public+rust@mearie.org>"
          "Brandon W Maister <quodlibetor@gmail.com>"
        ];
        dependencies = [
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde 1.0.105";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "time";
            packageId = "time";
            optional = true;
          }
        ];
        features = {
          "clock" = [ "time" "std" ];
          "default" = [ "clock" "std" ];
          "wasmbind" = [ "wasm-bindgen" "js-sys" ];
        };
        resolvedDefaultFeatures = [ "clock" "default" "serde" "std" "time" ];
      };
      "clap" = rec {
        crateName = "clap";
        version = "2.33.0";
        edition = "2015";
        sha256 = "1nf6ld3bims1n5vfzhkvcb55pdzh04bbhzf8nil5vvw05nxzarsh";
        authors = [
          "Kevin K. <kbknapp@gmail.com>"
        ];
        dependencies = [
          {
            name = "ansi_term";
            packageId = "ansi_term 0.11.0";
            optional = true;
            target = { target, features }: (!target."windows");
          }
          {
            name = "atty";
            packageId = "atty";
            optional = true;
          }
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "strsim";
            packageId = "strsim";
            optional = true;
          }
          {
            name = "textwrap";
            packageId = "textwrap";
          }
          {
            name = "unicode-width";
            packageId = "unicode-width";
          }
          {
            name = "vec_map";
            packageId = "vec_map";
            optional = true;
          }
        ];
        features = {
          "color" = [ "ansi_term" "atty" ];
          "default" = [ "suggestions" "color" "vec_map" ];
          "doc" = [ "yaml" ];
          "lints" = [ "clippy" ];
          "suggestions" = [ "strsim" ];
          "wrap_help" = [ "term_size" "textwrap/term_size" ];
          "yaml" = [ "yaml-rust" ];
        };
        resolvedDefaultFeatures = [ "ansi_term" "atty" "color" "default" "strsim" "suggestions" "vec_map" ];
      };
      "clipboard" = rec {
        crateName = "clipboard";
        version = "0.5.0";
        edition = "2015";
        sha256 = "1rxjfn811h09g6jpjjs2vx7z52wj6dxnflbwryfj6h03dij09a95";
        authors = [
          "Avi Weinstock <aweinstock314@gmail.com>"
        ];
        dependencies = [
          {
            name = "clipboard-win";
            packageId = "clipboard-win";
            target = { target, features }: target."windows";
          }
          {
            name = "objc";
            packageId = "objc";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "objc-foundation";
            packageId = "objc-foundation";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "objc_id";
            packageId = "objc_id";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "x11-clipboard";
            packageId = "x11-clipboard";
            target = { target, features }: (target."unix" && (!((target."os" == "macos") || (target."os" == "android"))));
          }
        ];
        
      };
      "clipboard-win" = rec {
        crateName = "clipboard-win";
        version = "2.2.0";
        edition = "2018";
        sha256 = "0svqk0lrw66abaxd6h7l4k4g2s5vd1dcipy34kzfan6mzvb97873";
        libName = "clipboard_win";
        authors = [
          "Douman <douman@gmx.se>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            usesDefaultFeatures = false;
            target = { target, features }: target."windows";
            features = [ "std" "basetsd" "shellapi" "winbase" "winuser" ];
          }
        ];
        features = {
        };
      };
      "cloudabi" = rec {
        crateName = "cloudabi";
        version = "0.0.3";
        edition = "2015";
        sha256 = "0kxcg83jlihy0phnd2g8c2c303px3l2p3pkjz357ll6llnd5pz6x";
        libPath = "cloudabi.rs";
        authors = [
          "Nuxi (https://nuxi.nl/) and contributors"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
            optional = true;
          }
        ];
        features = {
          "default" = [ "bitflags" ];
        };
        resolvedDefaultFeatures = [ "bitflags" "default" ];
      };
      "codepage" = rec {
        crateName = "codepage";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1sdxp0f8dy2rscln646326lny9i0jm7ncgyp4yncdwndq0i943lb";
        authors = [
          "Henri Sivonen <hsivonen@hsivonen.fi>"
        ];
        dependencies = [
          {
            name = "encoding_rs";
            packageId = "encoding_rs";
          }
        ];
        
      };
      "config" = rec {
        crateName = "config";
        version = "0.9.3";
        edition = "2015";
        sha256 = "1rppjv8q5ffdyir6rawgizyqrm5yg9j8xlg7hrdgmcv2xmw7s47r";
        authors = [
          "Ryan Leckey <leckey.ryan@gmail.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "nom";
            packageId = "nom 4.2.3";
          }
          {
            name = "rust-ini";
            packageId = "rust-ini";
            optional = true;
          }
          {
            name = "serde";
            packageId = "serde 1.0.105";
          }
          {
            name = "serde-hjson";
            packageId = "serde-hjson 0.8.2";
            optional = true;
          }
          {
            name = "serde_json";
            packageId = "serde_json";
            optional = true;
          }
          {
            name = "toml";
            packageId = "toml 0.4.10";
            optional = true;
          }
          {
            name = "yaml-rust";
            packageId = "yaml-rust";
            optional = true;
          }
        ];
        features = {
          "default" = [ "toml" "json" "yaml" "hjson" "ini" ];
          "hjson" = [ "serde-hjson" ];
          "ini" = [ "rust-ini" ];
          "json" = [ "serde_json" ];
          "yaml" = [ "yaml-rust" ];
        };
        resolvedDefaultFeatures = [ "default" "hjson" "ini" "json" "rust-ini" "serde-hjson" "serde_json" "toml" "yaml" "yaml-rust" ];
      };
      "constant_time_eq" = rec {
        crateName = "constant_time_eq";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1g3vp04qzmk6cpzrd19yci6a95m7ap6wy7wkwgiy2pjklklrfl14";
        authors = [
          "Cesar Eduardo Barros <cesarb@cesarb.eti.br>"
        ];
        
      };
      "core-foundation 0.6.4" = rec {
        crateName = "core-foundation";
        version = "0.6.4";
        edition = "2015";
        sha256 = "0va97wf49c8dzm9c8pgyk1jn7z21rl0bj1syf2zz5m2z2hzy1f95";
        authors = [
          "The Servo Project Developers"
        ];
        dependencies = [
          {
            name = "core-foundation-sys";
            packageId = "core-foundation-sys 0.6.2";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "mac_os_10_7_support" = [ "core-foundation-sys/mac_os_10_7_support" ];
          "mac_os_10_8_features" = [ "core-foundation-sys/mac_os_10_8_features" ];
          "with-chrono" = [ "chrono" ];
          "with-uuid" = [ "uuid" ];
        };
      };
      "core-foundation 0.7.0" = rec {
        crateName = "core-foundation";
        version = "0.7.0";
        edition = "2015";
        sha256 = "0wbias8f0m5kyn2pcksi0h58fdslams6nmf16w78fgn42dx4rljp";
        authors = [
          "The Servo Project Developers"
        ];
        dependencies = [
          {
            name = "core-foundation-sys";
            packageId = "core-foundation-sys 0.7.0";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "mac_os_10_7_support" = [ "core-foundation-sys/mac_os_10_7_support" ];
          "mac_os_10_8_features" = [ "core-foundation-sys/mac_os_10_8_features" ];
          "with-chrono" = [ "chrono" ];
          "with-uuid" = [ "uuid" ];
        };
      };
      "core-foundation-sys 0.6.2" = rec {
        crateName = "core-foundation-sys";
        version = "0.6.2";
        edition = "2015";
        sha256 = "0fzsw1j9g1x598yhwklg59l15hwzc0pyvs01w9fg2kin4598mjp7";
        authors = [
          "The Servo Project Developers"
        ];
        features = {
        };
      };
      "core-foundation-sys 0.7.0" = rec {
        crateName = "core-foundation-sys";
        version = "0.7.0";
        edition = "2015";
        sha256 = "1b5qfnnmg49sawwfsb0c0wbj81bqi7h7lh68pmhbidf0jjs1m9xk";
        authors = [
          "The Servo Project Developers"
        ];
        features = {
        };
      };
      "crc32fast" = rec {
        crateName = "crc32fast";
        version = "1.2.0";
        edition = "2015";
        sha256 = "1c9dhkvf3brrzzplcijaywxi2w8wv5578i0ryhcm7x8dmzi5s4ms";
        authors = [
          "Sam Rijs <srijs@airpost.net>"
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "crossbeam-channel 0.3.9" = rec {
        crateName = "crossbeam-channel";
        version = "0.3.9";
        edition = "2015";
        sha256 = "1ylyzb1m9qbvd1nd3vy38x9073wdmcy295ncjs7wf7ap476pzv68";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.6.6";
          }
        ];
        
      };
      "crossbeam-channel 0.4.0" = rec {
        crateName = "crossbeam-channel";
        version = "0.4.0";
        edition = "2015";
        sha256 = "135ncx9680afs8jkjz8g3iq3naay9rn7942gxrdg2n9m1cxrmv5c";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.7.0";
          }
        ];
        
      };
      "crossbeam-deque" = rec {
        crateName = "crossbeam-deque";
        version = "0.7.2";
        edition = "2015";
        sha256 = "1jm3rqb3qfpfywrakyy81f61xnl4jsim7lam9digw6w6cdfr9an3";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "crossbeam-epoch";
            packageId = "crossbeam-epoch";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.7.0";
          }
        ];
        
      };
      "crossbeam-epoch" = rec {
        crateName = "crossbeam-epoch";
        version = "0.8.0";
        edition = "2015";
        sha256 = "1b2mgc2gxxvyzyxgd5wvn9k42gr6f9phi2swwjawpqswy3dynr2h";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.7.0";
            usesDefaultFeatures = false;
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
            optional = true;
          }
          {
            name = "memoffset";
            packageId = "memoffset";
          }
          {
            name = "scopeguard";
            packageId = "scopeguard";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 0.1.7";
          }
        ];
        features = {
          "alloc" = [ "crossbeam-utils/alloc" ];
          "default" = [ "std" ];
          "nightly" = [ "crossbeam-utils/nightly" ];
          "std" = [ "crossbeam-utils/std" "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" ];
      };
      "crossbeam-queue" = rec {
        crateName = "crossbeam-queue";
        version = "0.2.1";
        edition = "2015";
        sha256 = "1nwkjh185bdwjrv1zj2g7an9lglv8sp4459268m4fwvi3v5fx5f6";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.7.0";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "crossbeam-utils/alloc" ];
          "default" = [ "std" ];
          "std" = [ "crossbeam-utils/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "crossbeam-utils 0.6.6" = rec {
        crateName = "crossbeam-utils";
        version = "0.6.6";
        edition = "2015";
        sha256 = "1rk0r9n04bmq4a3g2q5qhvvlmrmx780gc6h9lmc94mwndslkz5q4";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" ];
      };
      "crossbeam-utils 0.7.0" = rec {
        crateName = "crossbeam-utils";
        version = "0.7.0";
        edition = "2015";
        sha256 = "1x1rn35q2v05qif14ijfg7800d3rf3ji2cg79awnacfw5jq6si6f";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
            optional = true;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 0.1.7";
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" ];
      };
      "crossterm" = rec {
        crateName = "crossterm";
        version = "0.16.0";
        edition = "2018";
        sha256 = "0hqnf37qlzildjhqfzl39x5asigjms40wwxysrkcc05w2lr258xq";
        authors = [
          "T. Post"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "crossterm_winapi";
            packageId = "crossterm_winapi";
            target = { target, features }: target."windows";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "mio";
            packageId = "mio";
            target = { target, features }: target."unix";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "signal-hook";
            packageId = "signal-hook";
            target = { target, features }: target."unix";
            features = [ "mio-support" ];
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "winuser" ];
          }
        ];
        features = {
          "event-stream" = [ "futures" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "crossterm_winapi" = rec {
        crateName = "crossterm_winapi";
        version = "0.6.1";
        edition = "2018";
        sha256 = "0p4gnrkxykdfx173px1i53836zq9yrc53gkxzmsh3d9gs1372yq5";
        authors = [
          "T. Post"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "winbase" "consoleapi" "processenv" "handleapi" "synchapi" "impl-default" ];
          }
        ];
        
      };
      "csv" = rec {
        crateName = "csv";
        version = "1.1.3";
        edition = "2018";
        sha256 = "0yd2z55m2pg4al4yng4nl2y7c9dw2v7yhg5ynihxyrmmd9zzxbq0";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "bstr";
            packageId = "bstr";
            features = [ "serde1" ];
          }
          {
            name = "csv-core";
            packageId = "csv-core";
          }
          {
            name = "itoa";
            packageId = "itoa";
          }
          {
            name = "ryu";
            packageId = "ryu";
          }
          {
            name = "serde";
            packageId = "serde 1.0.105";
          }
        ];
        devDependencies = [
          {
            name = "serde";
            packageId = "serde 1.0.105";
            features = [ "derive" ];
          }
        ];
        
      };
      "csv-core" = rec {
        crateName = "csv-core";
        version = "0.1.6";
        edition = "2018";
        sha256 = "0k5zs0x0qmmn27pa5kcg86lg84s29491fw5sh3zswxswnavasp4v";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "memchr";
            packageId = "memchr";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "libc" ];
          "libc" = [ "memchr/libc" ];
        };
        resolvedDefaultFeatures = [ "default" "libc" ];
      };
      "ctor" = rec {
        crateName = "ctor";
        version = "0.1.12";
        edition = "2018";
        sha256 = "1p7fd2zp3lkb098sn740jlf3np8qg5ivycsc037b4jhqsixf736d";
        procMacro = true;
        authors = [
          "Matt Mastracci <matthew@mastracci.com>"
        ];
        dependencies = [
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            usesDefaultFeatures = false;
            features = [ "full" "parsing" "printing" "proc-macro" ];
          }
        ];
        
      };
      "ctrlc" = rec {
        crateName = "ctrlc";
        version = "3.1.4";
        edition = "2015";
        sha256 = "19qps8xw9vpsssrhn6rn46scx66gn0811kinjqf4ryprvy3acjvs";
        authors = [
          "Antti Keränen <detegr@gmail.com>"
        ];
        dependencies = [
          {
            name = "nix";
            packageId = "nix 0.17.0";
            target = { target, features }: target."unix";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "consoleapi" "handleapi" "synchapi" "winbase" ];
          }
        ];
        devDependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = {target, features}: target."windows";
            features = [ "fileapi" "processenv" "winnt" ];
          }
        ];
        features = {
        };
      };
      "curl" = rec {
        crateName = "curl";
        version = "0.4.25";
        edition = "2015";
        sha256 = "10qjqdvk34sa5ihjx1dr683swsixcsy7gn4j0zrdwm4a43lp3ah6";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "curl-sys";
            packageId = "curl-sys";
            usesDefaultFeatures = false;
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "openssl-probe";
            packageId = "openssl-probe";
            optional = true;
            target = { target, features }: (target."unix" && (!(target."os" == "macos")));
          }
          {
            name = "openssl-sys";
            packageId = "openssl-sys";
            optional = true;
            target = { target, features }: (target."unix" && (!(target."os" == "macos")));
          }
          {
            name = "schannel";
            packageId = "schannel";
            target = { target, features }: (target."env" == "msvc");
          }
          {
            name = "socket2";
            packageId = "socket2";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: (target."env" == "msvc");
            features = [ "libloaderapi" "wincrypt" ];
          }
        ];
        features = {
          "default" = [ "ssl" ];
          "force-system-lib-on-osx" = [ "curl-sys/force-system-lib-on-osx" ];
          "http2" = [ "curl-sys/http2" ];
          "mesalink" = [ "curl-sys/mesalink" ];
          "ssl" = [ "openssl-sys" "openssl-probe" "curl-sys/ssl" ];
          "static-curl" = [ "curl-sys/static-curl" ];
          "static-ssl" = [ "curl-sys/static-ssl" ];
        };
        resolvedDefaultFeatures = [ "default" "http2" "openssl-probe" "openssl-sys" "ssl" ];
      };
      "curl-sys" = rec {
        crateName = "curl-sys";
        version = "0.4.25";
        edition = "2015";
        sha256 = "16wpkvrwsn0zr1qzi4cpphm9qrl5105akjj2kp6d11hbsr3wlf0c";
        libName = "curl_sys";
        libPath = "lib.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "libnghttp2-sys";
            packageId = "libnghttp2-sys";
            optional = true;
          }
          {
            name = "libz-sys";
            packageId = "libz-sys";
          }
          {
            name = "openssl-sys";
            packageId = "openssl-sys";
            optional = true;
            target = { target, features }: (target."unix" && (!(target."os" == "macos")));
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "winsock2" "ws2def" ];
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
          {
            name = "vcpkg";
            packageId = "vcpkg";
            target = {target, features}: (target."env" == "msvc");
          }
        ];
        features = {
          "default" = [ "ssl" ];
          "http2" = [ "libnghttp2-sys" ];
          "ssl" = [ "openssl-sys" ];
          "static-ssl" = [ "openssl-sys/vendored" ];
        };
        resolvedDefaultFeatures = [ "default" "http2" "libnghttp2-sys" "openssl-sys" "ssl" ];
      };
      "darwin-libproc" = rec {
        crateName = "darwin-libproc";
        version = "0.1.1";
        edition = "2018";
        sha256 = "0c8agzrimk8n60vv025a2132n3wa92lj2wv8f3vnnr6rz25airdd";
        authors = [
          "svartalf <self@svartalf.info>"
        ];
        dependencies = [
          {
            name = "darwin-libproc-sys";
            packageId = "darwin-libproc-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "memchr";
            packageId = "memchr";
          }
        ];
        
      };
      "darwin-libproc-sys" = rec {
        crateName = "darwin-libproc-sys";
        version = "0.1.1";
        edition = "2018";
        sha256 = "0h8m0cxx03hdflxvad43k79i5i5g0y5qmv9gn21i3nklil3il3f3";
        authors = [
          "svartalf <self@svartalf.info>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        
      };
      "decimal" = rec {
        crateName = "decimal";
        version = "2.0.4";
        edition = "2015";
        crateBin = [];
        sha256 = "1vb3i8vg1dxrw3kzbfiag3gg7rdjd73z80mwbwkq60vnphiqfig6";
        authors = [
          "Alkis Evlogimenos <alkis@evlogimenos.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];
        features = {
          "default" = [ "ord_subset" "rustc-serialize" "serde" ];
        };
      };
      "deflate" = rec {
        crateName = "deflate";
        version = "0.7.20";
        edition = "2015";
        sha256 = "1d7d9fpmgjnznrksmd3vlv3dyw01wsrm11ifil6ag22871xnlyvh";
        authors = [
          "oyvindln <oyvindln@users.noreply.github.com>"
        ];
        dependencies = [
          {
            name = "adler32";
            packageId = "adler32";
          }
          {
            name = "byteorder";
            packageId = "byteorder";
          }
        ];
        features = {
          "gzip" = [ "gzip-header" ];
        };
      };
      "derive-new" = rec {
        crateName = "derive-new";
        version = "0.5.8";
        edition = "2015";
        sha256 = "1ncibp4jhpkym7namg3viqyw8hljd32n6abg64af8qjwrn91iwvi";
        procMacro = true;
        authors = [
          "Nick Cameron <ncameron@mozilla.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "difference" = rec {
        crateName = "difference";
        version = "2.0.0";
        edition = "2015";
        crateBin = [];
        sha256 = "1621wx4k8h452p6xzmzzvm7mz87kxh4yqz0kzxfjj9xmjxlbyk2j";
        authors = [
          "Johann Hofmann <mail@johann-hofmann.com>"
        ];
        features = {
          "bin" = [ "getopts" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "directories" = rec {
        crateName = "directories";
        version = "1.0.2";
        edition = "2015";
        sha256 = "03ybnr3afpspias9d5p12r4pzmax5jc7ijx2ri7psq4h86k3glvj";
        authors = [
          "Simon Ochsenreither <simon@ochsenreither.de>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "knownfolders" "objbase" "shlobj" "winbase" "winerror" ];
          }
        ];
        
      };
      "dirs 1.0.5" = rec {
        crateName = "dirs";
        version = "1.0.5";
        edition = "2015";
        sha256 = "009rrhzj9pxyncmm2vhlj70npg0cgggv2hjbbkiwdl9vccq8kmrz";
        authors = [
          "Simon Ochsenreither <simon@ochsenreither.de>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "redox_users";
            packageId = "redox_users";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "knownfolders" "objbase" "shlobj" "winbase" "winerror" ];
          }
        ];
        
      };
      "dirs 2.0.2" = rec {
        crateName = "dirs";
        version = "2.0.2";
        edition = "2015";
        sha256 = "1qymhyq7w7wlf1dirq6gsnabdyzg6yi2yyxkx6c4ldlkbjdaibhk";
        authors = [
          "Simon Ochsenreither <simon@ochsenreither.de>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "dirs-sys";
            packageId = "dirs-sys";
          }
        ];
        
      };
      "dirs-sys" = rec {
        crateName = "dirs-sys";
        version = "0.3.4";
        edition = "2015";
        sha256 = "0yyykdcmbc476z1v9m4z5jb8y91dw6kgzpkiqi2ig07xx0yv585g";
        authors = [
          "Simon Ochsenreither <simon@ochsenreither.de>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "redox_users";
            packageId = "redox_users";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "knownfolders" "objbase" "shlobj" "winbase" "winerror" ];
          }
        ];
        
      };
      "doc-comment" = rec {
        crateName = "doc-comment";
        version = "0.3.1";
        edition = "2015";
        sha256 = "15rsqxgarfpb1yim9sbp9yfgj7p2dq6v51c6bq1a62paii9ylgcj";
        libName = "doc_comment";
        authors = [
          "Guillaume Gomez <guillaume1.gomez@gmail.com>"
        ];
        features = {
        };
      };
      "dtoa" = rec {
        crateName = "dtoa";
        version = "0.4.5";
        edition = "2015";
        sha256 = "18qycvcp0vaqzw0j784ansbxgs39l54ini9v719cy2cs3ghsjn23";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        
      };
      "dunce" = rec {
        crateName = "dunce";
        version = "1.0.0";
        edition = "2018";
        sha256 = "0kys739zvwcvsngspa4lw2dksigiima17i25c09d2j45m3v6pbfh";
        authors = [
          "Kornel <kornel@geekhood.net>"
        ];
        
      };
      "either" = rec {
        crateName = "either";
        version = "1.5.3";
        edition = "2015";
        sha256 = "1qyz1b1acad6w0k5928jw5zaq900zhsk7p8dlcp4hh61w4f6n7xv";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
      };
      "encode_unicode" = rec {
        crateName = "encode_unicode";
        version = "0.3.6";
        edition = "2015";
        sha256 = "07w3vzrhxh9lpjgsg2y5bwzfar2aq35mdznvcp3zjl0ssj7d4mx3";
        authors = [
          "Torbjørn Birch Moltu <t.b.moltu@lyse.net>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "encoding_rs" = rec {
        crateName = "encoding_rs";
        version = "0.8.22";
        edition = "2015";
        sha256 = "0a5wckbnpjjgxvvycahy5vw31br7x2xxgylxc0qi837ylzx073fd";
        authors = [
          "Henri Sivonen <hsivonen@hsivonen.fi>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
        ];
        features = {
          "fast-legacy-encode" = [ "fast-hangul-encode" "fast-hanja-encode" "fast-kanji-encode" "fast-gb-hanzi-encode" "fast-big5-hanzi-encode" ];
          "simd-accel" = [ "packed_simd" "packed_simd/into_bits" ];
        };
      };
      "enumflags2" = rec {
        crateName = "enumflags2";
        version = "0.6.2";
        edition = "2015";
        sha256 = "1y3a94w2sfcgp3jrj5asqrnp3a16n08r7cns6aiqp55sha3iq4ik";
        authors = [
          "maik klein <maikklein@googlemail.com>"
          "Jakub \"NieDżejkob\" Kądziołka <kuba@kadziolka.net>"
        ];
        dependencies = [
          {
            name = "enumflags2_derive";
            packageId = "enumflags2_derive";
          }
        ];
        features = {
          "not_literal" = [ "enumflags2_derive/not_literal" ];
        };
      };
      "enumflags2_derive" = rec {
        crateName = "enumflags2_derive";
        version = "0.6.2";
        edition = "2015";
        sha256 = "154qzfkq0inb17294gmmbjxqc7yxyln2ipa69bavhi1h472k9xpc";
        procMacro = true;
        authors = [
          "maik klein <maikklein@googlemail.com>"
          "Jakub \"NieDżejkob\" Kądziołka <kuba@kadziolka.net>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];
        features = {
        };
      };
      "env_logger 0.6.2" = rec {
        crateName = "env_logger";
        version = "0.6.2";
        edition = "2015";
        sha256 = "1lx2s5nk96xx4i3m4zc4ghqgi8kb07dsnyiv8jk2clhax42dxz5a";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "atty";
            packageId = "atty";
            optional = true;
          }
          {
            name = "humantime";
            packageId = "humantime";
            optional = true;
          }
          {
            name = "log";
            packageId = "log";
            features = [ "std" ];
          }
          {
            name = "regex";
            packageId = "regex";
            optional = true;
          }
          {
            name = "termcolor";
            packageId = "termcolor";
            optional = true;
          }
        ];
        features = {
          "default" = [ "termcolor" "atty" "humantime" "regex" ];
        };
        resolvedDefaultFeatures = [ "atty" "default" "humantime" "regex" "termcolor" ];
      };
      "env_logger 0.7.1" = rec {
        crateName = "env_logger";
        version = "0.7.1";
        edition = "2018";
        sha256 = "0djx8h8xfib43g5w94r1m1mkky5spcw4wblzgnhiyg5vnfxknls4";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "atty";
            packageId = "atty";
            optional = true;
          }
          {
            name = "humantime";
            packageId = "humantime";
            optional = true;
          }
          {
            name = "log";
            packageId = "log";
            features = [ "std" ];
          }
          {
            name = "regex";
            packageId = "regex";
            optional = true;
          }
          {
            name = "termcolor";
            packageId = "termcolor";
            optional = true;
          }
        ];
        features = {
          "default" = [ "termcolor" "atty" "humantime" "regex" ];
        };
        resolvedDefaultFeatures = [ "atty" "default" "humantime" "regex" "termcolor" ];
      };
      "erased-serde" = rec {
        crateName = "erased-serde";
        version = "0.3.10";
        edition = "2018";
        sha256 = "1yfs0jqi5j7wzwx1l7r1wlhkdy0hn6gynly7wdwcvn4vbhq80zfd";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde 1.0.105";
          }
        ];
        features = {
        };
      };
      "failure" = rec {
        crateName = "failure";
        version = "0.1.7";
        edition = "2015";
        sha256 = "0js6i6mb42q1g6q3csfbmi6q40s64k96705xbim0d8zg44j9qlmq";
        authors = [
          "Without Boats <boats@mozilla.com>"
        ];
        dependencies = [
          {
            name = "backtrace";
            packageId = "backtrace";
            optional = true;
          }
          {
            name = "failure_derive";
            packageId = "failure_derive";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" "derive" ];
          "derive" = [ "failure_derive" ];
          "std" = [ "backtrace" ];
        };
        resolvedDefaultFeatures = [ "backtrace" "default" "derive" "failure_derive" "std" ];
      };
      "failure_derive" = rec {
        crateName = "failure_derive";
        version = "0.1.7";
        edition = "2015";
        sha256 = "0cfjz0c9szqpxn43b2r722p6m3swzxj7aj6xhqw23ml7h8y762h3";
        procMacro = true;
        authors = [
          "Without Boats <woboats@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
          {
            name = "synstructure";
            packageId = "synstructure";
          }
        ];
        features = {
        };
      };
      "fallible-iterator" = rec {
        crateName = "fallible-iterator";
        version = "0.2.0";
        edition = "2018";
        sha256 = "1xq759lsr8gqss7hva42azn3whgrbrs2sd9xpn92c5ickxm1fhs4";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "fallible-streaming-iterator" = rec {
        crateName = "fallible-streaming-iterator";
        version = "0.1.9";
        edition = "2015";
        sha256 = "0nj6j26p71bjy8h42x6jahx1hn0ng6mc2miwpgwnp8vnwqf4jq3k";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        features = {
        };
      };
      "filesize" = rec {
        crateName = "filesize";
        version = "0.1.0";
        edition = "2018";
        sha256 = "008plvz7irwgc5agr9ffjadj16isalh4qwy68v6yp72hmqwix51s";
        authors = [
          "Thomas Hurst <tom@hur.st>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "fileapi" "winerror" ];
          }
        ];
        
      };
      "fixedbitset" = rec {
        crateName = "fixedbitset";
        version = "0.1.9";
        edition = "2015";
        sha256 = "0czam11mi80dbyhf4rd4lz0ihcf7vkfchrdcrn45wbs0h40dxm46";
        authors = [
          "bluss"
        ];
        
      };
      "flate2" = rec {
        crateName = "flate2";
        version = "1.0.13";
        edition = "2018";
        sha256 = "03rwyh691j20ih2vcskwp1sinhf9paggrkv32fvzwli9fpsddmkb";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "crc32fast";
            packageId = "crc32fast";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "miniz_oxide";
            packageId = "miniz_oxide";
            optional = true;
          }
          {
            name = "miniz_oxide";
            packageId = "miniz_oxide";
            target = { target, features }: ((target."arch" == "wasm32") && (!(target."os" == "emscripten")));
          }
        ];
        features = {
          "default" = [ "rust_backend" ];
          "rust_backend" = [ "miniz_oxide" ];
          "tokio" = [ "tokio-io" "futures" ];
          "zlib" = [ "libz-sys" ];
        };
        resolvedDefaultFeatures = [ "default" "miniz_oxide" "rust_backend" ];
      };
      "fnv" = rec {
        crateName = "fnv";
        version = "1.0.6";
        edition = "2015";
        sha256 = "1ww56bi1r5b8id3ns9j3qxbi7w5h005rzhiryy0zi9h97raqbb9g";
        libPath = "lib.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        
      };
      "foreign-types" = rec {
        crateName = "foreign-types";
        version = "0.3.2";
        edition = "2015";
        sha256 = "1cgk0vyd7r45cj769jym4a6s7vwshvd0z4bqrb92q1fwibmkkwzn";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = [
          {
            name = "foreign-types-shared";
            packageId = "foreign-types-shared";
          }
        ];
        
      };
      "foreign-types-shared" = rec {
        crateName = "foreign-types-shared";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0jxgzd04ra4imjv8jgkmdq59kj8fsz6w4zxsbmlai34h26225c00";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        
      };
      "fuchsia-zircon" = rec {
        crateName = "fuchsia-zircon";
        version = "0.3.3";
        edition = "2015";
        sha256 = "10jxc5ks1x06gpd0xg51kcjrxr35nj6qhx2zlc5n7bmskv3675rf";
        authors = [
          "Raph Levien <raph@google.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "fuchsia-zircon-sys";
            packageId = "fuchsia-zircon-sys";
          }
        ];
        
      };
      "fuchsia-zircon-sys" = rec {
        crateName = "fuchsia-zircon-sys";
        version = "0.3.3";
        edition = "2015";
        sha256 = "19zp2085qsyq2bh1gvcxq1lb8w6v6jj9kbdkhpdjrl95fypakjix";
        authors = [
          "Raph Levien <raph@google.com>"
        ];
        
      };
      "futures 0.1.29" = rec {
        crateName = "futures";
        version = "0.1.29";
        edition = "2015";
        sha256 = "1vq3cw37knnd0afw3rcjzh71i2l01v5m4ysinrrqdvnn2ql0z60v";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "use_std" "with-deprecated" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" "with-deprecated" ];
      };
      "futures 0.3.3" = rec {
        crateName = "futures";
        version = "0.3.3";
        edition = "2018";
        sha256 = "1jswvnvgqydqqpbyb73zdh35yj34dj9z2zhmar3fpaq7ilqkcrmd";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "futures-channel";
            packageId = "futures-channel";
            usesDefaultFeatures = false;
            features = [ "sink" ];
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-executor";
            packageId = "futures-executor";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "futures-io";
            packageId = "futures-io";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-task";
            packageId = "futures-task";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
            features = [ "sink" ];
          }
        ];
        features = {
          "alloc" = [ "futures-core/alloc" "futures-task/alloc" "futures-sink/alloc" "futures-channel/alloc" "futures-util/alloc" ];
          "async-await" = [ "futures-util/async-await" "futures-util/async-await-macro" ];
          "bilock" = [ "futures-util/bilock" ];
          "cfg-target-has-atomic" = [ "futures-core/cfg-target-has-atomic" "futures-task/cfg-target-has-atomic" "futures-channel/cfg-target-has-atomic" "futures-util/cfg-target-has-atomic" ];
          "compat" = [ "std" "futures-util/compat" ];
          "default" = [ "std" "async-await" "executor" ];
          "executor" = [ "std" "futures-executor/std" ];
          "io-compat" = [ "compat" "futures-util/io-compat" ];
          "read-initializer" = [ "futures-io/read-initializer" "futures-util/read-initializer" ];
          "std" = [ "alloc" "futures-core/std" "futures-task/std" "futures-io/std" "futures-sink/std" "futures-util/std" "futures-util/io" "futures-util/channel" ];
          "thread-pool" = [ "executor" "futures-executor/thread-pool" ];
          "unstable" = [ "futures-core/unstable" "futures-task/unstable" "futures-channel/unstable" "futures-io/unstable" "futures-util/unstable" ];
        };
        resolvedDefaultFeatures = [ "alloc" "async-await" "compat" "default" "executor" "futures-executor" "io-compat" "std" ];
      };
      "futures-channel" = rec {
        crateName = "futures-channel";
        version = "0.3.4";
        edition = "2018";
        sha256 = "1a7iq7m4ggq2njrm7h1x2v2gxzxkd2160awk0fwrrpcfrq27vizh";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "futures-core/alloc" ];
          "cfg-target-has-atomic" = [ "futures-core/cfg-target-has-atomic" ];
          "default" = [ "std" ];
          "sink" = [ "futures-sink" ];
          "std" = [ "alloc" "futures-core/std" ];
          "unstable" = [ "futures-core/unstable" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "futures-sink" "sink" "std" ];
      };
      "futures-channel-preview" = rec {
        crateName = "futures-channel-preview";
        version = "0.3.0-alpha.19";
        edition = "2018";
        sha256 = "0fi6bi4lpyxjigy11y5sjg6wlc8nc71vbpmxz31c3aagjvgz9rfm";
        libName = "futures_channel";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "futures-core-preview";
            packageId = "futures-core-preview";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-sink-preview";
            packageId = "futures-sink-preview";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "futures-core-preview/alloc" ];
          "cfg-target-has-atomic" = [ "futures-core-preview/cfg-target-has-atomic" ];
          "default" = [ "std" ];
          "sink" = [ "futures-sink-preview" ];
          "std" = [ "alloc" "futures-core-preview/std" ];
          "unstable" = [ "futures-core-preview/unstable" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "futures-sink-preview" "sink" "std" ];
      };
      "futures-core" = rec {
        crateName = "futures-core";
        version = "0.3.4";
        edition = "2018";
        sha256 = "0jj6mjvjbvv36r6w86lmjkh62mwndz901nsq4fwqjpl2d7vr4mgj";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "futures-core-preview" = rec {
        crateName = "futures-core-preview";
        version = "0.3.0-alpha.19";
        edition = "2018";
        sha256 = "02n66jkjhpy210dv24pz0j30lvyin5kzlrb50p1j7x8yzdin4nxk";
        libName = "futures_core";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "futures-executor" = rec {
        crateName = "futures-executor";
        version = "0.3.3";
        edition = "2018";
        sha256 = "1bxxs8df1pjp9iglzp7psfb4088knjw1cfvz7hwm5vkvsy9yb9a6";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-task";
            packageId = "futures-task";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "futures-core/std" "futures-task/std" "futures-util/std" ];
          "thread-pool" = [ "std" "num_cpus" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "futures-executor-preview" = rec {
        crateName = "futures-executor-preview";
        version = "0.3.0-alpha.19";
        edition = "2018";
        sha256 = "161yv7wwha60mdzj1id47kh8ylnhcnv7blgwidg8xs4zpn46w8vm";
        libName = "futures_executor";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "futures-core-preview";
            packageId = "futures-core-preview";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-util-preview";
            packageId = "futures-util-preview";
            usesDefaultFeatures = false;
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "futures-core-preview/std" "futures-util-preview/std" "num_cpus" ];
        };
        resolvedDefaultFeatures = [ "num_cpus" "std" ];
      };
      "futures-io" = rec {
        crateName = "futures-io";
        version = "0.3.4";
        edition = "2018";
        sha256 = "1ihd1429kyfncxpc4mvina1hbppywfqzql6zrnjcflk1m6d9af56";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "futures-io-preview" = rec {
        crateName = "futures-io-preview";
        version = "0.3.0-alpha.19";
        edition = "2018";
        sha256 = "1npb04xbn2gw5rjllz88cb88fql44xxfkgcidjjj26fva3j4m4gl";
        libName = "futures_io";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "futures-macro" = rec {
        crateName = "futures-macro";
        version = "0.3.4";
        edition = "2018";
        sha256 = "19r3akc8y0br6jbx0lh1cfq07n8f23g7qfaag4m59xz17nm82l4s";
        procMacro = true;
        authors = [
          "Taylor Cramer <cramertj@google.com>"
          "Taiki Endo <te316e89@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro-hack";
            packageId = "proc-macro-hack";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" ];
          }
        ];
        
      };
      "futures-preview" = rec {
        crateName = "futures-preview";
        version = "0.3.0-alpha.19";
        edition = "2018";
        sha256 = "0vnp63aicm9vgapn4hm45ag9lrsf9f3bma3mzz3abbb708mcw79v";
        libName = "futures";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "futures-channel-preview";
            packageId = "futures-channel-preview";
            usesDefaultFeatures = false;
            features = [ "sink" ];
          }
          {
            name = "futures-core-preview";
            packageId = "futures-core-preview";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-executor-preview";
            packageId = "futures-executor-preview";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-io-preview";
            packageId = "futures-io-preview";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-sink-preview";
            packageId = "futures-sink-preview";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-util-preview";
            packageId = "futures-util-preview";
            usesDefaultFeatures = false;
            features = [ "sink" ];
          }
        ];
        features = {
          "alloc" = [ "futures-core-preview/alloc" "futures-sink-preview/alloc" "futures-channel-preview/alloc" "futures-util-preview/alloc" ];
          "async-await" = [ "futures-util-preview/async-await" "futures-util-preview/join-macro" "futures-util-preview/select-macro" ];
          "bilock" = [ "futures-util-preview/bilock" ];
          "cfg-target-has-atomic" = [ "futures-core-preview/cfg-target-has-atomic" "futures-channel-preview/cfg-target-has-atomic" "futures-util-preview/cfg-target-has-atomic" ];
          "compat" = [ "std" "futures-util-preview/compat" ];
          "default" = [ "std" ];
          "io-compat" = [ "compat" "futures-util-preview/io-compat" ];
          "read_initializer" = [ "futures-io-preview/read_initializer" "futures-util-preview/read_initializer" ];
          "std" = [ "alloc" "futures-core-preview/std" "futures-executor-preview/std" "futures-io-preview/std" "futures-sink-preview/std" "futures-util-preview/std" "futures-util-preview/io" "futures-util-preview/channel" ];
          "unstable" = [ "futures-core-preview/unstable" "futures-channel-preview/unstable" "futures-io-preview/unstable" "futures-util-preview/unstable" ];
        };
        resolvedDefaultFeatures = [ "alloc" "compat" "default" "io-compat" "std" ];
      };
      "futures-sink" = rec {
        crateName = "futures-sink";
        version = "0.3.4";
        edition = "2018";
        sha256 = "19n88jlh8cwam4gqzj4vj9g130vg9ir0m1bv11dxj5619cdq4ril";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
      "futures-sink-preview" = rec {
        crateName = "futures-sink-preview";
        version = "0.3.0-alpha.19";
        edition = "2018";
        sha256 = "1v7y5qvgvl0d6hd9s4k7bd5qrj2gdlrs5yfl22v5pxv9dgpliwc6";
        libName = "futures_sink";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
      "futures-task" = rec {
        crateName = "futures-task";
        version = "0.3.4";
        edition = "2018";
        sha256 = "09ss6zg7w36s3y2715bnvfrnwr3b8vnklmxag00wvkgn7kjk82kv";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
      "futures-timer 2.0.2" = rec {
        crateName = "futures-timer";
        version = "2.0.2";
        edition = "2018";
        sha256 = "1xlx22asam8g5m32avwxx4x4p5hw3gvdhbk6047rn0hqn847bpm1";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        
      };
      "futures-timer 3.0.1" = rec {
        crateName = "futures-timer";
        version = "3.0.1";
        edition = "2018";
        sha256 = "1id1czqrmnqgvchr3gjsdblsmvk1w07bd03rw5h9wgd3lara5q9x";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "wasm-bindgen" = [ "gloo-timers" "send_wrapper" ];
        };
      };
      "futures-util" = rec {
        crateName = "futures-util";
        version = "0.3.4";
        edition = "2018";
        sha256 = "1i84h30q2q93y4l4bk2g22mp96aws02a0k9qy3nnnc34bpr6qxi2";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.1.29";
            rename = "futures_01";
            optional = true;
          }
          {
            name = "futures-channel";
            packageId = "futures-channel";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-io";
            packageId = "futures-io";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "futures-macro";
            packageId = "futures-macro";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "futures-task";
            packageId = "futures-task";
            usesDefaultFeatures = false;
          }
          {
            name = "memchr";
            packageId = "memchr";
            optional = true;
          }
          {
            name = "pin-utils";
            packageId = "pin-utils";
          }
          {
            name = "proc-macro-hack";
            packageId = "proc-macro-hack";
            optional = true;
          }
          {
            name = "proc-macro-nested";
            packageId = "proc-macro-nested";
            optional = true;
          }
          {
            name = "slab";
            packageId = "slab";
            optional = true;
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
            optional = true;
          }
        ];
        features = {
          "alloc" = [ "futures-core/alloc" "futures-task/alloc" ];
          "async-await-macro" = [ "async-await" "futures-macro" "proc-macro-hack" "proc-macro-nested" ];
          "cfg-target-has-atomic" = [ "futures-core/cfg-target-has-atomic" "futures-task/cfg-target-has-atomic" ];
          "channel" = [ "std" "futures-channel" ];
          "compat" = [ "std" "futures_01" ];
          "default" = [ "std" "async-await" "async-await-macro" ];
          "io" = [ "std" "futures-io" "memchr" ];
          "io-compat" = [ "io" "compat" "tokio-io" ];
          "read-initializer" = [ "io" "futures-io/read-initializer" "futures-io/unstable" ];
          "sink" = [ "futures-sink" ];
          "std" = [ "alloc" "futures-core/std" "futures-task/std" "slab" ];
          "unstable" = [ "futures-core/unstable" "futures-task/unstable" ];
        };
        resolvedDefaultFeatures = [ "alloc" "async-await" "async-await-macro" "channel" "compat" "default" "futures-channel" "futures-io" "futures-macro" "futures-sink" "futures_01" "io" "io-compat" "memchr" "proc-macro-hack" "proc-macro-nested" "sink" "slab" "std" "tokio-io" ];
      };
      "futures-util-preview" = rec {
        crateName = "futures-util-preview";
        version = "0.3.0-alpha.19";
        edition = "2018";
        sha256 = "138f8wy0vqy2gsgk28kldbqnrdcgwfv9f9xx6rwzkr8p7iinisaw";
        libName = "futures_util";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.1.29";
            rename = "futures_01";
            optional = true;
          }
          {
            name = "futures-channel-preview";
            packageId = "futures-channel-preview";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "futures-core-preview";
            packageId = "futures-core-preview";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-io-preview";
            packageId = "futures-io-preview";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "futures-sink-preview";
            packageId = "futures-sink-preview";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "memchr";
            packageId = "memchr";
            optional = true;
          }
          {
            name = "pin-utils";
            packageId = "pin-utils";
          }
          {
            name = "slab";
            packageId = "slab";
            optional = true;
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
            optional = true;
          }
        ];
        features = {
          "alloc" = [ "futures-core-preview/alloc" ];
          "cfg-target-has-atomic" = [ "futures-core-preview/cfg-target-has-atomic" ];
          "channel" = [ "std" "futures-channel-preview" ];
          "compat" = [ "std" "futures_01" ];
          "default" = [ "std" ];
          "io" = [ "std" "futures-io-preview" "memchr" ];
          "io-compat" = [ "io" "compat" "tokio-io" ];
          "join-macro" = [ "async-await" "futures-join-macro-preview" "proc-macro-hack" "proc-macro-nested" ];
          "read_initializer" = [ "io" "futures-io-preview/read_initializer" "futures-io-preview/unstable" ];
          "select-macro" = [ "async-await" "futures-select-macro-preview" "proc-macro-hack" "proc-macro-nested" ];
          "sink" = [ "futures-sink-preview" ];
          "std" = [ "alloc" "futures-core-preview/std" "slab" ];
          "unstable" = [ "futures-core-preview/unstable" ];
        };
        resolvedDefaultFeatures = [ "alloc" "channel" "compat" "default" "futures-channel-preview" "futures-io-preview" "futures-sink-preview" "futures_01" "io" "io-compat" "memchr" "sink" "slab" "std" "tokio-io" ];
      };
      "futures_codec" = rec {
        crateName = "futures_codec";
        version = "0.4.0";
        edition = "2018";
        sha256 = "1la486iiimri74sinhlaz6sx42hh85ws119a3bnl41qlnzz5k27y";
        authors = [
          "Matt Hunzinger <matthunz2@gmail.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.5.4";
          }
          {
            name = "futures";
            packageId = "futures 0.3.3";
          }
          {
            name = "memchr";
            packageId = "memchr";
          }
          {
            name = "pin-project";
            packageId = "pin-project";
          }
        ];
        features = {
          "cbor" = [ "serde" "serde_cbor" ];
          "json" = [ "serde" "serde_json" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "gethostname" = rec {
        crateName = "gethostname";
        version = "0.2.1";
        edition = "2018";
        sha256 = "0a609j9dhk816il2f2a01avvi5sqzxh0p38nxwrja7dcpybf54p6";
        authors = [
          "Sebastian Wiesner <sebastian@swsnr.de>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (!target."windows");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "sysinfoapi" ];
          }
        ];
        
      };
      "getrandom" = rec {
        crateName = "getrandom";
        version = "0.1.14";
        edition = "2018";
        sha256 = "1sq30li71h19rhnhs1h6576ja68insajx8wvh1nn088r8pc8vg3s";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: target."unix";
          }
          {
            name = "wasi";
            packageId = "wasi";
            target = { target, features }: (target."os" == "wasi");
          }
        ];
        features = {
          "rustc-dep-of-std" = [ "compiler_builtins" "core" ];
          "test-in-browser" = [ "wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "getset 0.0.9" = rec {
        crateName = "getset";
        version = "0.0.9";
        edition = "2018";
        sha256 = "0aaldwfs2690rjqg2ygan27l2qa614w2p6zj7k99n36pv2vzbcsv";
        procMacro = true;
        authors = [
          "Ana Hobden <ana@hoverbear.org>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
            usesDefaultFeatures = false;
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];
        
      };
      "getset 0.1.0" = rec {
        crateName = "getset";
        version = "0.1.0";
        edition = "2018";
        sha256 = "18047rasp9491asd7sa039yrkwb8mhmg34n3chwnr15fb6f16apn";
        procMacro = true;
        authors = [
          "Ana Hobden <ana@hoverbear.org>"
        ];
        dependencies = [
          {
            name = "proc-macro-error";
            packageId = "proc-macro-error";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
            usesDefaultFeatures = false;
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];
        
      };
      "ghost" = rec {
        crateName = "ghost";
        version = "0.1.1";
        edition = "2018";
        sha256 = "1mpkhyipwcbvjgrm0k5d59lc8iabqqrizfw6vi05caskd1m60dia";
        procMacro = true;
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];
        
      };
      "git2" = rec {
        crateName = "git2";
        version = "0.13.0";
        edition = "2018";
        sha256 = "059w989m7ddcqmwpqcglpa9n8ssh5cx4di02pbcysk72mz71dnmp";
        authors = [
          "Josh Triplett <josh@joshtriplett.org>"
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "libgit2-sys";
            packageId = "libgit2-sys";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "url";
            packageId = "url";
          }
        ];
        features = {
          "default" = [ "ssh" "https" "ssh_key_from_memory" ];
          "https" = [ "libgit2-sys/https" "openssl-sys" "openssl-probe" ];
          "ssh" = [ "libgit2-sys/ssh" ];
          "ssh_key_from_memory" = [ "libgit2-sys/ssh_key_from_memory" ];
          "vendored-openssl" = [ "openssl-sys/vendored" ];
        };
      };
      "glob" = rec {
        crateName = "glob";
        version = "0.3.0";
        edition = "2015";
        sha256 = "0x25wfr7vg3mzxc9x05dcphvd3nwlcmbnxrvwcvrrdwplcrrk4cv";
        authors = [
          "The Rust Project Developers"
        ];
        
      };
      "heck" = rec {
        crateName = "heck";
        version = "0.3.1";
        edition = "2015";
        sha256 = "01a2v7yvkiqxakdqz4hw3w3g4sm52ivz9cs3qcsv2arxsmw4wmi0";
        authors = [
          "Without Boats <woboats@gmail.com>"
        ];
        dependencies = [
          {
            name = "unicode-segmentation";
            packageId = "unicode-segmentation";
          }
        ];
        
      };
      "heim" = rec {
        crateName = "heim";
        version = "0.0.10";
        edition = "2018";
        sha256 = "0g2pgl8wq9vycdwhahmmb2rv07g0qz0vshs1gcr3g0jrq01y9f2i";
        authors = [
          "svartalf <self@svartalf.info>"
        ];
        dependencies = [
          {
            name = "heim-common";
            packageId = "heim-common";
          }
          {
            name = "heim-cpu";
            packageId = "heim-cpu";
            optional = true;
          }
          {
            name = "heim-disk";
            packageId = "heim-disk";
            optional = true;
          }
          {
            name = "heim-host";
            packageId = "heim-host";
            optional = true;
          }
          {
            name = "heim-memory";
            packageId = "heim-memory";
            optional = true;
          }
          {
            name = "heim-net";
            packageId = "heim-net";
            optional = true;
          }
          {
            name = "heim-process";
            packageId = "heim-process";
            optional = true;
          }
          {
            name = "heim-runtime";
            packageId = "heim-runtime";
          }
          {
            name = "heim-sensors";
            packageId = "heim-sensors";
            optional = true;
          }
          {
            name = "heim-virt";
            packageId = "heim-virt";
            optional = true;
          }
        ];
        features = {
          "cpu" = [ "heim-cpu" ];
          "default" = [ "host" "cpu" "memory" "disk" "net" "process" "virt" "sensors" "runtime-polyfill" ];
          "disk" = [ "heim-disk" ];
          "host" = [ "heim-host" ];
          "memory" = [ "heim-memory" ];
          "net" = [ "heim-net" ];
          "process" = [ "heim-process" ];
          "runtime-polyfill" = [ "heim-runtime/runtime-polyfill" "heim-cpu/runtime-polyfill" "heim-cpu/runtime-polyfill" "heim-disk/runtime-polyfill" "heim-host/runtime-polyfill" "heim-memory/runtime-polyfill" "heim-net/runtime-polyfill" "heim-process/runtime-polyfill" "heim-virt/runtime-polyfill" "heim-sensors/runtime-polyfill" ];
          "sensors" = [ "heim-sensors" ];
          "virt" = [ "heim-virt" ];
        };
        resolvedDefaultFeatures = [ "cpu" "disk" "heim-cpu" "heim-disk" "heim-host" "heim-memory" "heim-net" "heim-process" "heim-sensors" "heim-virt" "host" "memory" "net" "process" "runtime-polyfill" "sensors" ];
      };
      "heim-common" = rec {
        crateName = "heim-common";
        version = "0.0.10";
        edition = "2018";
        sha256 = "16ki8wi5mzcpi5i93mh9q33b6vvmqivjrpcz7vfx8b8h4fjg4jhl";
        authors = [
          "svartalf <self@svartalf.info>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "core-foundation";
            packageId = "core-foundation 0.7.0";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "futures-core";
            packageId = "futures-core";
          }
          {
            name = "futures-util";
            packageId = "futures-util";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
            target = { target, features }: target."unix";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "mach";
            packageId = "mach 0.3.2";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "nix";
            packageId = "nix 0.17.0";
            target = { target, features }: target."unix";
          }
          {
            name = "pin-utils";
            packageId = "pin-utils";
          }
          {
            name = "uom";
            packageId = "uom 0.27.0";
            usesDefaultFeatures = false;
            features = [ "autoconvert" "f32" "f64" "u64" "si" "std" ];
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: (target."os" == "windows");
            features = [ "winnt" "minwindef" "libloaderapi" ];
          }
        ];
        
      };
      "heim-cpu" = rec {
        crateName = "heim-cpu";
        version = "0.0.10";
        edition = "2018";
        sha256 = "03a75fm5n44ac71h28ns7y0yi80lc6v5cbgmsxfdf6rkdmhm1fwa";
        authors = [
          "svartalf <self@svartalf.info>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "heim-common";
            packageId = "heim-common";
          }
          {
            name = "heim-runtime";
            packageId = "heim-runtime";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."os" == "linux");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "mach";
            packageId = "mach 0.3.2";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: (target."os" == "windows");
            features = [ "powerbase" "sysinfoapi" "minwindef" "winnt" "winerror" "processthreadsapi" "impl-default" "winbase" ];
          }
        ];
        features = {
          "runtime-polyfill" = [ "heim-runtime/runtime-polyfill" ];
        };
        resolvedDefaultFeatures = [ "runtime-polyfill" ];
      };
      "heim-disk" = rec {
        crateName = "heim-disk";
        version = "0.0.10";
        edition = "2018";
        sha256 = "0j6j77qw5rv5n6wigrkzk546y1rb27zlmqcpnlfiyzksd0779ra9";
        authors = [
          "svartalf <self@svartalf.info>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "core-foundation";
            packageId = "core-foundation 0.7.0";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "heim-common";
            packageId = "heim-common";
          }
          {
            name = "heim-runtime";
            packageId = "heim-runtime";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "mach";
            packageId = "mach 0.3.2";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "widestring";
            packageId = "widestring";
            target = { target, features }: (target."os" == "windows");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: (target."os" == "windows");
            features = [ "std" "winnt" "ntdef" "fileapi" "handleapi" "ioapiset" "winioctl" "impl-default" "errhandlingapi" "winerror" "winbase" "ws2def" ];
          }
        ];
        features = {
          "runtime-polyfill" = [ "heim-runtime/runtime-polyfill" ];
        };
        resolvedDefaultFeatures = [ "runtime-polyfill" ];
      };
      "heim-host" = rec {
        crateName = "heim-host";
        version = "0.0.10";
        edition = "2018";
        sha256 = "1w65wd1hqywhrig6hycbm9b9apfb29m65f2vzm2160mhi7dijq6l";
        authors = [
          "svartalf <self@svartalf.info>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "heim-common";
            packageId = "heim-common";
          }
          {
            name = "heim-runtime";
            packageId = "heim-runtime";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "mach";
            packageId = "mach 0.3.2";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "platforms";
            packageId = "platforms";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: (target."os" == "windows");
            features = [ "sysinfoapi" "libloaderapi" "ws2def" "winbase" "minwindef" "winnt" "ntdef" ];
          }
        ];
        features = {
          "runtime-polyfill" = [ "heim-runtime/runtime-polyfill" ];
        };
        resolvedDefaultFeatures = [ "runtime-polyfill" ];
      };
      "heim-memory" = rec {
        crateName = "heim-memory";
        version = "0.0.10";
        edition = "2018";
        sha256 = "1gyk8wisry4l2hhdbj5lbxmk89jq1hzqjnyi125gd8nbrvz6csr1";
        authors = [
          "svartalf <self@svartalf.info>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "heim-common";
            packageId = "heim-common";
          }
          {
            name = "heim-runtime";
            packageId = "heim-runtime";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."os" == "windows");
          }
          {
            name = "mach";
            packageId = "mach 0.3.2";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            usesDefaultFeatures = false;
            target = { target, features }: (target."os" == "windows");
            features = [ "minwindef" "sysinfoapi" ];
          }
        ];
        features = {
          "runtime-polyfill" = [ "heim-runtime/runtime-polyfill" ];
        };
        resolvedDefaultFeatures = [ "runtime-polyfill" ];
      };
      "heim-net" = rec {
        crateName = "heim-net";
        version = "0.0.10";
        edition = "2018";
        sha256 = "19vsbi9l570s0591s9jc7rdigr5ll8g4382lj89mpga44a991dsj";
        authors = [
          "svartalf <self@svartalf.info>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "heim-common";
            packageId = "heim-common";
          }
          {
            name = "heim-runtime";
            packageId = "heim-runtime";
          }
          {
            name = "hex";
            packageId = "hex 0.4.0";
            target = { target, features }: (target."os" == "linux");
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "macaddr";
            packageId = "macaddr";
          }
          {
            name = "nix";
            packageId = "nix 0.17.0";
            target = { target, features }: target."unix";
          }
        ];
        features = {
          "runtime-polyfill" = [ "heim-runtime/runtime-polyfill" ];
        };
        resolvedDefaultFeatures = [ "runtime-polyfill" ];
      };
      "heim-process" = rec {
        crateName = "heim-process";
        version = "0.0.10";
        edition = "2018";
        sha256 = "1pjry0z7l938s0ykal94javmi8s57w7j6f0w4syadkmym3y2k3ic";
        authors = [
          "svartalf <self@svartalf.info>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "darwin-libproc";
            packageId = "darwin-libproc";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "heim-common";
            packageId = "heim-common";
          }
          {
            name = "heim-cpu";
            packageId = "heim-cpu";
          }
          {
            name = "heim-host";
            packageId = "heim-host";
            target = { target, features }: (target."os" == "linux");
          }
          {
            name = "heim-host";
            packageId = "heim-host";
            target = { target, features }: (target."os" == "windows");
          }
          {
            name = "heim-net";
            packageId = "heim-net";
            target = { target, features }: (target."os" == "linux");
          }
          {
            name = "heim-runtime";
            packageId = "heim-runtime";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "mach";
            packageId = "mach 0.3.2";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "memchr";
            packageId = "memchr";
          }
          {
            name = "ntapi";
            packageId = "ntapi";
            target = { target, features }: (target."os" == "windows");
          }
          {
            name = "ordered-float";
            packageId = "ordered-float";
            usesDefaultFeatures = false;
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            usesDefaultFeatures = false;
            target = { target, features }: (target."os" == "windows");
            features = [ "impl-default" "minwindef" "winnt" "winbase" "handleapi" "psapi" "processthreadsapi" "winerror" "tlhelp32" ];
          }
        ];
        features = {
          "runtime-polyfill" = [ "heim-runtime/runtime-polyfill" ];
        };
        resolvedDefaultFeatures = [ "runtime-polyfill" ];
      };
      "heim-runtime" = rec {
        crateName = "heim-runtime";
        version = "0.0.6";
        edition = "2018";
        sha256 = "0sagn7d1cl8wc9vdvn5vdg145jidy3nd6dwmgmfhvxaabrd0mg80";
        authors = [
          "svartalf <self@svartalf.info>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "futures-channel";
            packageId = "futures-channel";
            optional = true;
          }
          {
            name = "heim-common";
            packageId = "heim-common";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
            optional = true;
          }
          {
            name = "threadpool";
            packageId = "threadpool";
            optional = true;
          }
        ];
        features = {
          "default" = [ "runtime-polyfill" ];
          "runtime-polyfill" = [ "threadpool" "lazy_static" "futures-channel" ];
        };
        resolvedDefaultFeatures = [ "default" "futures-channel" "lazy_static" "runtime-polyfill" "threadpool" ];
      };
      "heim-sensors" = rec {
        crateName = "heim-sensors";
        version = "0.0.5";
        edition = "2018";
        sha256 = "0900fcg4sfcfhvb5nbv3pqyqbrz03npmm3jqc6127m3r9pgm04ig";
        authors = [
          "svartalf <self@svartalf.info>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "heim-common";
            packageId = "heim-common";
          }
          {
            name = "heim-runtime";
            packageId = "heim-runtime";
          }
        ];
        features = {
          "runtime-polyfill" = [ "heim-runtime/runtime-polyfill" ];
        };
        resolvedDefaultFeatures = [ "runtime-polyfill" ];
      };
      "heim-virt" = rec {
        crateName = "heim-virt";
        version = "0.0.10";
        edition = "2018";
        sha256 = "0mv4m4dizd30asm6sr78sbfs6l12ab738y8rk9jmcn5s45ksrdp4";
        authors = [
          "svartalf <self@svartalf.info>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "heim-common";
            packageId = "heim-common";
          }
          {
            name = "heim-runtime";
            packageId = "heim-runtime";
          }
          {
            name = "raw-cpuid";
            packageId = "raw-cpuid";
            target = { target, features }: ((target."os" == "linux") && ((target."arch" == "x86") || (target."arch" == "x86_64")));
          }
        ];
        features = {
          "runtime-polyfill" = [ "heim-runtime/runtime-polyfill" ];
        };
        resolvedDefaultFeatures = [ "runtime-polyfill" ];
      };
      "hermit-abi" = rec {
        crateName = "hermit-abi";
        version = "0.1.6";
        edition = "2015";
        sha256 = "0wippj5nkw9q5yyyaqpdrgdhag3l3nbrwja7149cwn7ii1nnbwpg";
        authors = [
          "Stefan Lankes"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins/rustc-dep-of-std" "libc/rustc-dep-of-std" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "hex 0.3.2" = rec {
        crateName = "hex";
        version = "0.3.2";
        edition = "2015";
        sha256 = "0xsdcjiik5j750j67zk42qdnmm4ahirk3gmkmcqgq7qls2jjcl40";
        authors = [
          "KokaKiwi <kokakiwi@kokakiwi.net>"
        ];
        features = {
        };
      };
      "hex 0.4.0" = rec {
        crateName = "hex";
        version = "0.4.0";
        edition = "2018";
        sha256 = "0glsfrx2pxfsf6ivxj7vfrvd7g78j4z47ssgm5idm8p376z3jfq2";
        authors = [
          "KokaKiwi <kokakiwi@kokakiwi.net>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "htmlescape" = rec {
        crateName = "htmlescape";
        version = "0.3.1";
        edition = "2015";
        sha256 = "0qria8paf19qy5sgzzk3iiii9fp2j7spbhqf0zjxwrg7v9c500p9";
        authors = [
          "Viktor Dahl <pazaconyoman@gmail.com>"
        ];
        
      };
      "http 0.1.21" = rec {
        crateName = "http";
        version = "0.1.21";
        edition = "2015";
        sha256 = "1w21xnhd8f48zvbmm5njg2y1nb4p08ppn8r0cs2xi5d8wgnzbk6n";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Carl Lerche <me@carllerche.com>"
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.4.12";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "itoa";
            packageId = "itoa";
          }
        ];
        
      };
      "http 0.2.0" = rec {
        crateName = "http";
        version = "0.2.0";
        edition = "2018";
        sha256 = "0sqm60mi6ha9x9cfx393qqg5s6hjg8dadfakdw15jd290rzwq25p";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Carl Lerche <me@carllerche.com>"
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.5.4";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "itoa";
            packageId = "itoa";
          }
        ];
        
      };
      "humantime" = rec {
        crateName = "humantime";
        version = "1.3.0";
        edition = "2015";
        sha256 = "0krwgbf35pd46xvkqg14j070vircsndabahahlv3rwhflpy4q06z";
        authors = [
          "Paul Colomiets <paul@colomiets.name>"
        ];
        dependencies = [
          {
            name = "quick-error";
            packageId = "quick-error";
          }
        ];
        
      };
      "ical" = rec {
        crateName = "ical";
        version = "0.6.0";
        edition = "2015";
        sha256 = "1h0q3wh0hcqahd3rp5bv502c0kbka568apk5ry9gn7whkmx37sf0";
        authors = [
          "Peltoche <dev@halium.fr>"
        ];
        dependencies = [
          {
            name = "failure";
            packageId = "failure";
          }
        ];
        features = {
          "default" = [ "vcard" "ical" ];
          "ical" = [ "property" ];
          "property" = [ "line" ];
          "vcard" = [ "property" ];
        };
        resolvedDefaultFeatures = [ "default" "ical" "line" "property" "vcard" ];
      };
      "ichwh" = rec {
        crateName = "ichwh";
        version = "0.3.1";
        edition = "2018";
        sha256 = "1vcj2q175bpr7ifr8c4b847f88il9wzrg2vgc0dnhd6ayccsyymk";
        authors = [
          "Alex van de Sandt <alex@avandesa.dev>"
        ];
        dependencies = [
          {
            name = "async-std";
            packageId = "async-std";
            features = [ "attributes" ];
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "futures";
            packageId = "futures 0.3.3";
            usesDefaultFeatures = false;
            features = [ "std" "async-await" ];
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];
        
      };
      "idna" = rec {
        crateName = "idna";
        version = "0.2.0";
        edition = "2015";
        sha256 = "1a9066imqpdrm1aavfasdyb1zahqaz8jmdcwdawvb1pf60y6gqh2";
        authors = [
          "The rust-url developers"
        ];
        dependencies = [
          {
            name = "matches";
            packageId = "matches";
          }
          {
            name = "unicode-bidi";
            packageId = "unicode-bidi";
          }
          {
            name = "unicode-normalization";
            packageId = "unicode-normalization";
          }
        ];
        
      };
      "image" = rec {
        crateName = "image";
        version = "0.22.4";
        edition = "2015";
        sha256 = "12kn8w5vyh9imx4shwf19m18hmbc4c75xplszg3fa0jiwg21kjsk";
        authors = [
          "ccgn"
          "bvssvni <bvssvni@gmail.com>"
          "nwin"
          "TyOverby <ty@pre-alpha.com>"
          "HeroicKatora"
          "Calum"
          "CensoredUsername <cens.username@gmail.com>"
          "fintelia <fintelia@gmail.com>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "jpeg-decoder";
            packageId = "jpeg-decoder";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "num-iter";
            packageId = "num-iter";
          }
          {
            name = "num-rational";
            packageId = "num-rational";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
          }
          {
            name = "png";
            packageId = "png";
            optional = true;
          }
        ];
        features = {
          "default" = [ "gif_codec" "jpeg" "ico" "png_codec" "pnm" "tga" "tiff" "webp" "bmp" "hdr" "dxt" "jpeg_rayon" ];
          "gif_codec" = [ "gif" ];
          "hdr" = [ "scoped_threadpool" ];
          "ico" = [ "bmp" "png_codec" ];
          "jpeg" = [ "jpeg-decoder" ];
          "jpeg_rayon" = [ "jpeg-decoder/rayon" ];
          "png_codec" = [ "png" ];
        };
        resolvedDefaultFeatures = [ "jpeg" "jpeg-decoder" "png" "png_codec" ];
      };
      "indexmap" = rec {
        crateName = "indexmap";
        version = "1.3.2";
        edition = "2015";
        sha256 = "14i2gmq9pwaafvlxmsc12j6539hjgqk4j4jz40fz763vbcn08vq7";
        authors = [
          "bluss"
          "Josh Stone <cuviper@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde 1.0.105";
            optional = true;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.0";
          }
        ];
        features = {
          "serde-1" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "serde" "serde-1" ];
      };
      "inflate" = rec {
        crateName = "inflate";
        version = "0.4.5";
        edition = "2015";
        sha256 = "1zxjdn8iwa0ssxrnjmywm3r1v284wryvzrf8vkc7nyf5ijbjknqw";
        authors = [
          "nwin <nwin@users.noreply.github.com>"
        ];
        dependencies = [
          {
            name = "adler32";
            packageId = "adler32";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "inventory" = rec {
        crateName = "inventory";
        version = "0.1.5";
        edition = "2018";
        sha256 = "09vs5hdxn19n55806lj1g147wazjjyffy2fc19acplhv12b85y9b";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "ctor";
            packageId = "ctor";
          }
          {
            name = "ghost";
            packageId = "ghost";
          }
          {
            name = "inventory-impl";
            packageId = "inventory-impl";
          }
        ];
        
      };
      "inventory-impl" = rec {
        crateName = "inventory-impl";
        version = "0.1.5";
        edition = "2018";
        sha256 = "0x02bhwri91h3yysa4m2s06npyxjf1mi6fcsdaiywa7yb9bk13ha";
        procMacro = true;
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];
        
      };
      "iovec" = rec {
        crateName = "iovec";
        version = "0.1.4";
        edition = "2015";
        sha256 = "0ph73qygwx8i0mblrf110cj59l00gkmsgrpzz1rm85syz5pymcxj";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
        ];
        
      };
      "isahc" = rec {
        crateName = "isahc";
        version = "0.7.6";
        edition = "2018";
        sha256 = "1yy3v4r2i4hf0a436676cw4b2bnkb510gxvrldcswlrfy4kp1dqp";
        authors = [
          "Stephen M. Coakley <me@stephencoakley.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.4.12";
          }
          {
            name = "crossbeam-channel";
            packageId = "crossbeam-channel 0.3.9";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.6.6";
          }
          {
            name = "curl";
            packageId = "curl";
          }
          {
            name = "curl-sys";
            packageId = "curl-sys";
          }
          {
            name = "futures-io-preview";
            packageId = "futures-io-preview";
          }
          {
            name = "futures-util-preview";
            packageId = "futures-util-preview";
            features = [ "io" ];
          }
          {
            name = "http";
            packageId = "http 0.1.21";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "sluice";
            packageId = "sluice";
          }
        ];
        features = {
          "cookies" = [ "chrono" ];
          "default" = [ "cookies" "http2" "static-curl" ];
          "http2" = [ "curl/http2" ];
          "json" = [ "serde" "serde_json" ];
          "psl" = [ "parking_lot" "publicsuffix" ];
          "static-curl" = [ "curl/static-curl" ];
        };
        resolvedDefaultFeatures = [ "http2" ];
      };
      "isatty" = rec {
        crateName = "isatty";
        version = "0.1.9";
        edition = "2015";
        sha256 = "1p2yx591kwz2b3f2bv7al9hamhn052zmz9jd969rdv4kzj0q46p3";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "consoleapi" "fileapi" "minwinbase" "minwindef" "processenv" "winbase" "winnt" ];
          }
        ];
        
      };
      "itertools 0.7.11" = rec {
        crateName = "itertools";
        version = "0.7.11";
        edition = "2015";
        sha256 = "03cpsj26xmyamcalclqzr1i700vwx8hnbgxbpjvs354f8mnr8iqd";
        authors = [
          "bluss"
        ];
        dependencies = [
          {
            name = "either";
            packageId = "either";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
      "itertools 0.8.2" = rec {
        crateName = "itertools";
        version = "0.8.2";
        edition = "2015";
        sha256 = "1154j48aw913v5jnyhpxialxhdn2sfpl4d7bwididyb1r05jsspm";
        authors = [
          "bluss"
        ];
        dependencies = [
          {
            name = "either";
            packageId = "either";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
      "itertools 0.9.0" = rec {
        crateName = "itertools";
        version = "0.9.0";
        edition = "2018";
        sha256 = "0jyml7ygr7kijkcjdl3fk5f34y5h5jsavclim7l13zjiavw1hkr8";
        authors = [
          "bluss"
        ];
        dependencies = [
          {
            name = "either";
            packageId = "either";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
      "itoa" = rec {
        crateName = "itoa";
        version = "0.4.5";
        edition = "2015";
        sha256 = "13nxqrfnh83a7x5rw4wq2ilp8nxvwy74dxzysdg59dbxqk0agdxq";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "jobserver" = rec {
        crateName = "jobserver";
        version = "0.1.21";
        edition = "2018";
        sha256 = "1wm7h76xf7a4d0q6583agbsyl2s46vndrlnr015zffclpcz32waw";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
        ];
        
      };
      "jpeg-decoder" = rec {
        crateName = "jpeg-decoder";
        version = "0.1.18";
        edition = "2015";
        sha256 = "0lc428qgffh2a1agkq0p26mvf9rjaiswpywy5883j99mqypg0mh2";
        authors = [
          "Ulf Nilsson <kaksmet@gmail.com>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
        ];
        features = {
          "default" = [ "rayon" ];
        };
      };
      "js-sys" = rec {
        crateName = "js-sys";
        version = "0.3.35";
        edition = "2018";
        sha256 = "1ybwazllkbif71i195dadgrsw64k6l04ggk5yimiy5c2cb1wg2bq";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
          }
        ];
        
      };
      "kernel32-sys" = rec {
        crateName = "kernel32-sys";
        version = "0.2.2";
        edition = "2015";
        sha256 = "1389av0601a9yz8dvx5zha9vmkd6ik7ax0idpb032d28555n41vm";
        libName = "kernel32";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
          }
        ];
        buildDependencies = [
          {
            name = "winapi-build";
            packageId = "winapi-build";
          }
        ];
        
      };
      "kv-log-macro" = rec {
        crateName = "kv-log-macro";
        version = "1.0.4";
        edition = "2018";
        sha256 = "1fxar5mvl8gf19phy86b915n2yhs11z23p7bwr9afc6mcpsdjm4c";
        authors = [
          "Yoshua Wuyts <yoshuawuyts@gmail.com>"
        ];
        dependencies = [
          {
            name = "log";
            packageId = "log";
            features = [ "kv_unstable" ];
          }
        ];
        
      };
      "language-reporting" = rec {
        crateName = "language-reporting";
        version = "0.4.0";
        edition = "2018";
        sha256 = "12r9mrbfyd8qb0x1v2vky9x157sis5x456fj2y383kfcwvhq8sjf";
        authors = [
          "Yehuda Katz <wycats@gmail.com>"
          "Brendan Zabarauskas <bjzaba@yahoo.com.au>"
        ];
        dependencies = [
          {
            name = "derive-new";
            packageId = "derive-new";
          }
          {
            name = "itertools";
            packageId = "itertools 0.7.11";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "render-tree";
            packageId = "render-tree";
          }
          {
            name = "serde";
            packageId = "serde 1.0.105";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "termcolor";
            packageId = "termcolor";
          }
        ];
        
      };
      "lazy_static 0.2.11" = rec {
        crateName = "lazy_static";
        version = "0.2.11";
        edition = "2015";
        sha256 = "0wxy8vak7jsx6r8gx475pjqpx11p2bfq4wvw6idmqi31mp3k7w3n";
        authors = [
          "Marvin Löbel <loebel.marvin@gmail.com>"
        ];
        features = {
          "compiletest" = [ "compiletest_rs" ];
          "spin_no_std" = [ "nightly" "spin" ];
        };
      };
      "lazy_static 1.4.0" = rec {
        crateName = "lazy_static";
        version = "1.4.0";
        edition = "2015";
        sha256 = "0in6ikhw8mgl33wjv6q6xfrb5b9jr16q8ygjy803fay4zcisvaz2";
        authors = [
          "Marvin Löbel <loebel.marvin@gmail.com>"
        ];
        features = {
          "spin_no_std" = [ "spin" ];
        };
      };
      "lazycell" = rec {
        crateName = "lazycell";
        version = "1.2.1";
        edition = "2015";
        sha256 = "0gvqycmpv7parc98i6y64ai7rvxrn1947z2a6maa02g4kvxdd55j";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Nikita Pekin <contact@nikitapek.in>"
        ];
        features = {
          "nightly-testing" = [ "clippy" "nightly" ];
        };
      };
      "lexical-core" = rec {
        crateName = "lexical-core";
        version = "0.6.2";
        edition = "2015";
        sha256 = "146qxf9i5wfj5rla6pjlwj6l5b4ff31vib277fvlzlsxq2jkl16p";
        authors = [
          "Alex Huszagh <ahuszagh@gmail.com>"
        ];
        dependencies = [
          {
            name = "arrayvec";
            packageId = "arrayvec 0.4.12";
            optional = true;
            features = [ "array-sizes-33-128" ];
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "ryu";
            packageId = "ryu";
            optional = true;
          }
          {
            name = "static_assertions";
            packageId = "static_assertions";
          }
        ];
        buildDependencies = [
          {
            name = "rustc_version";
            packageId = "rustc_version";
          }
        ];
        features = {
          "correct" = [ "arrayvec" "table" ];
          "default" = [ "correct" "ryu" "std" ];
          "grisu3" = [ "dtoa" ];
        };
        resolvedDefaultFeatures = [ "arrayvec" "correct" "default" "ryu" "std" "table" ];
      };
      "libc" = rec {
        crateName = "libc";
        version = "0.2.66";
        edition = "2015";
        sha256 = "0n0mwry21fxfwc063k33mvxk8xj7ia5ar8m42c9ymbam2ksb25fm";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "std" ];
          "rustc-dep-of-std" = [ "align" "rustc-std-workspace-core" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "extra_traits" "std" "use_std" ];
      };
      "libgit2-sys" = rec {
        crateName = "libgit2-sys";
        version = "0.12.0+0.99.0";
        edition = "2018";
        sha256 = "0v13bggb7vfy7iihn8apgy72z98by1n8hl0mbwznaywyqcdg9pq5";
        libName = "libgit2_sys";
        libPath = "lib.rs";
        authors = [
          "Josh Triplett <josh@joshtriplett.org>"
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "libz-sys";
            packageId = "libz-sys";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
            features = [ "parallel" ];
          }
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
        ];
        features = {
          "https" = [ "openssl-sys" ];
          "ssh" = [ "libssh2-sys" ];
        };
      };
      "libnghttp2-sys" = rec {
        crateName = "libnghttp2-sys";
        version = "0.1.2";
        edition = "2015";
        sha256 = "0qr4lyh7righx9n22c7amlcpk906rn1jnb2zd6gdfpa3yi24s982";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];
        
      };
      "libsqlite3-sys" = rec {
        crateName = "libsqlite3-sys";
        version = "0.17.1";
        edition = "2018";
        sha256 = "0zd7skbxl4adj283i55ikw291bp2v7jp9j9bd0gqv3hrc71vhvi6";
        authors = [
          "John Gallagher <jgallagher@bignerdranch.com>"
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
            optional = true;
          }
          {
            name = "pkg-config";
            packageId = "pkg-config";
            optional = true;
          }
          {
            name = "vcpkg";
            packageId = "vcpkg";
            optional = true;
            target = {target, features}: (target."env" == "msvc");
          }
        ];
        features = {
          "buildtime_bindgen" = [ "bindgen" "pkg-config" "vcpkg" ];
          "bundled" = [ "cc" ];
          "bundled-windows" = [ "cc" ];
          "default" = [ "min_sqlite_version_3_6_8" ];
          "min_sqlite_version_3_6_23" = [ "pkg-config" "vcpkg" ];
          "min_sqlite_version_3_6_8" = [ "pkg-config" "vcpkg" ];
          "min_sqlite_version_3_7_16" = [ "pkg-config" "vcpkg" ];
          "min_sqlite_version_3_7_7" = [ "pkg-config" "vcpkg" ];
          "session" = [ "preupdate_hook" ];
        };
        resolvedDefaultFeatures = [ "bundled" "cc" "default" "min_sqlite_version_3_6_8" "min_sqlite_version_3_7_7" "pkg-config" "vcpkg" ];
      };
      "libz-sys" = rec {
        crateName = "libz-sys";
        version = "1.0.25";
        edition = "2015";
        sha256 = "1gjycyl2283525abks98bhxa4r259m617xfm5z52p3p3c8ry9d9f";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
          {
            name = "vcpkg";
            packageId = "vcpkg";
            target = {target, features}: (target."env" == "msvc");
          }
        ];
        features = {
        };
      };
      "line-wrap" = rec {
        crateName = "line-wrap";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1ffa2whkyh9mwvdlpk6v8pjkg8p8mlzyjfymq5adll9a18sl80zk";
        authors = [
          "Marshall Pierce <marshall@mpierce.org>"
        ];
        dependencies = [
          {
            name = "safemem";
            packageId = "safemem";
          }
        ];
        
      };
      "linked-hash-map 0.3.0" = rec {
        crateName = "linked-hash-map";
        version = "0.3.0";
        edition = "2015";
        sha256 = "1kaf95grvfqchxn8pl0854g8ab0fzl56217hndhhhz5qqm2j09kd";
        authors = [
          "Stepan Koltsov <stepan.koltsov@gmail.com>"
          "Andrew Paseltiner <apaseltiner@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde 0.8.23";
            optional = true;
          }
          {
            name = "serde_test";
            packageId = "serde_test";
            optional = true;
          }
        ];
        features = {
          "serde_impl" = [ "serde" "serde_test" ];
        };
        resolvedDefaultFeatures = [ "serde" "serde_impl" "serde_test" ];
      };
      "linked-hash-map 0.5.2" = rec {
        crateName = "linked-hash-map";
        version = "0.5.2";
        edition = "2015";
        sha256 = "10qgbvh00q36ql0jh00rxh2jlq6qvl11n6mig0cvkpf4xf5bd4df";
        authors = [
          "Stepan Koltsov <stepan.koltsov@gmail.com>"
          "Andrew Paseltiner <apaseltiner@gmail.com>"
        ];
        features = {
          "heapsize_impl" = [ "heapsize" ];
          "serde_impl" = [ "serde" "serde_test" ];
        };
      };
      "lock_api" = rec {
        crateName = "lock_api";
        version = "0.3.3";
        edition = "2018";
        sha256 = "0yzlz7f5xl5sm129dq8jqsrcrkyv7jjnqwd4zr4ijsdlxjaxxckr";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "scopeguard";
            packageId = "scopeguard";
            usesDefaultFeatures = false;
          }
        ];
        features = {
        };
      };
      "log" = rec {
        crateName = "log";
        version = "0.4.8";
        edition = "2015";
        sha256 = "1xz18ixccl5c6np4linv3ypc7hpmmgpc5zzd2ymp2ssfx0mhbdhl";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
        ];
        features = {
          "kv_unstable_sval" = [ "kv_unstable" "sval/fmt" ];
        };
        resolvedDefaultFeatures = [ "kv_unstable" "std" ];
      };
      "lru-cache" = rec {
        crateName = "lru-cache";
        version = "0.1.2";
        edition = "2015";
        sha256 = "071viv6g2p3akwqmfb3c8vsycs5n7kr17b70l7la071jv0d4zqii";
        authors = [
          "Stepan Koltsov <stepan.koltsov@gmail.com>"
        ];
        dependencies = [
          {
            name = "linked-hash-map";
            packageId = "linked-hash-map 0.5.2";
          }
        ];
        features = {
          "heapsize_impl" = [ "heapsize" "linked-hash-map/heapsize_impl" ];
        };
      };
      "macaddr" = rec {
        crateName = "macaddr";
        version = "1.0.1";
        edition = "2018";
        sha256 = "1n5jxn79krlql810c4w3hdkvyqc01141dc5y6fr9sxff2yy0pvms";
        authors = [
          "svartalf <self@svartalf.info>"
        ];
        features = {
          "default" = [ "std" ];
          "serde_std" = [ "std" "serde/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "mach 0.2.3" = rec {
        crateName = "mach";
        version = "0.2.3";
        edition = "2015";
        sha256 = "1qdhs16cl1j3w7kvy6ak7h8lbyqmr6i3i15qfzpnv9gyrn3j9pc6";
        authors = [
          "Nick Fitzgerald <fitzgen@gmail.com>"
          "David Cuddeback <david.cuddeback@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "use_std" "deprecated" ];
          "use_std" = [ "libc/use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "deprecated" "use_std" ];
      };
      "mach 0.3.2" = rec {
        crateName = "mach";
        version = "0.3.2";
        edition = "2015";
        sha256 = "1yksa8lwzqh150gr4417rls1wk20asy9vhp8kq5g9n7z58xyh8xq";
        authors = [
          "Nick Fitzgerald <fitzgen@gmail.com>"
          "David Cuddeback <david.cuddeback@gmail.com>"
          "Gonzalo Brito Gadeschi <gonzalobg88@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
        ];
        features = {
          "rustc-dep-of-std" = [ "rustc-std-workspace-core" "libc/rustc-dep-of-std" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "malloc_buf" = rec {
        crateName = "malloc_buf";
        version = "0.0.6";
        edition = "2015";
        sha256 = "1jqr77j89pwszv51fmnknzvd53i1nkmcr8rjrvcxhm4dx1zr1fv2";
        authors = [
          "Steven Sheldon"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        
      };
      "matches" = rec {
        crateName = "matches";
        version = "0.1.8";
        edition = "2015";
        sha256 = "020axl4q7rk9vz90phs7f8jas4imxal9y9kxl4z4v7a6719mrz3z";
        libPath = "lib.rs";
        authors = [
          "Simon Sapin <simon.sapin@exyr.org>"
        ];
        
      };
      "md5" = rec {
        crateName = "md5";
        version = "0.6.1";
        edition = "2015";
        sha256 = "17b2xm4h4cvxsdjsf3kdrzqv2za60kak961xzi5kmw6g6djcssvy";
        authors = [
          "Ivan Ukhov <ivan.ukhov@gmail.com>"
          "Kamal Ahmad <shibe@openmailbox.org>"
          "Konstantin Stepanov <milezv@gmail.com>"
          "Lukas Kalbertodt <lukas.kalbertodt@gmail.com>"
          "Nathan Musoke <nathan.musoke@gmail.com>"
          "Tony Arcieri <bascule@gmail.com>"
          "Wim de With <register@dewith.io>"
          "Yosef Dinerstein <yosefdi@gmail.com>"
        ];
        
      };
      "memchr" = rec {
        crateName = "memchr";
        version = "2.3.3";
        edition = "2015";
        sha256 = "0074pvsfl938ndl5js14ibc7i9q0k3zp390z843w8nlyv4bxha1p";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
          "bluss"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "libc" "std" "use_std" ];
      };
      "memoffset" = rec {
        crateName = "memoffset";
        version = "0.5.3";
        edition = "2015";
        sha256 = "1fblqzc25hfaym8m0pj112s66pqq87avvaqm5hp5rskib2w9w63m";
        authors = [
          "Gilad Naaman <gilad.naaman@gmail.com>"
        ];
        buildDependencies = [
          {
            name = "rustc_version";
            packageId = "rustc_version";
          }
        ];
        
      };
      "meval" = rec {
        crateName = "meval";
        version = "0.2.0";
        edition = "2015";
        sha256 = "1ncj0fv9q3b4his7g947fmgkskpfly6dsniw0g6mg38wcnjrd57p";
        authors = [
          "Norbert Pozar <bertapozar@gmail.com>"
        ];
        dependencies = [
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "nom";
            packageId = "nom 1.2.4";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "mime" = rec {
        crateName = "mime";
        version = "0.3.16";
        edition = "2015";
        sha256 = "13dcm9lh01hdwfjcg74ppljyjfj1c6w3a3cwkhxf0w8wa37cfq1a";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        
      };
      "mime_guess" = rec {
        crateName = "mime_guess";
        version = "2.0.1";
        edition = "2015";
        sha256 = "16c5ssgali30db6jh1cndy77dd1qgcykhshiyfyjvxxf94wx03hs";
        authors = [
          "Austin Bonander <austin.bonander@gmail.com>"
        ];
        dependencies = [
          {
            name = "mime";
            packageId = "mime";
          }
          {
            name = "unicase";
            packageId = "unicase";
          }
        ];
        buildDependencies = [
          {
            name = "unicase";
            packageId = "unicase";
          }
        ];
        features = {
          "default" = [ "rev-mappings" ];
        };
        resolvedDefaultFeatures = [ "default" "rev-mappings" ];
      };
      "miniz_oxide" = rec {
        crateName = "miniz_oxide";
        version = "0.3.6";
        edition = "2018";
        sha256 = "198n4hfpq0qcxf275l6fpzh7b9cl7ck2xs6pjgpds74bazv9yrxa";
        authors = [
          "Frommi <daniil.liferenko@gmail.com>"
          "oyvindln <oyvindln@users.noreply.github.com>"
        ];
        dependencies = [
          {
            name = "adler32";
            packageId = "adler32";
          }
        ];
        
      };
      "mio" = rec {
        crateName = "mio";
        version = "0.6.21";
        edition = "2015";
        sha256 = "13q02a7cwc140aygf8amadpzpl5lyj3p2r4wnvgydfpnphifqb9h";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "fuchsia-zircon";
            packageId = "fuchsia-zircon";
            target = { target, features }: (target."os" == "fuchsia");
          }
          {
            name = "fuchsia-zircon-sys";
            packageId = "fuchsia-zircon-sys";
            target = { target, features }: (target."os" == "fuchsia");
          }
          {
            name = "iovec";
            packageId = "iovec";
          }
          {
            name = "kernel32-sys";
            packageId = "kernel32-sys";
            target = { target, features }: target."windows";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "miow";
            packageId = "miow";
            target = { target, features }: target."windows";
          }
          {
            name = "net2";
            packageId = "net2";
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
            target = { target, features }: target."windows";
          }
        ];
        features = {
          "default" = [ "with-deprecated" ];
        };
        resolvedDefaultFeatures = [ "default" "with-deprecated" ];
      };
      "mio-uds" = rec {
        crateName = "mio-uds";
        version = "0.6.7";
        edition = "2015";
        sha256 = "09gimdbnj7b9yca99pk8lxh9jhl79msj795c8fxi2sqr9slmfqln";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "iovec";
            packageId = "iovec";
            target = { target, features }: target."unix";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "mio";
            packageId = "mio";
            target = { target, features }: target."unix";
          }
        ];
        
      };
      "miow" = rec {
        crateName = "miow";
        version = "0.2.1";
        edition = "2015";
        sha256 = "06g9b8sqlh5gxakwqq4rrib07afwanfnxgxajrldwcgk3hxjy7wc";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "kernel32-sys";
            packageId = "kernel32-sys";
          }
          {
            name = "net2";
            packageId = "net2";
            usesDefaultFeatures = false;
          }
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
          }
          {
            name = "ws2_32-sys";
            packageId = "ws2_32-sys";
          }
        ];
        
      };
      "native-tls" = rec {
        crateName = "native-tls";
        version = "0.2.4";
        edition = "2015";
        sha256 = "0bcbqm8gpm5azlp8rwznhrfk3ngikr041fj883lmw3g9dz08h39b";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
          {
            name = "log";
            packageId = "log";
            target = { target, features }: (!((target."os" == "windows") || (target."os" == "macos") || (target."os" == "ios")));
          }
          {
            name = "openssl";
            packageId = "openssl";
            target = { target, features }: (!((target."os" == "windows") || (target."os" == "macos") || (target."os" == "ios")));
          }
          {
            name = "openssl-probe";
            packageId = "openssl-probe";
            target = { target, features }: (!((target."os" == "windows") || (target."os" == "macos") || (target."os" == "ios")));
          }
          {
            name = "openssl-sys";
            packageId = "openssl-sys";
            target = { target, features }: (!((target."os" == "windows") || (target."os" == "macos") || (target."os" == "ios")));
          }
          {
            name = "schannel";
            packageId = "schannel";
            target = { target, features }: (target."os" == "windows");
          }
          {
            name = "security-framework";
            packageId = "security-framework";
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
          {
            name = "security-framework-sys";
            packageId = "security-framework-sys";
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
          {
            name = "tempfile";
            packageId = "tempfile";
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
        ];
        features = {
          "vendored" = [ "openssl/vendored" ];
        };
      };
      "natural 0.3.0" = rec {
        crateName = "natural";
        version = "0.3.0";
        edition = "2015";
        sha256 = "19hh23z4w3r77fsqmj5sw3hgqkdja9cnsj3s1qndlm25ddyrsrgx";
        authors = [
          "chris@cjqed.com"
          "curlywurlycraig@gmail.com"
        ];
        
      };
      "natural 0.5.0" = rec {
        crateName = "natural";
        version = "0.5.0";
        edition = "2015";
        sha256 = "0rqqgh4ik6hzmxs0fhd10g5jdba16h6i9q2m6pg9qrfwim7v9rk5";
        authors = [
          "chris@cjqed.com"
          "curlywurlycraig@gmail.com"
          "travissturzl@gmail.com"
        ];
        dependencies = [
          {
            name = "rust-stemmers";
            packageId = "rust-stemmers";
          }
        ];
        features = {
          "serde_support" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "neso" = rec {
        crateName = "neso";
        version = "0.5.0";
        edition = "2018";
        sha256 = "1j78iyrv3r46n7jdayvgwarpq9iaikc7yhqqvdii226bzgg32g3b";type = [ "cdylib" "lib" ];
        authors = [
          "Jeffrey Xiao <jeffrey.xiao1998@gmail.com>"
        ];
        dependencies = [
          {
            name = "bincode";
            packageId = "bincode";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "log";
            packageId = "log";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "serde";
            packageId = "serde 1.0.105";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
            target = { target, features }: (target."arch" == "wasm32");
          }
        ];
        
      };
      "net2" = rec {
        crateName = "net2";
        version = "0.2.33";
        edition = "2015";
        sha256 = "126g3fgfxp06zimc1l9iyxnn9cif1hjsg7sd81nlls5nnyghsma2";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: ((target."os" == "redox") || target."unix");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "handleapi" "winsock2" "ws2def" "ws2ipdef" "ws2tcpip" ];
          }
        ];
        features = {
          "default" = [ "duration" ];
        };
        resolvedDefaultFeatures = [ "default" "duration" ];
      };
      "nix 0.14.1" = rec {
        crateName = "nix";
        version = "0.14.1";
        edition = "2015";
        sha256 = "1kmxdlmvnmq8cfpmr3g6wk37rwi2ybdvp1z6z3831m1p23p2nwkc";
        authors = [
          "The nix-rust Project Developers"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "void";
            packageId = "void";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
            target = {target, features}: (target."os" == "dragonfly");
          }
        ];
        
      };
      "nix 0.15.0" = rec {
        crateName = "nix";
        version = "0.15.0";
        edition = "2015";
        sha256 = "0aa2l7wg9pzx24ks4p97gdy09a4hhs1sr9drxnm75v906d7hnbiv";
        authors = [
          "The nix-rust Project Developers"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
            features = [ "extra_traits" ];
          }
          {
            name = "void";
            packageId = "void";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
            target = {target, features}: (target."os" == "dragonfly");
          }
        ];
        
      };
      "nix 0.17.0" = rec {
        crateName = "nix";
        version = "0.17.0";
        edition = "2015";
        sha256 = "0qvk09kib3jpvpbaps0682nav20ibql61pf1s2h8jx9v5igpir2h";
        authors = [
          "The nix-rust Project Developers"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
            features = [ "extra_traits" ];
          }
          {
            name = "void";
            packageId = "void";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
            target = {target, features}: (target."os" == "dragonfly");
          }
        ];
        
      };
      "nodrop" = rec {
        crateName = "nodrop";
        version = "0.1.14";
        edition = "2015";
        sha256 = "1fz1v9r8ijacf0hlq0pdv5l9mz8vgqg1snmhvpjmi9aci1b4mvvj";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "std" ];
          "use_union" = [ "nodrop-union" ];
        };
      };
      "nom 1.2.4" = rec {
        crateName = "nom";
        version = "1.2.4";
        edition = "2015";
        sha256 = "1kjh42w67z1hh1dw3jrilgqrf54jk2xcvhw4rcdm4wclzmbc5f55";
        authors = [
          "contact@geoffroycouprie.com"
        ];
        features = {
          "default" = [ "stream" ];
          "regexp" = [ "regex" ];
          "regexp_macros" = [ "regexp" "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "stream" ];
      };
      "nom 4.2.3" = rec {
        crateName = "nom";
        version = "4.2.3";
        edition = "2015";
        sha256 = "1mkvby8b4m61p4g1px0pwr58yfkphyp1jcfbp4qfp7l6iqdaklia";
        authors = [
          "contact@geoffroycouprie.com"
        ];
        dependencies = [
          {
            name = "memchr";
            packageId = "memchr";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check 0.1.5";
          }
        ];
        features = {
          "default" = [ "std" ];
          "regexp" = [ "regex" ];
          "regexp_macros" = [ "regexp" "lazy_static" ];
          "std" = [ "alloc" "memchr/use_std" ];
          "verbose-errors" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "nom 5.1.1" = rec {
        crateName = "nom";
        version = "5.1.1";
        edition = "2018";
        sha256 = "1mma0q5bzgzbyyjc2w8z0wvff08yaaf28lhmnsj2slwpv99i4iqb";
        authors = [
          "contact@geoffroycouprie.com"
        ];
        dependencies = [
          {
            name = "lexical-core";
            packageId = "lexical-core";
            optional = true;
          }
          {
            name = "memchr";
            packageId = "memchr";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check 0.9.1";
          }
        ];
        features = {
          "default" = [ "std" "lexical" ];
          "lexical" = [ "lexical-core" ];
          "regexp" = [ "regex" ];
          "regexp_macros" = [ "regexp" "lazy_static" ];
          "std" = [ "alloc" "memchr/use_std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "lexical" "lexical-core" "std" ];
      };
      "nom-tracable" = rec {
        crateName = "nom-tracable";
        version = "0.4.1";
        edition = "2018";
        sha256 = "188dcg7v917ngyzbvfg00yi5c6xvg873ri90lx1bijgl7gpg36jf";
        authors = [
          "dalance <dalance@gmail.com>"
        ];
        dependencies = [
          {
            name = "nom";
            packageId = "nom 5.1.1";
          }
          {
            name = "nom-tracable-macros";
            packageId = "nom-tracable-macros";
          }
          {
            name = "nom_locate";
            packageId = "nom_locate";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" "trace" ];
      };
      "nom-tracable-macros" = rec {
        crateName = "nom-tracable-macros";
        version = "0.4.1";
        edition = "2018";
        sha256 = "1yyzr1qpjzd6787l1f3kv8drlgbn5nqnb7jcdv9ky1r8ybwya5lc";
        procMacro = true;
        authors = [
          "dalance <dalance@gmail.com>"
        ];
        dependencies = [
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "fold" "parsing" "extra-traits" ];
          }
        ];
        
      };
      "nom_locate" = rec {
        crateName = "nom_locate";
        version = "1.0.0";
        edition = "2018";
        sha256 = "0dffw6hi1q8pgqh67ajmdf25sr7qz7l1gfp221vzr4g3v17q6cpr";
        authors = [
          "Florent FAYOLLE <florent.fayolle69@gmail.com>"
          "Christopher Durham <cad97@cad97.com>"
          "Valentin Lorentz <progval+git@progval.net>"
        ];
        dependencies = [
          {
            name = "bytecount";
            packageId = "bytecount";
          }
          {
            name = "memchr";
            packageId = "memchr";
          }
          {
            name = "nom";
            packageId = "nom 5.1.1";
          }
        ];
        features = {
          "alloc" = [ "nom/alloc" ];
          "avx-accel" = [ "bytecount/avx-accel" ];
          "default" = [ "std" ];
          "simd-accel" = [ "bytecount/simd-accel" ];
          "std" = [ "nom/std" "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "ntapi" = rec {
        crateName = "ntapi";
        version = "0.3.3";
        edition = "2018";
        sha256 = "00h6xbvvlkiln9sy34p3s19a7kw00dvvmz1hgq4brb43v4f08vpj";
        authors = [
          "MSxDOS <melcodos@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            features = [ "cfg" "evntrace" "in6addr" "inaddr" "minwinbase" "ntsecapi" "windef" "winioctl" ];
          }
        ];
        features = {
          "default" = [ "user" ];
          "impl-default" = [ "winapi/impl-default" ];
        };
        resolvedDefaultFeatures = [ "default" "user" ];
      };
      "nu" = rec {
        crateName = "nu";
        version = "0.12.0";
        edition = "2018";
        crateBin = [
          { name = "nu_plugin_core_textview"; path = "src/plugins/nu_plugin_core_textview.rs"; }
          { name = "nu_plugin_core_inc"; path = "src/plugins/nu_plugin_core_inc.rs"; }
          { name = "nu_plugin_core_ps"; path = "src/plugins/nu_plugin_core_ps.rs"; }
          { name = "nu_plugin_core_str"; path = "src/plugins/nu_plugin_core_str.rs"; }
          { name = "nu_plugin_core_sys"; path = "src/plugins/nu_plugin_core_sys.rs"; }
          { name = "nu_plugin_stable_average"; path = "src/plugins/nu_plugin_stable_average.rs"; }
          { name = "nu_plugin_stable_fetch"; path = "src/plugins/nu_plugin_stable_fetch.rs"; }
          { name = "nu_plugin_stable_binaryview"; path = "src/plugins/nu_plugin_stable_binaryview.rs"; }
          { name = "nu_plugin_stable_match"; path = "src/plugins/nu_plugin_stable_match.rs"; }
          { name = "nu_plugin_stable_post"; path = "src/plugins/nu_plugin_stable_post.rs"; }
          { name = "nu_plugin_stable_tree"; path = "src/plugins/nu_plugin_stable_tree.rs"; }
          { name = "nu"; path = "src/main.rs"; }
        ];
        src = pkgs.callPackage ./tarball-v0.12.0.nix {};
        authors = [
          "The Nu Project Contributors"
        ];
        dependencies = [
          {
            name = "clap";
            packageId = "clap";
          }
          {
            name = "crossterm";
            packageId = "crossterm";
            optional = true;
          }
          {
            name = "ctrlc";
            packageId = "ctrlc";
          }
          {
            name = "dunce";
            packageId = "dunce";
          }
          {
            name = "futures";
            packageId = "futures 0.3.3";
            features = [ "compat" "io-compat" ];
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "nu-cli";
            packageId = "nu-cli";
          }
          {
            name = "nu-errors";
            packageId = "nu-errors";
          }
          {
            name = "nu-macros";
            packageId = "nu-macros";
          }
          {
            name = "nu-parser";
            packageId = "nu-parser";
          }
          {
            name = "nu-plugin";
            packageId = "nu-plugin";
          }
          {
            name = "nu-protocol";
            packageId = "nu-protocol";
          }
          {
            name = "nu-source";
            packageId = "nu-source";
          }
          {
            name = "nu-value-ext";
            packageId = "nu-value-ext";
          }
          {
            name = "nu_plugin_average";
            packageId = "nu_plugin_average";
            optional = true;
          }
          {
            name = "nu_plugin_binaryview";
            packageId = "nu_plugin_binaryview";
            optional = true;
          }
          {
            name = "nu_plugin_fetch";
            packageId = "nu_plugin_fetch";
            optional = true;
          }
          {
            name = "nu_plugin_inc";
            packageId = "nu_plugin_inc";
            optional = true;
          }
          {
            name = "nu_plugin_match";
            packageId = "nu_plugin_match";
            optional = true;
          }
          {
            name = "nu_plugin_post";
            packageId = "nu_plugin_post";
            optional = true;
          }
          {
            name = "nu_plugin_ps";
            packageId = "nu_plugin_ps";
            optional = true;
          }
          {
            name = "nu_plugin_str";
            packageId = "nu_plugin_str";
            optional = true;
          }
          {
            name = "nu_plugin_sys";
            packageId = "nu_plugin_sys";
            optional = true;
          }
          {
            name = "nu_plugin_textview";
            packageId = "nu_plugin_textview";
            optional = true;
          }
          {
            name = "nu_plugin_tree";
            packageId = "nu_plugin_tree";
            optional = true;
          }
          {
            name = "onig_sys";
            packageId = "onig_sys";
            optional = true;
          }
          {
            name = "pretty_env_logger";
            packageId = "pretty_env_logger 0.4.0";
          }
          {
            name = "semver";
            packageId = "semver";
            optional = true;
          }
          {
            name = "syntect";
            packageId = "syntect";
            optional = true;
          }
          {
            name = "url";
            packageId = "url";
            optional = true;
          }
        ];
        buildDependencies = [
          {
            name = "nu-build";
            packageId = "nu-build";
          }
          {
            name = "serde";
            packageId = "serde 1.0.105";
            features = [ "derive" ];
          }
          {
            name = "toml";
            packageId = "toml 0.5.6";
          }
        ];
        devDependencies = [
          {
            name = "nu-test-support";
            packageId = "nu-test-support";
          }
          {
            name = "pretty_assertions";
            packageId = "pretty_assertions";
          }
        ];
        features = {
          "average" = [ "nu_plugin_average" ];
          "binaryview" = [ "nu_plugin_binaryview" ];
          "clipboard-cli" = [ "nu-cli/clipboard-cli" ];
          "default" = [ "sys" "ps" "textview" "inc" "str" ];
          "fetch" = [ "nu_plugin_fetch" ];
          "inc" = [ "semver" "nu_plugin_inc" ];
          "match" = [ "nu_plugin_match" ];
          "post" = [ "nu_plugin_post" ];
          "ps" = [ "nu_plugin_ps" ];
          "stable" = [ "default" "starship-prompt" "binaryview" "match" "tree" "average" "post" "fetch" "clipboard-cli" ];
          "starship-prompt" = [ "nu-cli/starship-prompt" ];
          "str" = [ "nu_plugin_str" ];
          "sys" = [ "nu_plugin_sys" ];
          "textview" = [ "crossterm" "syntect" "onig_sys" "url" "nu_plugin_textview" ];
          "trace" = [ "nu-parser/trace" ];
          "tree" = [ "nu_plugin_tree" ];
        };
        resolvedDefaultFeatures = [ "average" "binaryview" "clipboard-cli" "crossterm" "default" "fetch" "inc" "match" "nu_plugin_average" "nu_plugin_binaryview" "nu_plugin_fetch" "nu_plugin_inc" "nu_plugin_match" "nu_plugin_post" "nu_plugin_ps" "nu_plugin_str" "nu_plugin_sys" "nu_plugin_textview" "nu_plugin_tree" "onig_sys" "post" "ps" "semver" "stable" "starship-prompt" "str" "syntect" "sys" "test-bins" "textview" "trace" "tree" "url" ];
      };
      "nu-build" = rec {
        crateName = "nu-build";
        version = "0.12.0";
        edition = "2018";
        sha256 = "1wsn9qzk7hswp1p60mdwd14yx3lvymrnyag7nszkmdiz3lzri82l";
        authors = [
          "Yehuda Katz <wycats@gmail.com>"
          "Jonathan Turner <jonathan.d.turner@gmail.com>"
          "Andrés N. Robalino <andres@androbtech.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "serde";
            packageId = "serde 1.0.105";
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "toml";
            packageId = "toml 0.5.6";
          }
        ];
        
      };
      "nu-cli" = rec {
        crateName = "nu-cli";
        version = "0.12.0";
        edition = "2018";
        sha256 = "0zyc5s2ybhy934dbc57403vhgskx2420fwcq0vlvs834n3wxqvsd";
        authors = [
          "Yehuda Katz <wycats@gmail.com>"
          "Jonathan Turner <jonathan.d.turner@gmail.com>"
          "Andrés N. Robalino <andres@androbtech.com>"
        ];
        dependencies = [
          {
            name = "ansi_term";
            packageId = "ansi_term 0.12.1";
          }
          {
            name = "app_dirs";
            packageId = "app_dirs";
          }
          {
            name = "async-stream";
            packageId = "async-stream";
          }
          {
            name = "base64";
            packageId = "base64 0.12.0";
          }
          {
            name = "bigdecimal";
            packageId = "bigdecimal";
            features = [ "serde" ];
          }
          {
            name = "bson";
            packageId = "bson";
            features = [ "decimal128" ];
          }
          {
            name = "byte-unit";
            packageId = "byte-unit";
          }
          {
            name = "bytes";
            packageId = "bytes 0.5.4";
          }
          {
            name = "calamine";
            packageId = "calamine";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "chrono";
            packageId = "chrono";
            features = [ "serde" ];
          }
          {
            name = "clap";
            packageId = "clap";
          }
          {
            name = "clipboard";
            packageId = "clipboard";
            optional = true;
          }
          {
            name = "csv";
            packageId = "csv";
          }
          {
            name = "ctrlc";
            packageId = "ctrlc";
          }
          {
            name = "derive-new";
            packageId = "derive-new";
          }
          {
            name = "dirs";
            packageId = "dirs 2.0.2";
          }
          {
            name = "dunce";
            packageId = "dunce";
          }
          {
            name = "filesize";
            packageId = "filesize";
          }
          {
            name = "futures";
            packageId = "futures 0.3.3";
            features = [ "compat" "io-compat" ];
          }
          {
            name = "futures-util";
            packageId = "futures-util";
          }
          {
            name = "futures_codec";
            packageId = "futures_codec";
          }
          {
            name = "getset";
            packageId = "getset 0.1.0";
          }
          {
            name = "git2";
            packageId = "git2";
            usesDefaultFeatures = false;
          }
          {
            name = "glob";
            packageId = "glob";
          }
          {
            name = "hex";
            packageId = "hex 0.4.0";
          }
          {
            name = "htmlescape";
            packageId = "htmlescape";
          }
          {
            name = "ical";
            packageId = "ical";
          }
          {
            name = "ichwh";
            packageId = "ichwh";
          }
          {
            name = "indexmap";
            packageId = "indexmap";
            features = [ "serde-1" ];
          }
          {
            name = "itertools";
            packageId = "itertools 0.9.0";
          }
          {
            name = "language-reporting";
            packageId = "language-reporting";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "meval";
            packageId = "meval";
          }
          {
            name = "natural";
            packageId = "natural 0.5.0";
          }
          {
            name = "nom";
            packageId = "nom 5.1.1";
          }
          {
            name = "nom-tracable";
            packageId = "nom-tracable";
          }
          {
            name = "nom_locate";
            packageId = "nom_locate";
          }
          {
            name = "nu-errors";
            packageId = "nu-errors";
          }
          {
            name = "nu-macros";
            packageId = "nu-macros";
          }
          {
            name = "nu-parser";
            packageId = "nu-parser";
          }
          {
            name = "nu-plugin";
            packageId = "nu-plugin";
          }
          {
            name = "nu-protocol";
            packageId = "nu-protocol";
          }
          {
            name = "nu-source";
            packageId = "nu-source";
          }
          {
            name = "nu-test-support";
            packageId = "nu-test-support";
          }
          {
            name = "nu-value-ext";
            packageId = "nu-value-ext";
          }
          {
            name = "num-bigint";
            packageId = "num-bigint";
            features = [ "serde" ];
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "pin-utils";
            packageId = "pin-utils";
          }
          {
            name = "pretty-hex";
            packageId = "pretty-hex";
          }
          {
            name = "pretty_env_logger";
            packageId = "pretty_env_logger 0.4.0";
          }
          {
            name = "prettytable-rs";
            packageId = "prettytable-rs";
          }
          {
            name = "ptree";
            packageId = "ptree";
          }
          {
            name = "query_interface";
            packageId = "query_interface";
          }
          {
            name = "rand";
            packageId = "rand";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "roxmltree";
            packageId = "roxmltree";
          }
          {
            name = "rusqlite";
            packageId = "rusqlite";
            features = [ "bundled" "blob" ];
          }
          {
            name = "rustyline";
            packageId = "rustyline";
          }
          {
            name = "serde";
            packageId = "serde 1.0.105";
            features = [ "derive" ];
          }
          {
            name = "serde-hjson";
            packageId = "serde-hjson 0.9.1";
          }
          {
            name = "serde_bytes";
            packageId = "serde_bytes";
          }
          {
            name = "serde_ini";
            packageId = "serde_ini";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "serde_urlencoded";
            packageId = "serde_urlencoded";
          }
          {
            name = "serde_yaml";
            packageId = "serde_yaml";
          }
          {
            name = "shellexpand";
            packageId = "shellexpand 2.0.0";
          }
          {
            name = "starship";
            packageId = "starship";
            optional = true;
          }
          {
            name = "strip-ansi-escapes";
            packageId = "strip-ansi-escapes";
          }
          {
            name = "tempfile";
            packageId = "tempfile";
          }
          {
            name = "term";
            packageId = "term";
          }
          {
            name = "termcolor";
            packageId = "termcolor";
          }
          {
            name = "textwrap";
            packageId = "textwrap";
            features = [ "term_size" ];
          }
          {
            name = "toml";
            packageId = "toml 0.5.6";
          }
          {
            name = "trash";
            packageId = "trash";
          }
          {
            name = "typetag";
            packageId = "typetag";
          }
          {
            name = "umask";
            packageId = "umask";
          }
          {
            name = "unicode-xid";
            packageId = "unicode-xid";
          }
          {
            name = "users";
            packageId = "users";
            target = { target, features }: target."unix";
          }
        ];
        buildDependencies = [
          {
            name = "nu-build";
            packageId = "nu-build";
          }
        ];
        features = {
          "clipboard-cli" = [ "clipboard" ];
          "starship-prompt" = [ "starship" ];
        };
        resolvedDefaultFeatures = [ "clipboard" "clipboard-cli" "starship" "starship-prompt" ];
      };
      "nu-errors" = rec {
        crateName = "nu-errors";
        version = "0.12.0";
        edition = "2018";
        sha256 = "0093fdn1s1arl3k8p3ik0mc35cnk7bxrgg2zvx2xrkw68247az25";
        authors = [
          "Yehuda Katz <wycats@gmail.com>"
          "Jonathan Turner <jonathan.d.turner@gmail.com>"
          "Andrés N. Robalino <andres@androbtech.com>"
        ];
        dependencies = [
          {
            name = "ansi_term";
            packageId = "ansi_term 0.12.1";
          }
          {
            name = "bigdecimal";
            packageId = "bigdecimal";
            features = [ "serde" ];
          }
          {
            name = "derive-new";
            packageId = "derive-new";
          }
          {
            name = "getset";
            packageId = "getset 0.0.9";
          }
          {
            name = "language-reporting";
            packageId = "language-reporting";
          }
          {
            name = "nom";
            packageId = "nom 5.1.1";
          }
          {
            name = "nom_locate";
            packageId = "nom_locate";
          }
          {
            name = "nu-source";
            packageId = "nu-source";
          }
          {
            name = "num-bigint";
            packageId = "num-bigint";
            features = [ "serde" ];
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
          }
          {
            name = "serde";
            packageId = "serde 1.0.105";
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "serde_yaml";
            packageId = "serde_yaml";
          }
          {
            name = "toml";
            packageId = "toml 0.5.6";
          }
        ];
        buildDependencies = [
          {
            name = "nu-build";
            packageId = "nu-build";
          }
        ];
        
      };
      "nu-macros" = rec {
        crateName = "nu-macros";
        version = "0.12.0";
        edition = "2018";
        sha256 = "1y060sf8y05ic25d46aginkkw5wqbjjqx1hm9gn4iblsif53sa02";
        authors = [
          "Yehuda Katz <wycats@gmail.com>"
          "Jonathan Turner <jonathan.d.turner@gmail.com>"
          "Andrés N. Robalino <andres@androbtech.com>"
        ];
        dependencies = [
          {
            name = "nu-protocol";
            packageId = "nu-protocol";
          }
        ];
        
      };
      "nu-parser" = rec {
        crateName = "nu-parser";
        version = "0.12.0";
        edition = "2018";
        sha256 = "1vhbd6c6gyfcpjawcawqpl88h3cp4hl7pgzf2gig7y0r5kwglpsn";
        authors = [
          "Yehuda Katz <wycats@gmail.com>"
          "Jonathan Turner <jonathan.d.turner@gmail.com>"
          "Andrés N. Robalino <andres@androbtech.com>"
        ];
        dependencies = [
          {
            name = "ansi_term";
            packageId = "ansi_term 0.12.1";
          }
          {
            name = "bigdecimal";
            packageId = "bigdecimal";
            features = [ "serde" ];
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "derive-new";
            packageId = "derive-new";
          }
          {
            name = "enumflags2";
            packageId = "enumflags2";
          }
          {
            name = "getset";
            packageId = "getset 0.0.9";
          }
          {
            name = "indexmap";
            packageId = "indexmap";
            features = [ "serde-1" ];
          }
          {
            name = "itertools";
            packageId = "itertools 0.8.2";
          }
          {
            name = "language-reporting";
            packageId = "language-reporting";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "nom";
            packageId = "nom 5.1.1";
          }
          {
            name = "nom-tracable";
            packageId = "nom-tracable";
          }
          {
            name = "nom_locate";
            packageId = "nom_locate";
          }
          {
            name = "nu-errors";
            packageId = "nu-errors";
          }
          {
            name = "nu-protocol";
            packageId = "nu-protocol";
          }
          {
            name = "nu-source";
            packageId = "nu-source";
          }
          {
            name = "num-bigint";
            packageId = "num-bigint";
            features = [ "serde" ];
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
          }
          {
            name = "pretty";
            packageId = "pretty";
          }
          {
            name = "pretty_env_logger";
            packageId = "pretty_env_logger 0.3.1";
          }
          {
            name = "ptree";
            packageId = "ptree";
          }
          {
            name = "serde";
            packageId = "serde 1.0.105";
            features = [ "derive" ];
          }
          {
            name = "shellexpand";
            packageId = "shellexpand 1.1.1";
          }
          {
            name = "termcolor";
            packageId = "termcolor";
          }
          {
            name = "unicode-xid";
            packageId = "unicode-xid";
          }
        ];
        buildDependencies = [
          {
            name = "nu-build";
            packageId = "nu-build";
          }
        ];
        features = {
          "trace" = [ "nom-tracable/trace" ];
        };
        resolvedDefaultFeatures = [ "trace" ];
      };
      "nu-plugin" = rec {
        crateName = "nu-plugin";
        version = "0.12.0";
        edition = "2018";
        sha256 = "0rdms468mrmqzk310p276svmaiisn8znsgip0v18rmwvz69qkslq";
        authors = [
          "Yehuda Katz <wycats@gmail.com>"
          "Jonathan Turner <jonathan.d.turner@gmail.com>"
          "Andrés N. Robalino <andres@androbtech.com>"
        ];
        dependencies = [
          {
            name = "indexmap";
            packageId = "indexmap";
            features = [ "serde-1" ];
          }
          {
            name = "nu-errors";
            packageId = "nu-errors";
          }
          {
            name = "nu-protocol";
            packageId = "nu-protocol";
          }
          {
            name = "nu-source";
            packageId = "nu-source";
          }
          {
            name = "nu-value-ext";
            packageId = "nu-value-ext";
          }
          {
            name = "num-bigint";
            packageId = "num-bigint";
            features = [ "serde" ];
          }
          {
            name = "serde";
            packageId = "serde 1.0.105";
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
        ];
        buildDependencies = [
          {
            name = "nu-build";
            packageId = "nu-build";
          }
        ];
        
      };
      "nu-protocol" = rec {
        crateName = "nu-protocol";
        version = "0.12.0";
        edition = "2018";
        sha256 = "0icx9axaq02hcf731hdvy748jmi7ajy5hd0ykgg7pirackp60q4x";
        authors = [
          "Yehuda Katz <wycats@gmail.com>"
          "Jonathan Turner <jonathan.d.turner@gmail.com>"
          "Andrés N. Robalino <andres@androbtech.com>"
        ];
        dependencies = [
          {
            name = "ansi_term";
            packageId = "ansi_term 0.12.1";
          }
          {
            name = "bigdecimal";
            packageId = "bigdecimal";
            features = [ "serde" ];
          }
          {
            name = "byte-unit";
            packageId = "byte-unit";
          }
          {
            name = "chrono";
            packageId = "chrono";
            features = [ "serde" ];
          }
          {
            name = "derive-new";
            packageId = "derive-new";
          }
          {
            name = "getset";
            packageId = "getset 0.0.9";
          }
          {
            name = "indexmap";
            packageId = "indexmap";
            features = [ "serde-1" ];
          }
          {
            name = "language-reporting";
            packageId = "language-reporting";
          }
          {
            name = "natural";
            packageId = "natural 0.3.0";
          }
          {
            name = "nom";
            packageId = "nom 5.1.1";
          }
          {
            name = "nom-tracable";
            packageId = "nom-tracable";
          }
          {
            name = "nom_locate";
            packageId = "nom_locate";
          }
          {
            name = "nu-errors";
            packageId = "nu-errors";
          }
          {
            name = "nu-source";
            packageId = "nu-source";
          }
          {
            name = "num-bigint";
            packageId = "num-bigint";
            features = [ "serde" ];
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
          }
          {
            name = "query_interface";
            packageId = "query_interface";
          }
          {
            name = "serde";
            packageId = "serde 1.0.105";
            features = [ "derive" ];
          }
          {
            name = "serde_bytes";
            packageId = "serde_bytes";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "serde_yaml";
            packageId = "serde_yaml";
          }
          {
            name = "toml";
            packageId = "toml 0.5.6";
          }
          {
            name = "typetag";
            packageId = "typetag";
          }
        ];
        buildDependencies = [
          {
            name = "nu-build";
            packageId = "nu-build";
          }
        ];
        
      };
      "nu-source" = rec {
        crateName = "nu-source";
        version = "0.12.0";
        edition = "2018";
        sha256 = "1k2cv5yl5a6m63b4w7m72vvplf53cv3gvwlqd1w2mi4wdvww3i1m";
        authors = [
          "Yehuda Katz <wycats@gmail.com>"
          "Jonathan Turner <jonathan.d.turner@gmail.com>"
          "Andrés N. Robalino <andres@androbtech.com>"
        ];
        dependencies = [
          {
            name = "derive-new";
            packageId = "derive-new";
          }
          {
            name = "getset";
            packageId = "getset 0.0.9";
          }
          {
            name = "language-reporting";
            packageId = "language-reporting";
          }
          {
            name = "nom-tracable";
            packageId = "nom-tracable";
          }
          {
            name = "nom_locate";
            packageId = "nom_locate";
          }
          {
            name = "pretty";
            packageId = "pretty";
          }
          {
            name = "serde";
            packageId = "serde 1.0.105";
            features = [ "derive" ];
          }
          {
            name = "termcolor";
            packageId = "termcolor";
          }
        ];
        buildDependencies = [
          {
            name = "nu-build";
            packageId = "nu-build";
          }
        ];
        
      };
      "nu-test-support" = rec {
        crateName = "nu-test-support";
        version = "0.12.0";
        edition = "2018";
        sha256 = "1qcx6ckix4aps0171lv67n9j1b3x4w2xf247jzy49zwhpryv5rzw";
        authors = [
          "Yehuda Katz <wycats@gmail.com>"
          "Jonathan Turner <jonathan.d.turner@gmail.com>"
          "Andrés N. Robalino <andres@androbtech.com>"
        ];
        dependencies = [
          {
            name = "app_dirs";
            packageId = "app_dirs";
          }
          {
            name = "dunce";
            packageId = "dunce";
          }
          {
            name = "getset";
            packageId = "getset 0.0.9";
          }
          {
            name = "glob";
            packageId = "glob";
          }
          {
            name = "indexmap";
            packageId = "indexmap";
            features = [ "serde-1" ];
          }
          {
            name = "nu-parser";
            packageId = "nu-parser";
          }
          {
            name = "nu-protocol";
            packageId = "nu-protocol";
          }
          {
            name = "nu-source";
            packageId = "nu-source";
          }
          {
            name = "tempfile";
            packageId = "tempfile";
          }
        ];
        buildDependencies = [
          {
            name = "nu-build";
            packageId = "nu-build";
          }
        ];
        
      };
      "nu-value-ext" = rec {
        crateName = "nu-value-ext";
        version = "0.12.0";
        edition = "2018";
        sha256 = "016z9lqbfx0slgrf03wxf4m5fm102b8930f28fpyms92af3cga5g";
        authors = [
          "Yehuda Katz <wycats@gmail.com>"
          "Jonathan Turner <jonathan.d.turner@gmail.com>"
          "Andrés N. Robalino <andres@androbtech.com>"
        ];
        dependencies = [
          {
            name = "indexmap";
            packageId = "indexmap";
            features = [ "serde-1" ];
          }
          {
            name = "itertools";
            packageId = "itertools 0.8.2";
          }
          {
            name = "nu-errors";
            packageId = "nu-errors";
          }
          {
            name = "nu-parser";
            packageId = "nu-parser";
          }
          {
            name = "nu-protocol";
            packageId = "nu-protocol";
          }
          {
            name = "nu-source";
            packageId = "nu-source";
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
          }
        ];
        buildDependencies = [
          {
            name = "nu-build";
            packageId = "nu-build";
          }
        ];
        
      };
      "nu_plugin_average" = rec {
        crateName = "nu_plugin_average";
        version = "0.12.0";
        edition = "2018";
        crateBin = [];
        sha256 = "1icvs7q45bl64i53yps7pcbsiq8i80n89c2bd0mxab83cia5g61a";
        authors = [
          "Yehuda Katz <wycats@gmail.com>"
          "Jonathan Turner <jonathan.d.turner@gmail.com>"
          "Andrés N. Robalino <andres@androbtech.com>"
        ];
        dependencies = [
          {
            name = "nu-errors";
            packageId = "nu-errors";
          }
          {
            name = "nu-plugin";
            packageId = "nu-plugin";
          }
          {
            name = "nu-protocol";
            packageId = "nu-protocol";
          }
          {
            name = "nu-source";
            packageId = "nu-source";
          }
        ];
        buildDependencies = [
          {
            name = "nu-build";
            packageId = "nu-build";
          }
        ];
        
      };
      "nu_plugin_binaryview" = rec {
        crateName = "nu_plugin_binaryview";
        version = "0.12.0";
        edition = "2018";
        crateBin = [];
        sha256 = "1p847shrz8m6a14plih8ksanj7qm5x4hljcjxdj2c1rkj6zip9ss";
        authors = [
          "Yehuda Katz <wycats@gmail.com>"
          "Jonathan Turner <jonathan.d.turner@gmail.com>"
          "Andrés N. Robalino <andres@androbtech.com>"
        ];
        dependencies = [
          {
            name = "ansi_term";
            packageId = "ansi_term 0.12.1";
          }
          {
            name = "crossterm";
            packageId = "crossterm";
          }
          {
            name = "image";
            packageId = "image";
            usesDefaultFeatures = false;
            features = [ "png_codec" "jpeg" ];
          }
          {
            name = "neso";
            packageId = "neso";
          }
          {
            name = "nu-errors";
            packageId = "nu-errors";
          }
          {
            name = "nu-plugin";
            packageId = "nu-plugin";
          }
          {
            name = "nu-protocol";
            packageId = "nu-protocol";
          }
          {
            name = "nu-source";
            packageId = "nu-source";
          }
          {
            name = "pretty-hex";
            packageId = "pretty-hex";
          }
          {
            name = "rawkey";
            packageId = "rawkey";
          }
        ];
        buildDependencies = [
          {
            name = "nu-build";
            packageId = "nu-build";
          }
        ];
        
      };
      "nu_plugin_fetch" = rec {
        crateName = "nu_plugin_fetch";
        version = "0.12.0";
        edition = "2018";
        crateBin = [];
        sha256 = "0xdpazc6y0000896llm03a94ykh2kjkz8bxfzdx74ww0lcn31521";
        authors = [
          "Yehuda Katz <wycats@gmail.com>"
          "Jonathan Turner <jonathan.d.turner@gmail.com>"
          "Andrés N. Robalino <andres@androbtech.com>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.3";
            features = [ "compat" "io-compat" ];
          }
          {
            name = "nu-errors";
            packageId = "nu-errors";
          }
          {
            name = "nu-plugin";
            packageId = "nu-plugin";
          }
          {
            name = "nu-protocol";
            packageId = "nu-protocol";
          }
          {
            name = "nu-source";
            packageId = "nu-source";
          }
          {
            name = "surf";
            packageId = "surf";
          }
          {
            name = "url";
            packageId = "url";
          }
        ];
        buildDependencies = [
          {
            name = "nu-build";
            packageId = "nu-build";
          }
        ];
        
      };
      "nu_plugin_inc" = rec {
        crateName = "nu_plugin_inc";
        version = "0.12.0";
        edition = "2018";
        crateBin = [];
        sha256 = "1d4319p6rrwv19klyg7gh59py6lzvlj04vdz9migff4w28j26bh5";
        authors = [
          "Yehuda Katz <wycats@gmail.com>"
          "Jonathan Turner <jonathan.d.turner@gmail.com>"
          "Andrés N. Robalino <andres@androbtech.com>"
        ];
        dependencies = [
          {
            name = "nu-errors";
            packageId = "nu-errors";
          }
          {
            name = "nu-plugin";
            packageId = "nu-plugin";
          }
          {
            name = "nu-protocol";
            packageId = "nu-protocol";
          }
          {
            name = "nu-source";
            packageId = "nu-source";
          }
          {
            name = "nu-value-ext";
            packageId = "nu-value-ext";
          }
          {
            name = "semver";
            packageId = "semver";
          }
        ];
        buildDependencies = [
          {
            name = "nu-build";
            packageId = "nu-build";
          }
        ];
        
      };
      "nu_plugin_match" = rec {
        crateName = "nu_plugin_match";
        version = "0.12.0";
        edition = "2018";
        crateBin = [];
        sha256 = "0r71ms4d4nrdfv7z6ixklb9r7i2653w9qq971sx7jjkv2chwhvb0";
        authors = [
          "Yehuda Katz <wycats@gmail.com>"
          "Jonathan Turner <jonathan.d.turner@gmail.com>"
          "Andrés N. Robalino <andres@androbtech.com>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.3";
            features = [ "compat" "io-compat" ];
          }
          {
            name = "nu-errors";
            packageId = "nu-errors";
          }
          {
            name = "nu-plugin";
            packageId = "nu-plugin";
          }
          {
            name = "nu-protocol";
            packageId = "nu-protocol";
          }
          {
            name = "nu-source";
            packageId = "nu-source";
          }
          {
            name = "regex";
            packageId = "regex";
          }
        ];
        buildDependencies = [
          {
            name = "nu-build";
            packageId = "nu-build";
          }
        ];
        
      };
      "nu_plugin_post" = rec {
        crateName = "nu_plugin_post";
        version = "0.12.0";
        edition = "2018";
        crateBin = [];
        sha256 = "18k18mkx3k0zqc8m33lhdiz12mnp354qh1g3c83v07n1b5zpibnl";
        authors = [
          "Yehuda Katz <wycats@gmail.com>"
          "Jonathan Turner <jonathan.d.turner@gmail.com>"
          "Andrés N. Robalino <andres@androbtech.com>"
        ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64 0.11.0";
          }
          {
            name = "futures";
            packageId = "futures 0.3.3";
            features = [ "compat" "io-compat" ];
          }
          {
            name = "nu-errors";
            packageId = "nu-errors";
          }
          {
            name = "nu-plugin";
            packageId = "nu-plugin";
          }
          {
            name = "nu-protocol";
            packageId = "nu-protocol";
          }
          {
            name = "nu-source";
            packageId = "nu-source";
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "surf";
            packageId = "surf";
          }
          {
            name = "url";
            packageId = "url";
          }
        ];
        buildDependencies = [
          {
            name = "nu-build";
            packageId = "nu-build";
          }
        ];
        
      };
      "nu_plugin_ps" = rec {
        crateName = "nu_plugin_ps";
        version = "0.12.0";
        edition = "2018";
        crateBin = [];
        sha256 = "1xim67fplbylfc1w7n1gxgs1ip02bq8g57dhsa2d0v73bcvfygkp";
        authors = [
          "Yehuda Katz <wycats@gmail.com>"
          "Jonathan Turner <jonathan.d.turner@gmail.com>"
          "Andrés N. Robalino <andres@androbtech.com>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.3";
            features = [ "compat" "io-compat" ];
          }
          {
            name = "futures-timer";
            packageId = "futures-timer 3.0.1";
          }
          {
            name = "heim";
            packageId = "heim";
            usesDefaultFeatures = false;
            features = [ "process" "runtime-polyfill" ];
          }
          {
            name = "nu-errors";
            packageId = "nu-errors";
          }
          {
            name = "nu-plugin";
            packageId = "nu-plugin";
          }
          {
            name = "nu-protocol";
            packageId = "nu-protocol";
          }
          {
            name = "nu-source";
            packageId = "nu-source";
          }
        ];
        buildDependencies = [
          {
            name = "nu-build";
            packageId = "nu-build";
          }
        ];
        
      };
      "nu_plugin_str" = rec {
        crateName = "nu_plugin_str";
        version = "0.12.0";
        edition = "2018";
        crateBin = [];
        sha256 = "0rmb7n5901gzj4ifrlh4jx817p6q9vp89dvy4lgkgvjanfwzp1br";
        authors = [
          "Yehuda Katz <wycats@gmail.com>"
          "Jonathan Turner <jonathan.d.turner@gmail.com>"
          "Andrés N. Robalino <andres@androbtech.com>"
        ];
        dependencies = [
          {
            name = "chrono";
            packageId = "chrono";
            features = [ "serde" ];
          }
          {
            name = "nu-errors";
            packageId = "nu-errors";
          }
          {
            name = "nu-plugin";
            packageId = "nu-plugin";
          }
          {
            name = "nu-protocol";
            packageId = "nu-protocol";
          }
          {
            name = "nu-source";
            packageId = "nu-source";
          }
          {
            name = "nu-value-ext";
            packageId = "nu-value-ext";
          }
          {
            name = "num-bigint";
            packageId = "num-bigint";
          }
          {
            name = "regex";
            packageId = "regex";
          }
        ];
        buildDependencies = [
          {
            name = "nu-build";
            packageId = "nu-build";
          }
        ];
        
      };
      "nu_plugin_sys" = rec {
        crateName = "nu_plugin_sys";
        version = "0.12.0";
        edition = "2018";
        crateBin = [];
        sha256 = "0y54s2r44b5in9320dpfavlrvrkp10jp1pp728pkwy5xm3sjnnzw";
        authors = [
          "Yehuda Katz <wycats@gmail.com>"
          "Jonathan Turner <jonathan.d.turner@gmail.com>"
          "Andrés N. Robalino <andres@androbtech.com>"
        ];
        dependencies = [
          {
            name = "battery";
            packageId = "battery";
          }
          {
            name = "futures";
            packageId = "futures 0.3.3";
            features = [ "compat" "io-compat" ];
          }
          {
            name = "futures-util";
            packageId = "futures-util";
          }
          {
            name = "heim";
            packageId = "heim";
            usesDefaultFeatures = false;
            features = [ "host" "cpu" "memory" "disk" "net" "sensors" "runtime-polyfill" ];
          }
          {
            name = "nu-errors";
            packageId = "nu-errors";
          }
          {
            name = "nu-plugin";
            packageId = "nu-plugin";
          }
          {
            name = "nu-protocol";
            packageId = "nu-protocol";
          }
          {
            name = "nu-source";
            packageId = "nu-source";
          }
        ];
        buildDependencies = [
          {
            name = "nu-build";
            packageId = "nu-build";
          }
        ];
        
      };
      "nu_plugin_textview" = rec {
        crateName = "nu_plugin_textview";
        version = "0.12.0";
        edition = "2018";
        crateBin = [];
        sha256 = "0s2l8g817mj1myaw1ic4rfrry9d4109f4rrgh947mzarl7hdwkac";
        authors = [
          "Yehuda Katz <wycats@gmail.com>"
          "Jonathan Turner <jonathan.d.turner@gmail.com>"
          "Andrés N. Robalino <andres@androbtech.com>"
        ];
        dependencies = [
          {
            name = "ansi_term";
            packageId = "ansi_term 0.12.1";
          }
          {
            name = "crossterm";
            packageId = "crossterm";
          }
          {
            name = "nu-errors";
            packageId = "nu-errors";
          }
          {
            name = "nu-plugin";
            packageId = "nu-plugin";
          }
          {
            name = "nu-protocol";
            packageId = "nu-protocol";
          }
          {
            name = "nu-source";
            packageId = "nu-source";
          }
          {
            name = "onig_sys";
            packageId = "onig_sys";
          }
          {
            name = "syntect";
            packageId = "syntect";
          }
          {
            name = "url";
            packageId = "url";
          }
        ];
        buildDependencies = [
          {
            name = "nu-build";
            packageId = "nu-build";
          }
        ];
        
      };
      "nu_plugin_tree" = rec {
        crateName = "nu_plugin_tree";
        version = "0.12.0";
        edition = "2018";
        crateBin = [];
        sha256 = "1rsx5qyp6yf1mmhpxl0gcsns8npkf57dc3fz8xrvcci5fxg57nv3";
        authors = [
          "Yehuda Katz <wycats@gmail.com>"
          "Jonathan Turner <jonathan.d.turner@gmail.com>"
          "Andrés N. Robalino <andres@androbtech.com>"
        ];
        dependencies = [
          {
            name = "derive-new";
            packageId = "derive-new";
          }
          {
            name = "nu-errors";
            packageId = "nu-errors";
          }
          {
            name = "nu-plugin";
            packageId = "nu-plugin";
          }
          {
            name = "nu-protocol";
            packageId = "nu-protocol";
          }
          {
            name = "nu-source";
            packageId = "nu-source";
          }
          {
            name = "ptree";
            packageId = "ptree";
          }
        ];
        buildDependencies = [
          {
            name = "nu-build";
            packageId = "nu-build";
          }
        ];
        
      };
      "num-bigint" = rec {
        crateName = "num-bigint";
        version = "0.2.6";
        edition = "2015";
        sha256 = "015k3wixdi4w698sappvy43pf8bvkw0f88xplmdgc3zfk2cpy309";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde 1.0.105";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.0";
          }
        ];
        features = {
          "default" = [ "std" ];
          "i128" = [ "num-integer/i128" "num-traits/i128" ];
          "std" = [ "num-integer/std" "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "default" "serde" "std" ];
      };
      "num-integer" = rec {
        crateName = "num-integer";
        version = "0.1.42";
        edition = "2015";
        sha256 = "1fpw8yr9xwsf3qrh91rm7mzqaiwlc2dmnalsxv9pr9w1klpacviz";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.0";
          }
        ];
        features = {
          "default" = [ "std" ];
          "i128" = [ "num-traits/i128" ];
          "std" = [ "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "num-iter" = rec {
        crateName = "num-iter";
        version = "0.1.40";
        edition = "2015";
        sha256 = "005wif3bk23b5jdg7l0cprzqzyc4jg0xjyzyykciv2ci08581c6z";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.0";
          }
        ];
        features = {
          "default" = [ "std" ];
          "i128" = [ "num-integer/i128" "num-traits/i128" ];
          "std" = [ "num-integer/std" "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "num-rational" = rec {
        crateName = "num-rational";
        version = "0.2.3";
        edition = "2015";
        sha256 = "18q3vq3xldhaj0z3f92am8f59m1awywgdj28c7wvx0bcksgwfkfs";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.0";
          }
        ];
        features = {
          "bigint" = [ "num-bigint" ];
          "bigint-std" = [ "bigint" "num-bigint/std" ];
          "default" = [ "bigint-std" "std" ];
          "i128" = [ "num-integer/i128" "num-traits/i128" ];
          "std" = [ "num-integer/std" "num-traits/std" ];
        };
      };
      "num-traits 0.1.43" = rec {
        crateName = "num-traits";
        version = "0.1.43";
        edition = "2015";
        sha256 = "0c9whknf2dm74a3cqirafy6gj83a76gl56g4v3g19k6lkwz13rcj";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
          }
        ];
        
      };
      "num-traits 0.2.11" = rec {
        crateName = "num-traits";
        version = "0.2.11";
        edition = "2015";
        sha256 = "15khrlm1bra50nd48ijl1vln13m9xg4fxzghf28jp16ic5zf8ay6";
        authors = [
          "The Rust Project Developers"
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.0";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "num_cpus" = rec {
        crateName = "num_cpus";
        version = "1.12.0";
        edition = "2015";
        sha256 = "1riw641hsmp2vwb9wz7d26dsycrjbw3zf4nd6p18kzw5y1a3a826";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "hermit-abi";
            packageId = "hermit-abi";
            target = { target, features }: (((target."arch" == "x86_64") || (target."arch" == "aarch64")) && (target."os" == "hermit"));
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        
      };
      "objc" = rec {
        crateName = "objc";
        version = "0.2.7";
        edition = "2015";
        sha256 = "1cbpf6kz8a244nn1qzl3xyhmp05gsg4n313c9m3567625d3innwi";
        authors = [
          "Steven Sheldon"
        ];
        dependencies = [
          {
            name = "malloc_buf";
            packageId = "malloc_buf";
          }
        ];
        features = {
          "exception" = [ "objc_exception" ];
        };
      };
      "objc-foundation" = rec {
        crateName = "objc-foundation";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1y9bwb3m5fdq7w7i4bnds067dhm4qxv4m1mbg9y61j9nkrjipp8s";
        authors = [
          "Steven Sheldon"
        ];
        dependencies = [
          {
            name = "block";
            packageId = "block";
          }
          {
            name = "objc";
            packageId = "objc";
          }
          {
            name = "objc_id";
            packageId = "objc_id";
          }
        ];
        
      };
      "objc_id" = rec {
        crateName = "objc_id";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0fq71hnp2sdblaighjc82yrac3adfmqzhpr11irhvdfp9gdlsbf9";
        authors = [
          "Steven Sheldon"
        ];
        dependencies = [
          {
            name = "objc";
            packageId = "objc";
          }
        ];
        
      };
      "ole32-sys" = rec {
        crateName = "ole32-sys";
        version = "0.2.0";
        edition = "2015";
        sha256 = "134xg38xicrqynx4pfjfxnpp8x83m3gqw5j3s8y27rc22w14jb2x";
        libName = "ole32";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
          }
        ];
        buildDependencies = [
          {
            name = "winapi-build";
            packageId = "winapi-build";
          }
        ];
        
      };
      "once_cell" = rec {
        crateName = "once_cell";
        version = "1.3.1";
        edition = "2018";
        sha256 = "0nyf4659py8ccnrrwdvw242h3j3qlrw6zi5gsjb9bjbm0n0h3imi";
        authors = [
          "Aleksey Kladov <aleksey.kladov@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "onig" = rec {
        crateName = "onig";
        version = "4.3.3";
        edition = "2015";
        sha256 = "10xk5xfk3f3kq62s2sfaflsgr1v0v97xz6fl19gz9hmqn6rgq645";
        authors = [
          "Will Speak <will@willspeak.me>"
          "Ivan Ivashchenko <defuz@me.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."windows";
          }
          {
            name = "onig_sys";
            packageId = "onig_sys";
          }
        ];
        features = {
          "posix-api" = [ "onig_sys/posix-api" ];
          "print-debug" = [ "onig_sys/print-debug" ];
        };
      };
      "onig_sys" = rec {
        crateName = "onig_sys";
        version = "69.1.0";
        edition = "2015";
        sha256 = "1c639k5x7kp5m4vrvmvx4hqar8dyyiskknz6b07g2hd3byzi111q";
        authors = [
          "Will Speak <will@willspeak.me>"
          "Ivan Ivashchenko <defuz@me.com>"
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
        ];
        features = {
        };
      };
      "open" = rec {
        crateName = "open";
        version = "1.4.0";
        edition = "2018";
        crateBin = [];
        sha256 = "0j6ci7jc2aabvw0rvq7a51sw9s2rk3mfsq0s5zjakzjf27q3na3w";
        authors = [
          "Sebastian Thiel <byronimo@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "shellapi" ];
          }
        ];
        
      };
      "openssl" = rec {
        crateName = "openssl";
        version = "0.10.28";
        edition = "2015";
        sha256 = "0llb6xhl4albcm616nf40sgv278d7d91xnnnf1ixvmr2k1s96clp";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "foreign-types";
            packageId = "foreign-types";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "openssl-sys";
            packageId = "openssl-sys";
          }
        ];
        features = {
          "vendored" = [ "openssl-sys/vendored" ];
        };
      };
      "openssl-probe" = rec {
        crateName = "openssl-probe";
        version = "0.1.2";
        edition = "2015";
        sha256 = "1pijrdifgsdwd45b08c2g0dsmnhz7c3kmagb70839ngrd7d29bvp";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        
      };
      "openssl-sys" = rec {
        crateName = "openssl-sys";
        version = "0.9.54";
        edition = "2015";
        sha256 = "11h98n78nk5c2ar57qs4yfjrb41s4lzxm9l7a1ahl83ljyjw090h";
        build = "build/main.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.0";
          }
          {
            name = "cc";
            packageId = "cc";
          }
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
          {
            name = "vcpkg";
            packageId = "vcpkg";
            target = {target, features}: (target."env" == "msvc");
          }
        ];
        features = {
          "vendored" = [ "openssl-src" ];
        };
      };
      "ordered-float" = rec {
        crateName = "ordered-float";
        version = "1.0.2";
        edition = "2015";
        sha256 = "0625x96987kspdxbikry5mb7hsf5pdc5bbanxd8wjwqlx0ar71hq";
        authors = [
          "Jonathan Reem <jonathan.reem@gmail.com>"
          "Matt Brubeck <mbrubeck@limpet.net>"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "ordermap" = rec {
        crateName = "ordermap";
        version = "0.3.5";
        edition = "2015";
        sha256 = "0qr0a50l0qakbjcck93qdayd0xl8gzpp42x0n7b75cs4ybsx6vm8";
        authors = [
          "bluss"
        ];
        features = {
          "serde-1" = [ "serde" ];
        };
      };
      "os_info" = rec {
        crateName = "os_info";
        version = "2.0.2";
        edition = "2018";
        crateBin = [];
        sha256 = "1adxdg6xid5ha6v1jaq74z5l1lmh09gf2hf09azicl1yp3km7jqf";
        authors = [
          "Jan Schulte <hello@unexpected-co.de>"
          "Stanislav Tkach <stanislav.tkach@gmail.com>"
        ];
        dependencies = [
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "serde";
            packageId = "serde 1.0.105";
            optional = true;
            features = [ "derive" ];
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "minwindef" "ntdef" "ntstatus" "sysinfoapi" "winnt" "winuser" "libloaderapi" "processthreadsapi" ];
          }
        ];
        features = {
          "default" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" "serde" ];
      };
      "output_vt100" = rec {
        crateName = "output_vt100";
        version = "0.1.2";
        edition = "2018";
        sha256 = "1ygqplpxz4gg3i8f3rkan2q69pqll7gv65l2mmd8r9dphnvwbkak";
        authors = [
          "Phuntsok Drak-pa <phundrak@phundrak.fr>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            features = [ "winuser" "winbase" "consoleapi" "processenv" ];
          }
        ];
        
      };
      "parking_lot" = rec {
        crateName = "parking_lot";
        version = "0.10.0";
        edition = "2018";
        sha256 = "1z0wgf2sd1266y768kxxs3313zjfzj9r3k7j4arfaz0bmd4qrscj";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "lock_api";
            packageId = "lock_api";
          }
          {
            name = "parking_lot_core";
            packageId = "parking_lot_core";
          }
        ];
        features = {
          "deadlock_detection" = [ "parking_lot_core/deadlock_detection" ];
          "nightly" = [ "parking_lot_core/nightly" "lock_api/nightly" ];
          "owning_ref" = [ "lock_api/owning_ref" ];
          "serde" = [ "lock_api/serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "parking_lot_core" = rec {
        crateName = "parking_lot_core";
        version = "0.7.0";
        edition = "2018";
        sha256 = "1wdbrvh35nn09ga570vl5062dpwfbrwgzyrlhhy78ifzhj2870km";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "cloudabi";
            packageId = "cloudabi";
            target = { target, features }: (target."os" == "cloudabi");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "winnt" "ntstatus" "minwindef" "winerror" "winbase" "errhandlingapi" "handleapi" ];
          }
        ];
        features = {
          "deadlock_detection" = [ "petgraph" "thread-id" "backtrace" ];
        };
      };
      "path-slash" = rec {
        crateName = "path-slash";
        version = "0.1.1";
        edition = "2018";
        sha256 = "0bvfzywc2nh6kdwh3nanyd6dibbhmzhppb2f3xa7aqhkv7s8m1d0";
        authors = [
          "rhysd <https://rhysd.github.io>"
        ];
        
      };
      "percent-encoding" = rec {
        crateName = "percent-encoding";
        version = "2.1.0";
        edition = "2015";
        sha256 = "0bp3zrsk3kr47fbpipyczidbbx4g54lzxdm77ni1i3qws10mdzfl";
        libPath = "lib.rs";
        authors = [
          "The rust-url developers"
        ];
        
      };
      "petgraph" = rec {
        crateName = "petgraph";
        version = "0.4.13";
        edition = "2015";
        sha256 = "0kyfmca854s54jk26g2x1kjb04c3k7cjilaxyr0if8lhxv8mjdlw";
        authors = [
          "bluss"
          "mitchmindtree"
        ];
        dependencies = [
          {
            name = "fixedbitset";
            packageId = "fixedbitset";
          }
          {
            name = "ordermap";
            packageId = "ordermap";
            optional = true;
          }
        ];
        features = {
          "all" = [ "unstable" "quickcheck" "stable_graph" "graphmap" ];
          "default" = [ "graphmap" "stable_graph" ];
          "graphmap" = [ "ordermap" ];
          "serde-1" = [ "serde" "serde_derive" ];
          "unstable" = [ "generate" ];
        };
        resolvedDefaultFeatures = [ "default" "graphmap" "ordermap" "stable_graph" ];
      };
      "pin-project" = rec {
        crateName = "pin-project";
        version = "0.4.8";
        edition = "2018";
        sha256 = "0b3pfbqfy3hhgq62zvbw7m0a4d55mrgnll9w8l9jymyrm1is813q";
        authors = [
          "Taiki Endo <te316e89@gmail.com>"
        ];
        dependencies = [
          {
            name = "pin-project-internal";
            packageId = "pin-project-internal";
            usesDefaultFeatures = false;
          }
        ];
        
      };
      "pin-project-internal" = rec {
        crateName = "pin-project-internal";
        version = "0.4.8";
        edition = "2018";
        sha256 = "0gwvrd8y9x1zfhwqw9qg3l2yi1969ad58aldqq839krfbyj24lrq";
        procMacro = true;
        authors = [
          "Taiki Endo <te316e89@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "visit-mut" ];
          }
        ];
        
      };
      "pin-project-lite" = rec {
        crateName = "pin-project-lite";
        version = "0.1.4";
        edition = "2018";
        sha256 = "1bljczwz9yyb6jskjhbkilcbdg7v1mhfwzp2mxknzf7v1isl8y13";
        authors = [
          "Taiki Endo <te316e89@gmail.com>"
        ];
        
      };
      "pin-utils" = rec {
        crateName = "pin-utils";
        version = "0.1.0-alpha.4";
        edition = "2018";
        sha256 = "11xmyx00n4m37d546by2rxb8ryxs12v55cc172i3yak1rqccd52q";
        authors = [
          "Josef Brandl <mail@josefbrandl.de>"
        ];
        
      };
      "pkg-config" = rec {
        crateName = "pkg-config";
        version = "0.3.17";
        edition = "2015";
        sha256 = "0xynnaxdv0gzadlw4h79j855k0q7rj4zb9xb1vk00nc6ss559nh5";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        
      };
      "platforms" = rec {
        crateName = "platforms";
        version = "0.2.1";
        edition = "2018";
        sha256 = "03llamd0bpz0khpza82kbp4mhxw8bwr71r3fvas612iv0fqv5czy";
        authors = [
          "Tony Arcieri <bascule@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "plist" = rec {
        crateName = "plist";
        version = "0.4.2";
        edition = "2015";
        sha256 = "0zqnxc5i4y6mj119vr0lzpb5j67vffpx2phhgh711533bw3ryajz";
        authors = [
          "Ed Barnard <eabarnard@gmail.com>"
        ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64 0.10.1";
          }
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "humantime";
            packageId = "humantime";
          }
          {
            name = "line-wrap";
            packageId = "line-wrap";
          }
          {
            name = "serde";
            packageId = "serde 1.0.105";
            optional = true;
          }
          {
            name = "xml-rs";
            packageId = "xml-rs";
          }
        ];
        features = {
          "default" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" "serde" ];
      };
      "png" = rec {
        crateName = "png";
        version = "0.15.3";
        edition = "2018";
        sha256 = "10x2qkhyfnm3si5vgx77r2ik811gaap7ahi825wfxgsb0lirm1gg";
        authors = [
          "nwin <nwin@users.noreply.github.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "crc32fast";
            packageId = "crc32fast";
          }
          {
            name = "deflate";
            packageId = "deflate";
            optional = true;
          }
          {
            name = "inflate";
            packageId = "inflate";
          }
        ];
        features = {
          "default" = [ "png-encoding" ];
          "png-encoding" = [ "deflate" ];
        };
        resolvedDefaultFeatures = [ "default" "deflate" "png-encoding" ];
      };
      "podio" = rec {
        crateName = "podio";
        version = "0.1.6";
        edition = "2015";
        sha256 = "1ga5arhwakj5rwrqzf9410zrbwnf24jd59af8kr9rgwbd6vb83vq";
        authors = [
          "Mathijs van de Nes <git@mathijs.vd-nes.nl>"
        ];
        
      };
      "ppv-lite86" = rec {
        crateName = "ppv-lite86";
        version = "0.2.6";
        edition = "2018";
        sha256 = "06zs492wbms7j5qhy58cs3976c7kyc47rx0d6fn63rgvp580njbl";
        authors = [
          "The CryptoCorrosion Contributors"
        ];
        features = {
          "default" = [ "std" "simd" ];
        };
        resolvedDefaultFeatures = [ "simd" "std" ];
      };
      "pretty" = rec {
        crateName = "pretty";
        version = "0.5.2";
        edition = "2015";
        sha256 = "1lzn7d60l79vsdwcfgrh6jmk193nzwh1j36r8p9cv3n8dyghs37n";
        authors = [
          "Jonathan Sterling <jon@jonmsterling.com>"
          "Darin Morrison <darinmorrison+git@gmail.com>"
          "Markus Westerlind <marwes91@gmail.com>"
        ];
        dependencies = [
          {
            name = "typed-arena";
            packageId = "typed-arena";
          }
        ];
        
      };
      "pretty-hex" = rec {
        crateName = "pretty-hex";
        version = "0.1.1";
        edition = "2015";
        sha256 = "135x46pijq239byn1j37r1ndiqdawxall6bcdb29sybk7v2br4dy";
        authors = [
          "Andrei Volnin <wolandr@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "pretty_assertions" = rec {
        crateName = "pretty_assertions";
        version = "0.6.1";
        edition = "2018";
        sha256 = "09yl14gnmpygiqrdlsa64lcl4w6ydjl9m8jri6kgam0v9rjf309z";
        authors = [
          "Colin Kiegel <kiegel@gmx.de>"
          "Florent Fayolle <florent.fayolle69@gmail.com>"
        ];
        dependencies = [
          {
            name = "ansi_term";
            packageId = "ansi_term 0.11.0";
          }
          {
            name = "ctor";
            packageId = "ctor";
            target = { target, features }: target."windows";
          }
          {
            name = "difference";
            packageId = "difference";
          }
          {
            name = "output_vt100";
            packageId = "output_vt100";
            target = { target, features }: target."windows";
          }
        ];
        
      };
      "pretty_env_logger 0.3.1" = rec {
        crateName = "pretty_env_logger";
        version = "0.3.1";
        edition = "2015";
        sha256 = "0x4hyjlnvvhyk9m74iypzybm22w3dl2k8img4b956239n5vf8zki";
        authors = [
          "Sean McArthur <sean@seanmonstar>"
        ];
        dependencies = [
          {
            name = "chrono";
            packageId = "chrono";
          }
          {
            name = "env_logger";
            packageId = "env_logger 0.6.2";
          }
          {
            name = "log";
            packageId = "log";
          }
        ];
        
      };
      "pretty_env_logger 0.4.0" = rec {
        crateName = "pretty_env_logger";
        version = "0.4.0";
        edition = "2015";
        sha256 = "17gva1rlf9fhgr0jr19kv39f8bir3f4pa4jz02qbhl9qanwkcvcj";
        authors = [
          "Sean McArthur <sean@seanmonstar>"
        ];
        dependencies = [
          {
            name = "env_logger";
            packageId = "env_logger 0.7.1";
          }
          {
            name = "log";
            packageId = "log";
          }
        ];
        
      };
      "prettytable-rs" = rec {
        crateName = "prettytable-rs";
        version = "0.8.0";
        edition = "2015";
        crateBin = [];
        sha256 = "0bmcsxkcy94hi0jz5db0fz137w5aaf17z2j1ryn2vyh400blpl0g";
        libName = "prettytable";
        authors = [
          "Pierre-Henri Symoneaux"
        ];
        dependencies = [
          {
            name = "atty";
            packageId = "atty";
          }
          {
            name = "csv";
            packageId = "csv";
            optional = true;
          }
          {
            name = "encode_unicode";
            packageId = "encode_unicode";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "term";
            packageId = "term";
          }
          {
            name = "unicode-width";
            packageId = "unicode-width";
          }
        ];
        features = {
          "default" = [ "win_crlf" "csv" ];
        };
        resolvedDefaultFeatures = [ "csv" "default" "win_crlf" ];
      };
      "proc-macro-error" = rec {
        crateName = "proc-macro-error";
        version = "0.4.11";
        edition = "2018";
        sha256 = "12hksgyl1m01dz1r6d6h6qqc8l907dqgfqckcc6haqnrcxj9r5g7";
        authors = [
          "CreepySkeleton <creepy-skeleton@yandex.ru>"
        ];
        dependencies = [
          {
            name = "proc-macro-error-attr";
            packageId = "proc-macro-error-attr";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            usesDefaultFeatures = false;
            features = [ "derive" "parsing" "proc-macro" "printing" ];
          }
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check 0.9.1";
          }
        ];
        
      };
      "proc-macro-error-attr" = rec {
        crateName = "proc-macro-error-attr";
        version = "0.4.11";
        edition = "2018";
        sha256 = "0fjl9mh6kj2dvmi29jvp9v181swm387ajh5rkw0mw7crangjs074";
        procMacro = true;
        authors = [
          "CreepySkeleton <creepy-skeleton@yandex.ru>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            usesDefaultFeatures = false;
            features = [ "derive" "parsing" "proc-macro" "printing" ];
          }
          {
            name = "syn-mid";
            packageId = "syn-mid";
          }
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check 0.9.1";
          }
        ];
        
      };
      "proc-macro-hack" = rec {
        crateName = "proc-macro-hack";
        version = "0.5.11";
        edition = "2018";
        sha256 = "1idz5vmnjjhvr51yvwyjb45mza18wa53fr05m1skqvbdyw15gm7c";
        procMacro = true;
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];
        
      };
      "proc-macro-nested" = rec {
        crateName = "proc-macro-nested";
        version = "0.1.3";
        edition = "2015";
        sha256 = "0bmlksm8vl44wkwihmwr7jsjznhbg0n7aibcw1cs2jgjcp86x6in";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        
      };
      "proc-macro2" = rec {
        crateName = "proc-macro2";
        version = "1.0.8";
        edition = "2018";
        sha256 = "0j45p176fnw0d02dzcky9sxyr4fadiggq07skmblwspqdxy33jrs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "unicode-xid";
            packageId = "unicode-xid";
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "ptree" = rec {
        crateName = "ptree";
        version = "0.2.1";
        edition = "2015";
        sha256 = "1m1qm478d9r713wkcssz6jbzckdblwiwbh9q6b9ppvhr1gh3n2kb";
        authors = [
          "Miha Čančula <miha@noughmad.eu>"
        ];
        dependencies = [
          {
            name = "ansi_term";
            packageId = "ansi_term 0.11.0";
            optional = true;
          }
          {
            name = "config";
            packageId = "config";
          }
          {
            name = "directories";
            packageId = "directories";
          }
          {
            name = "isatty";
            packageId = "isatty";
            optional = true;
          }
          {
            name = "petgraph";
            packageId = "petgraph";
            optional = true;
          }
          {
            name = "serde";
            packageId = "serde 1.0.105";
          }
          {
            name = "serde-value";
            packageId = "serde-value";
            optional = true;
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "tint";
            packageId = "tint";
            optional = true;
          }
        ];
        features = {
          "ansi" = [ "ansi_term" "isatty" "tint" ];
          "default" = [ "petgraph" "ansi" "value" ];
          "value" = [ "serde-value" ];
        };
        resolvedDefaultFeatures = [ "ansi" "ansi_term" "default" "isatty" "petgraph" "serde-value" "tint" "value" ];
      };
      "query_interface" = rec {
        crateName = "query_interface";
        version = "0.3.5";
        edition = "2015";
        sha256 = "14rn7i6jr8zf3h103jhmivw39429gmkzk4wgns3bpvl4c82g1h3q";
        authors = [
          "Diggory Blake <diggsey@googlemail.com>"
        ];
        features = {
          "dynamic" = [ "lazy_static" ];
        };
      };
      "quick-error" = rec {
        crateName = "quick-error";
        version = "1.2.3";
        edition = "2015";
        sha256 = "1q6za3v78hsspisc197bg3g7rpc989qycy8ypr8ap8igv10ikl51";
        authors = [
          "Paul Colomiets <paul@colomiets.name>"
          "Colin Kiegel <kiegel@gmx.de>"
        ];
        
      };
      "quick-xml" = rec {
        crateName = "quick-xml";
        version = "0.17.2";
        edition = "2015";
        sha256 = "1c5vqqbxr4bx7mw6qyv1yhm6g95ikd2rqfq54pf9y37kvh5l67py";
        authors = [
          "Johann Tuffe <tafia973@gmail.com>"
        ];
        dependencies = [
          {
            name = "encoding_rs";
            packageId = "encoding_rs";
            optional = true;
          }
          {
            name = "memchr";
            packageId = "memchr";
          }
        ];
        features = {
          "encoding" = [ "encoding_rs" ];
          "serialize" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" "encoding" "encoding_rs" ];
      };
      "quote" = rec {
        crateName = "quote";
        version = "1.0.2";
        edition = "2018";
        sha256 = "1zkc46ryacf2jdkc6krsy2z615xbk1x8kp1830rcxz3irj5qqfh5";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
          "proc-macro" = [ "proc-macro2/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "rand" = rec {
        crateName = "rand";
        version = "0.7.3";
        edition = "2018";
        sha256 = "00sdaimkbz491qgi6qxkv582yivl32m2jd401kzbn94vsiwicsva";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "getrandom";
            packageId = "getrandom";
            rename = "getrandom_package";
            optional = true;
          }
          {
            name = "libc";
            packageId = "libc";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: target."unix";
          }
          {
            name = "rand_chacha";
            packageId = "rand_chacha";
            usesDefaultFeatures = false;
            target = { target, features }: (!(target."os" == "emscripten"));
          }
          {
            name = "rand_core";
            packageId = "rand_core";
          }
          {
            name = "rand_hc";
            packageId = "rand_hc";
            target = { target, features }: (target."os" == "emscripten");
          }
        ];
        devDependencies = [
          {
            name = "rand_hc";
            packageId = "rand_hc";
          }
        ];
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "getrandom" = [ "getrandom_package" "rand_core/getrandom" ];
          "nightly" = [ "simd_support" ];
          "simd_support" = [ "packed_simd" ];
          "small_rng" = [ "rand_pcg" ];
          "std" = [ "rand_core/std" "rand_chacha/std" "alloc" "getrandom" "libc" ];
          "stdweb" = [ "getrandom_package/stdweb" ];
          "wasm-bindgen" = [ "getrandom_package/wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "getrandom" "getrandom_package" "libc" "std" ];
      };
      "rand_chacha" = rec {
        crateName = "rand_chacha";
        version = "0.2.1";
        edition = "2018";
        sha256 = "0lv8imzzl4h2glm6sjj8mkvasgi8jym23ya48dakyln7m06sk8h3";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
          "The CryptoCorrosion Contributors"
        ];
        dependencies = [
          {
            name = "c2-chacha";
            packageId = "c2-chacha";
            usesDefaultFeatures = false;
            features = [ "simd" ];
          }
          {
            name = "rand_core";
            packageId = "rand_core";
          }
        ];
        features = {
          "default" = [ "std" "simd" ];
          "std" = [ "c2-chacha/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "rand_core" = rec {
        crateName = "rand_core";
        version = "0.5.1";
        edition = "2018";
        sha256 = "06bdvx08v3rkz451cm7z59xwwqn1rkfh6v9ay77b14f8dwlybgch";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "getrandom";
            packageId = "getrandom";
            optional = true;
          }
        ];
        features = {
          "serde1" = [ "serde" ];
          "std" = [ "alloc" "getrandom" "getrandom/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "getrandom" "std" ];
      };
      "rand_hc" = rec {
        crateName = "rand_hc";
        version = "0.2.0";
        edition = "2018";
        sha256 = "0g31sqwpmsirdlwr0svnacr4dbqyz339im4ssl9738cjgfpjjcfa";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core";
          }
        ];
        
      };
      "raw-cpuid" = rec {
        crateName = "raw-cpuid";
        version = "7.0.3";
        edition = "2015";
        crateBin = [];
        sha256 = "1bzfpjlsd8701m0gd9biv84clb4bwmvgsrmvdmfzlg1phg54k8xl";
        authors = [
          "Gerd Zellweger <mail@gerdzellweger.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
          {
            name = "rustc_version";
            packageId = "rustc_version";
          }
        ];
        features = {
          "serialize" = [ "serde" "serde_derive" ];
        };
      };
      "rawkey" = rec {
        crateName = "rawkey";
        version = "0.1.2";
        edition = "2018";
        sha256 = "15rqwh2insa0hlijrrrmqr6lxfpkyr9w4aq0bir21f6wjfj1gv1k";
        authors = [
          "Jonathan Turner <jonathan.d.turner@gmail.com>"
        ];
        dependencies = [
          {
            name = "readkey";
            packageId = "readkey";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "user32-sys";
            packageId = "user32-sys";
            target = { target, features }: (target."os" == "windows");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: (target."os" == "windows");
            features = [ "winuser" ];
          }
          {
            name = "x11";
            packageId = "x11";
            target = { target, features }: (target."os" == "linux");
            features = [ "xlib" ];
          }
        ];
        
      };
      "rayon" = rec {
        crateName = "rayon";
        version = "1.3.0";
        edition = "2018";
        sha256 = "1650g13bxlmywhdlw65q3g1zyyb7l0wcm35v45kf31cwgwly6v6v";
        authors = [
          "Niko Matsakis <niko@alum.mit.edu>"
          "Josh Stone <cuviper@gmail.com>"
        ];
        dependencies = [
          {
            name = "crossbeam-deque";
            packageId = "crossbeam-deque";
          }
          {
            name = "either";
            packageId = "either";
            usesDefaultFeatures = false;
          }
          {
            name = "rayon-core";
            packageId = "rayon-core";
          }
        ];
        
      };
      "rayon-core" = rec {
        crateName = "rayon-core";
        version = "1.7.0";
        edition = "2018";
        sha256 = "1ac55kpnh2390ah7r071vnjbiy308qpznql0n597x5dgxx39pa08";
        authors = [
          "Niko Matsakis <niko@alum.mit.edu>"
          "Josh Stone <cuviper@gmail.com>"
        ];
        dependencies = [
          {
            name = "crossbeam-deque";
            packageId = "crossbeam-deque";
          }
          {
            name = "crossbeam-queue";
            packageId = "crossbeam-queue";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.7.0";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
        ];
        
      };
      "readkey" = rec {
        crateName = "readkey";
        version = "0.1.7";
        edition = "2015";
        sha256 = "0iiip8bq4yhal5rv6wlws0xgz798blki7s5ly5cmlwm1ssv03m46";
        authors = [
          "Klas Segeljakt <klasseg@kth.se>"
        ];
        
      };
      "redox_syscall" = rec {
        crateName = "redox_syscall";
        version = "0.1.56";
        edition = "2015";
        sha256 = "110y7dyfm2vci4x5vk7gr0q551dvp31npl99fnsx2fb17wzwcf94";
        libName = "syscall";
        authors = [
          "Jeremy Soller <jackpot51@gmail.com>"
        ];
        
      };
      "redox_users" = rec {
        crateName = "redox_users";
        version = "0.3.4";
        edition = "2015";
        sha256 = "0cbl5w16l3bqm22i4vszclf6hzpljxicghmllw7j13az4s9k1ch9";
        authors = [
          "Jose Narvaez <goyox86@gmail.com>"
          "Wesley Hershberger <mggmugginsmc@gmail.com>"
        ];
        dependencies = [
          {
            name = "getrandom";
            packageId = "getrandom";
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
          }
          {
            name = "rust-argon2";
            packageId = "rust-argon2";
          }
        ];
        
      };
      "regex" = rec {
        crateName = "regex";
        version = "1.3.5";
        edition = "2015";
        sha256 = "0j00pvmh3mbjdvcbxq2i4q0b8w6qmqnw7k4rqfhpxyiy6v0yn049";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "aho-corasick";
            packageId = "aho-corasick";
            optional = true;
          }
          {
            name = "memchr";
            packageId = "memchr";
            optional = true;
          }
          {
            name = "regex-syntax";
            packageId = "regex-syntax";
            usesDefaultFeatures = false;
          }
          {
            name = "thread_local";
            packageId = "thread_local";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" "perf" "unicode" ];
          "perf" = [ "perf-cache" "perf-dfa" "perf-inline" "perf-literal" ];
          "perf-cache" = [ "thread_local" ];
          "perf-literal" = [ "aho-corasick" "memchr" ];
          "unicode" = [ "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
          "unicode-age" = [ "regex-syntax/unicode-age" ];
          "unicode-bool" = [ "regex-syntax/unicode-bool" ];
          "unicode-case" = [ "regex-syntax/unicode-case" ];
          "unicode-gencat" = [ "regex-syntax/unicode-gencat" ];
          "unicode-perl" = [ "regex-syntax/unicode-perl" ];
          "unicode-script" = [ "regex-syntax/unicode-script" ];
          "unicode-segment" = [ "regex-syntax/unicode-segment" ];
          "unstable" = [ "pattern" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "aho-corasick" "default" "memchr" "perf" "perf-cache" "perf-dfa" "perf-inline" "perf-literal" "std" "thread_local" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
      };
      "regex-automata" = rec {
        crateName = "regex-automata";
        version = "0.1.8";
        edition = "2015";
        sha256 = "1y89vkwd9z7797lsdsizvhw4lw7i1mhfx97a8315bhkh2wm3rdwj";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "regex-syntax" "utf8-ranges" ];
        };
      };
      "regex-syntax" = rec {
        crateName = "regex-syntax";
        version = "0.6.17";
        edition = "2015";
        sha256 = "1blmlgzcg7in3kcxqabpfzzrbnamr2i671flbrmlqhfps5bvvrbz";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "unicode" ];
          "unicode" = [ "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
        };
        resolvedDefaultFeatures = [ "default" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
      };
      "remove_dir_all" = rec {
        crateName = "remove_dir_all";
        version = "0.5.2";
        edition = "2015";
        sha256 = "0bkrlyg26mgizpiy1yb2hhpgscxcag8r5fnckqsvk25608vzm0sa";
        authors = [
          "Aaronepower <theaaronepower@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "std" "errhandlingapi" "winerror" "fileapi" "winbase" ];
          }
        ];
        
      };
      "render-tree" = rec {
        crateName = "render-tree";
        version = "0.1.1";
        edition = "2018";
        sha256 = "0r0nwdkyqj5rpz62d4q45hi9y8fv4izggs3gpkhprywwy1ymivb8";
        authors = [
          "Yehuda Katz <wycats@gmail.com>"
        ];
        dependencies = [
          {
            name = "itertools";
            packageId = "itertools 0.7.11";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "termcolor";
            packageId = "termcolor";
          }
        ];
        
      };
      "result" = rec {
        crateName = "result";
        version = "1.0.0";
        edition = "2015";
        sha256 = "0q2mslk9mvpdrl5zr1yvlb8ikmynpq5786c8ybn1wpa03rcqwk8r";
        authors = [
          "arcnmx"
        ];
        
      };
      "roxmltree" = rec {
        crateName = "roxmltree";
        version = "0.10.0";
        edition = "2018";
        sha256 = "10m0f13zz115jz66489kr0x1cs6mbjxg0an2bi9biwwfvlpka55z";
        authors = [
          "Evgeniy Reizner <razrfalcon@gmail.com>"
        ];
        dependencies = [
          {
            name = "xmlparser";
            packageId = "xmlparser";
          }
        ];
        
      };
      "rusqlite" = rec {
        crateName = "rusqlite";
        version = "0.21.0";
        edition = "2018";
        sha256 = "0r1ympmq10lhfl27355ngsxhv77p6iwpnwspna27lcdn3f15d9k4";
        authors = [
          "John Gallagher <jgallagher@bignerdranch.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "fallible-iterator";
            packageId = "fallible-iterator";
          }
          {
            name = "fallible-streaming-iterator";
            packageId = "fallible-streaming-iterator";
          }
          {
            name = "libsqlite3-sys";
            packageId = "libsqlite3-sys";
          }
          {
            name = "lru-cache";
            packageId = "lru-cache";
          }
          {
            name = "memchr";
            packageId = "memchr";
          }
          {
            name = "time";
            packageId = "time";
          }
        ];
        features = {
          "array" = [ "vtab" ];
          "backup" = [ "libsqlite3-sys/min_sqlite_version_3_6_23" ];
          "blob" = [ "libsqlite3-sys/min_sqlite_version_3_7_7" ];
          "buildtime_bindgen" = [ "libsqlite3-sys/buildtime_bindgen" ];
          "bundled" = [ "libsqlite3-sys/bundled" ];
          "csvtab" = [ "csv" "vtab" ];
          "functions" = [ "libsqlite3-sys/min_sqlite_version_3_7_7" ];
          "i128_blob" = [ "byteorder" ];
          "series" = [ "vtab" ];
          "session" = [ "libsqlite3-sys/session" "hooks" ];
          "sqlcipher" = [ "libsqlite3-sys/sqlcipher" ];
          "trace" = [ "libsqlite3-sys/min_sqlite_version_3_6_23" ];
          "unlock_notify" = [ "libsqlite3-sys/unlock_notify" ];
          "vtab" = [ "libsqlite3-sys/min_sqlite_version_3_7_7" "lazy_static" ];
          "vtab_v3" = [ "vtab" ];
          "window" = [ "functions" ];
        };
        resolvedDefaultFeatures = [ "blob" "bundled" ];
      };
      "rust-argon2" = rec {
        crateName = "rust-argon2";
        version = "0.7.0";
        edition = "2018";
        sha256 = "05xh5wfxgzq3b6jys8r34f3hmqqfs8ylvf934n9z87wfv95szj1b";
        libName = "argon2";
        authors = [
          "Martijn Rijkeboer <mrr@sru-systems.com>"
        ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64 0.11.0";
          }
          {
            name = "blake2b_simd";
            packageId = "blake2b_simd";
          }
          {
            name = "constant_time_eq";
            packageId = "constant_time_eq";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.7.0";
          }
        ];
        
      };
      "rust-ini" = rec {
        crateName = "rust-ini";
        version = "0.13.0";
        edition = "2015";
        sha256 = "1hifnbgaz01zja5995chy6vjacbif2m76nlxsisw7y1pxx4c2liy";
        libName = "ini";
        authors = [
          "Y. T. Chung <zonyitoo@gmail.com>"
        ];
        
      };
      "rust-stemmers" = rec {
        crateName = "rust-stemmers";
        version = "1.2.0";
        edition = "2015";
        sha256 = "0m6acgdflrrcm17dj7lp7x4sfqqhga24qynv660qinwz04v20sp4";
        authors = [
          "Jakob Demler <jdemler@curry-software.com>"
          "CurrySoftware <info@curry-software.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde 1.0.105";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
        ];
        
      };
      "rustc-demangle" = rec {
        crateName = "rustc-demangle";
        version = "0.1.16";
        edition = "2015";
        sha256 = "10qp42sl1wrdbgbbh8rnay2grm976z7hqgz32c4y09l1c071qsac";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
      "rustc_version" = rec {
        crateName = "rustc_version";
        version = "0.2.3";
        edition = "2015";
        sha256 = "02h3x57lcr8l2pm0a645s9whdh33pn5cnrwvn5cb57vcrc53x3hk";
        authors = [
          "Marvin Löbel <loebel.marvin@gmail.com>"
        ];
        dependencies = [
          {
            name = "semver";
            packageId = "semver";
          }
        ];
        
      };
      "rustyline" = rec {
        crateName = "rustyline";
        version = "6.0.0";
        edition = "2018";
        sha256 = "0p9iynahmfyx66j6zhl2n7xij5x0d41l7n7i4ilqnhmyxj7bwr6y";
        authors = [
          "Katsu Kawakami <kkawa1570@gmail.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "dirs";
            packageId = "dirs 2.0.2";
            optional = true;
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "memchr";
            packageId = "memchr";
          }
          {
            name = "nix";
            packageId = "nix 0.14.1";
            target = { target, features }: target."unix";
          }
          {
            name = "unicode-segmentation";
            packageId = "unicode-segmentation";
          }
          {
            name = "unicode-width";
            packageId = "unicode-width";
          }
          {
            name = "utf8parse";
            packageId = "utf8parse";
            target = { target, features }: target."unix";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "consoleapi" "handleapi" "minwindef" "processenv" "winbase" "wincon" "winuser" ];
          }
        ];
        features = {
          "default" = [ "with-dirs" ];
          "with-dirs" = [ "dirs" ];
        };
        resolvedDefaultFeatures = [ "default" "dirs" "with-dirs" ];
      };
      "ryu" = rec {
        crateName = "ryu";
        version = "1.0.2";
        edition = "2015";
        sha256 = "1j0h74f1xqf9hjkhanp8i20mqc1aw35kr1iq9i79q7713mn51a5z";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
        };
      };
      "safemem" = rec {
        crateName = "safemem";
        version = "0.3.3";
        edition = "2015";
        sha256 = "0wp0d2b2284lw11xhybhaszsczpbq1jbdklkxgifldcknmy3nw7g";
        authors = [
          "Austin Bonander <austin.bonander@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "same-file" = rec {
        crateName = "same-file";
        version = "1.0.6";
        edition = "2018";
        sha256 = "00h5j1w87dmhnvbv9l8bic3y7xxsnjmssvifw2ayvgx9mb1ivz4k";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi-util";
            packageId = "winapi-util";
            target = { target, features }: target."windows";
          }
        ];
        
      };
      "schannel" = rec {
        crateName = "schannel";
        version = "0.1.17";
        edition = "2015";
        sha256 = "15gjmg99gxpwm03vpf7i0ry6bxzxc8z2j44spc74w2pyixp9wyjh";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
          "Steffen Butzer <steffen.butzer@outlook.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            features = [ "lmcons" "minschannel" "securitybaseapi" "schannel" "sspi" "sysinfoapi" "timezoneapi" "winbase" "wincrypt" "winerror" ];
          }
        ];
        
      };
      "scopeguard" = rec {
        crateName = "scopeguard";
        version = "1.0.0";
        edition = "2015";
        sha256 = "03aay84r1f6w87ckbpj6cc4rnsxkxcfs13n5ynxjia0qkgjiabml";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
      };
      "security-framework" = rec {
        crateName = "security-framework";
        version = "0.4.1";
        edition = "2015";
        sha256 = "1c7mvsc0v6dck0qhyy95f605b7gr2blv6m5hxfv9hhwhh6zfvfwp";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
          "Kornel <kornel@geekhood.net>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "core-foundation";
            packageId = "core-foundation 0.7.0";
          }
          {
            name = "core-foundation-sys";
            packageId = "core-foundation-sys 0.7.0";
          }
          {
            name = "security-framework-sys";
            packageId = "security-framework-sys";
          }
        ];
        features = {
          "OSX_10_10" = [ "OSX_10_9" "security-framework-sys/OSX_10_10" ];
          "OSX_10_11" = [ "OSX_10_10" "security-framework-sys/OSX_10_11" ];
          "OSX_10_12" = [ "OSX_10_11" "security-framework-sys/OSX_10_12" ];
          "OSX_10_13" = [ "OSX_10_12" "security-framework-sys/OSX_10_13" "alpn" ];
          "OSX_10_9" = [ "security-framework-sys/OSX_10_9" ];
        };
      };
      "security-framework-sys" = rec {
        crateName = "security-framework-sys";
        version = "0.4.1";
        edition = "2015";
        sha256 = "0k7yh0xkykkkgm7y58530xhy8hii96yq7hwc6b98vxhywcijzz86";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
          "Kornel <kornel@geekhood.net>"
        ];
        dependencies = [
          {
            name = "core-foundation-sys";
            packageId = "core-foundation-sys 0.7.0";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "OSX_10_10" = [ "OSX_10_9" ];
          "OSX_10_11" = [ "OSX_10_10" ];
          "OSX_10_12" = [ "OSX_10_11" ];
          "OSX_10_13" = [ "OSX_10_12" ];
        };
      };
      "semver" = rec {
        crateName = "semver";
        version = "0.9.0";
        edition = "2015";
        sha256 = "00q4lkcj0rrgbhviv9sd4p6qmdsipkwkbra7rh11jrhq5kpvjzhx";
        authors = [
          "Steve Klabnik <steve@steveklabnik.com>"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "semver-parser";
            packageId = "semver-parser";
          }
        ];
        features = {
          "ci" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "semver-parser" = rec {
        crateName = "semver-parser";
        version = "0.7.0";
        edition = "2015";
        sha256 = "18vhypw6zgccnrlm5ps1pwa0khz7ry927iznpr88b87cagr1v2iq";
        authors = [
          "Steve Klabnik <steve@steveklabnik.com>"
        ];
        
      };
      "serde 0.8.23" = rec {
        crateName = "serde";
        version = "0.8.23";
        edition = "2015";
        sha256 = "1j4ajipn0sf4ya0crgcb94s848qp7mfc35n6d0q2rf8rk5skzbcx";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
        ];
        features = {
          "alloc" = [ "unstable" ];
          "collections" = [ "alloc" ];
          "default" = [ "std" ];
          "unstable-testing" = [ "clippy" "unstable" "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "serde 1.0.105" = rec {
        crateName = "serde";
        version = "1.0.105";
        edition = "2015";
        sha256 = "1zrj157dxvmymp5ii60anap2qqks4pkr3fwsp71wi3sv4nzzn1z7";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde_derive";
            packageId = "serde_derive";
            optional = true;
          }
        ];
        devDependencies = [
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
        ];
        features = {
          "default" = [ "std" ];
          "derive" = [ "serde_derive" ];
        };
        resolvedDefaultFeatures = [ "default" "derive" "serde_derive" "std" ];
      };
      "serde-hjson 0.8.2" = rec {
        crateName = "serde-hjson";
        version = "0.8.2";
        edition = "2015";
        sha256 = "0lv1qwis9rr767xv9w27y1g1r71ayf02k2wkypawwlkxsrd3r0qb";
        authors = [
          "Christian Zangl <laktak@cdak.net>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 0.2.11";
          }
          {
            name = "linked-hash-map";
            packageId = "linked-hash-map 0.3.0";
            optional = true;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.1.43";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "serde";
            packageId = "serde 0.8.23";
          }
        ];
        features = {
          "default" = [ "preserve_order" ];
          "preserve_order" = [ "linked-hash-map" "linked-hash-map/serde_impl" ];
          "unstable-testing" = [ "clippy" ];
        };
        resolvedDefaultFeatures = [ "default" "linked-hash-map" "preserve_order" ];
      };
      "serde-hjson 0.9.1" = rec {
        crateName = "serde-hjson";
        version = "0.9.1";
        edition = "2015";
        sha256 = "1y3lzs8556bxqa9jfdyg38pd5jjffblczikckwh571d8m074wfka";
        authors = [
          "Christian Zangl <laktak@cdak.net>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "linked-hash-map";
            packageId = "linked-hash-map 0.3.0";
            optional = true;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.1.43";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "serde";
            packageId = "serde 0.8.23";
          }
        ];
        features = {
          "default" = [ "preserve_order" ];
          "preserve_order" = [ "linked-hash-map" "linked-hash-map/serde_impl" ];
          "unstable-testing" = [ "clippy" ];
        };
        resolvedDefaultFeatures = [ "default" "linked-hash-map" "preserve_order" ];
      };
      "serde-value" = rec {
        crateName = "serde-value";
        version = "0.5.3";
        edition = "2015";
        sha256 = "0kz4i4a2if0la082ww64bbf38b0b1nycdm2rlp0ymi7d7n3kyrks";
        authors = [
          "arcnmx"
        ];
        dependencies = [
          {
            name = "ordered-float";
            packageId = "ordered-float";
          }
          {
            name = "serde";
            packageId = "serde 1.0.105";
          }
        ];
        
      };
      "serde_bytes" = rec {
        crateName = "serde_bytes";
        version = "0.11.3";
        edition = "2018";
        sha256 = "1bl45kf3c71xclv7wzk5525nswm4bgsnjd3s1s15f4k2a8whfnij";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde 1.0.105";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "serde/alloc" ];
          "default" = [ "std" ];
          "std" = [ "serde/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "serde_derive" = rec {
        crateName = "serde_derive";
        version = "1.0.105";
        edition = "2015";
        sha256 = "1y5gzwpy8yjv9pwh1js11vr18nfz4gg1g2kmyr6p58hvavy00pdc";
        procMacro = true;
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "visit" ];
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "serde_ini" = rec {
        crateName = "serde_ini";
        version = "0.2.0";
        edition = "2015";
        sha256 = "0f8ir1bbcdyad50aj1c53dkiwr24x6dr88f045skl1xvwa3nc8zb";
        authors = [
          "arcnmx"
        ];
        dependencies = [
          {
            name = "result";
            packageId = "result";
          }
          {
            name = "serde";
            packageId = "serde 1.0.105";
          }
          {
            name = "void";
            packageId = "void";
          }
        ];
        
      };
      "serde_json" = rec {
        crateName = "serde_json";
        version = "1.0.48";
        edition = "2018";
        sha256 = "09cwggp707hf0qswzrg00nffr09prx99f6qlajqnqbacbpksswck";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "indexmap";
            packageId = "indexmap";
            optional = true;
          }
          {
            name = "itoa";
            packageId = "itoa";
            usesDefaultFeatures = false;
          }
          {
            name = "ryu";
            packageId = "ryu";
          }
          {
            name = "serde";
            packageId = "serde 1.0.105";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "serde/alloc" ];
          "default" = [ "std" ];
          "preserve_order" = [ "indexmap" ];
          "std" = [ "serde/std" ];
        };
        resolvedDefaultFeatures = [ "default" "indexmap" "preserve_order" "std" ];
      };
      "serde_test" = rec {
        crateName = "serde_test";
        version = "0.8.23";
        edition = "2015";
        sha256 = "1m939j7cgs7i58r6vxf0ffp3nbr8advr8p9dqa9w8zk0z2yks2qi";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde 0.8.23";
          }
        ];
        
      };
      "serde_urlencoded" = rec {
        crateName = "serde_urlencoded";
        version = "0.6.1";
        edition = "2015";
        sha256 = "15rcwfkff0md5i231m2ym5756ksw1mkh5b5g2rw72wsc5mzdgicy";
        authors = [
          "Anthony Ramine <n.oxyde@gmail.com>"
        ];
        dependencies = [
          {
            name = "dtoa";
            packageId = "dtoa";
          }
          {
            name = "itoa";
            packageId = "itoa";
          }
          {
            name = "serde";
            packageId = "serde 1.0.105";
          }
          {
            name = "url";
            packageId = "url";
          }
        ];
        
      };
      "serde_yaml" = rec {
        crateName = "serde_yaml";
        version = "0.8.11";
        edition = "2018";
        sha256 = "0d9wdjrlx9gxg80kzc6pvdwz5pwhja2n8n0bxja9vv61kzqif6v9";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "dtoa";
            packageId = "dtoa";
          }
          {
            name = "linked-hash-map";
            packageId = "linked-hash-map 0.5.2";
          }
          {
            name = "serde";
            packageId = "serde 1.0.105";
          }
          {
            name = "yaml-rust";
            packageId = "yaml-rust";
          }
        ];
        
      };
      "shell32-sys" = rec {
        crateName = "shell32-sys";
        version = "0.1.2";
        edition = "2015";
        sha256 = "0b0jjnv8rr4flllvpx9lkfvvxdl3hac53cd2klf14mqz2134pq4y";
        libName = "shell32";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
          }
        ];
        buildDependencies = [
          {
            name = "winapi-build";
            packageId = "winapi-build";
          }
        ];
        
      };
      "shellexpand 1.1.1" = rec {
        crateName = "shellexpand";
        version = "1.1.1";
        edition = "2015";
        sha256 = "1dd6rcq423jcf1wipbwymfqv6z3yvqhx9wmaxsdiyhbvvknpjzic";
        authors = [
          "Vladimir Matveev <vladimir.matweev@gmail.com>"
        ];
        dependencies = [
          {
            name = "dirs";
            packageId = "dirs 2.0.2";
          }
        ];
        
      };
      "shellexpand 2.0.0" = rec {
        crateName = "shellexpand";
        version = "2.0.0";
        edition = "2015";
        sha256 = "00y6kf5nvrpmbsyyxic1r1w4yqr0lkz5dxjnsdj99bws58k24aws";
        authors = [
          "Vladimir Matveev <vmatveev@citrine.cc>"
        ];
        dependencies = [
          {
            name = "dirs";
            packageId = "dirs 2.0.2";
          }
        ];
        
      };
      "signal-hook" = rec {
        crateName = "signal-hook";
        version = "0.1.13";
        edition = "2015";
        sha256 = "0b0yh6hlb5hs5kq6adyk0bn168y1ncymxvlizlygaabad2hz7f8h";
        authors = [
          "Michal 'vorner' Vaner <vorner@vorner.cz>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "mio";
            packageId = "mio";
            optional = true;
          }
          {
            name = "signal-hook-registry";
            packageId = "signal-hook-registry";
          }
        ];
        features = {
          "mio-support" = [ "mio" ];
          "tokio-support" = [ "futures" "mio-support" "tokio-reactor" ];
        };
        resolvedDefaultFeatures = [ "mio" "mio-support" ];
      };
      "signal-hook-registry" = rec {
        crateName = "signal-hook-registry";
        version = "1.2.0";
        edition = "2015";
        sha256 = "0haz828bif1lbp3alx17zkcy5hwy15bbpmvks72j8iznx7npix4l";
        authors = [
          "Michal 'vorner' Vaner <vorner@vorner.cz>"
          "Masaki Hara <ackie.h.gmai@gmail.com>"
        ];
        dependencies = [
          {
            name = "arc-swap";
            packageId = "arc-swap";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        
      };
      "slab" = rec {
        crateName = "slab";
        version = "0.4.2";
        edition = "2015";
        sha256 = "1y59xsa27jk84sxzswjk60xcjf8b4fm5960jwpznrrcmasyva4f1";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        
      };
      "sluice" = rec {
        crateName = "sluice";
        version = "0.4.2";
        edition = "2018";
        sha256 = "0c9mbbf9c1180yrld2fnfy0d0wbl4w1a7s3dkv0knx78ngghcz8a";
        authors = [
          "Stephen M. Coakley <me@stephencoakley.com>"
        ];
        dependencies = [
          {
            name = "futures-channel-preview";
            packageId = "futures-channel-preview";
          }
          {
            name = "futures-core-preview";
            packageId = "futures-core-preview";
          }
          {
            name = "futures-io-preview";
            packageId = "futures-io-preview";
          }
        ];
        features = {
        };
      };
      "smallvec" = rec {
        crateName = "smallvec";
        version = "1.2.0";
        edition = "2018";
        sha256 = "1z6f47i3qpg9pdjzzvb0g5i1vvdm2ymk3kqc1mdnl8fdkgnb4bsw";
        libPath = "lib.rs";
        authors = [
          "Simon Sapin <simon.sapin@exyr.org>"
        ];
        features = {
        };
      };
      "socket2" = rec {
        crateName = "socket2";
        version = "0.3.11";
        edition = "2018";
        sha256 = "11bdcz04i106g4q7swkll0qxrb4287srqd2k3aq2q6i22zjlvdz8";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
            target = { target, features }: (target."unix" || (target."os" == "redox"));
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" || (target."os" == "redox"));
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "handleapi" "ws2def" "ws2ipdef" "ws2tcpip" "minwindef" ];
          }
        ];
        features = {
        };
      };
      "sourcefile" = rec {
        crateName = "sourcefile";
        version = "0.1.4";
        edition = "2015";
        sha256 = "1lwa6973zs4bgj29my7agfjgk4nw9hp6j7dfnr13nid85fw7rxsb";
        authors = [
          "Richard Dodd <richard.o.dodd@gmail.com>"
        ];
        
      };
      "starship" = rec {
        crateName = "starship";
        version = "0.38.0";
        edition = "2018";
        crateBin = [];
        sha256 = "1z16xfyg1bqsrfav3fv1n63kkjvxgh2ycv3g4zp1jzxqh73xrvj3";
        authors = [
          "Matan Kushner <hello@matchai.me>"
        ];
        dependencies = [
          {
            name = "ansi_term";
            packageId = "ansi_term 0.12.1";
          }
          {
            name = "attohttpc";
            packageId = "attohttpc";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "tls" "form" ];
          }
          {
            name = "battery";
            packageId = "battery";
            optional = true;
          }
          {
            name = "byte-unit";
            packageId = "byte-unit";
          }
          {
            name = "chrono";
            packageId = "chrono";
          }
          {
            name = "clap";
            packageId = "clap";
          }
          {
            name = "dirs";
            packageId = "dirs 2.0.2";
          }
          {
            name = "gethostname";
            packageId = "gethostname";
          }
          {
            name = "git2";
            packageId = "git2";
            usesDefaultFeatures = false;
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "nom";
            packageId = "nom 5.1.1";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "open";
            packageId = "open";
          }
          {
            name = "os_info";
            packageId = "os_info";
          }
          {
            name = "path-slash";
            packageId = "path-slash";
          }
          {
            name = "pretty_env_logger";
            packageId = "pretty_env_logger 0.4.0";
          }
          {
            name = "rayon";
            packageId = "rayon";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "starship_module_config_derive";
            packageId = "starship_module_config_derive";
          }
          {
            name = "sysinfo";
            packageId = "sysinfo";
          }
          {
            name = "term_size";
            packageId = "term_size";
          }
          {
            name = "textwrap";
            packageId = "textwrap";
          }
          {
            name = "toml";
            packageId = "toml 0.5.6";
          }
          {
            name = "unicode-segmentation";
            packageId = "unicode-segmentation";
          }
          {
            name = "unicode-width";
            packageId = "unicode-width";
          }
          {
            name = "urlencoding";
            packageId = "urlencoding";
          }
          {
            name = "yaml-rust";
            packageId = "yaml-rust";
          }
        ];
        features = {
          "default" = [ "battery" "http" ];
          "http" = [ "attohttpc" ];
          "tls-vendored" = [ "native-tls/vendored" ];
        };
        resolvedDefaultFeatures = [ "attohttpc" "battery" "default" "http" ];
      };
      "starship_module_config_derive" = rec {
        crateName = "starship_module_config_derive";
        version = "0.1.1";
        edition = "2018";
        sha256 = "0knhif0b71f7akql1ndr87ndw9vb4q8015xbi381blbs8vwcs74x";
        procMacro = true;
        authors = [
          "Matan Kushner <hello@matchai.me>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];
        
      };
      "static_assertions" = rec {
        crateName = "static_assertions";
        version = "0.3.4";
        edition = "2015";
        sha256 = "1lw33i89888yb3x29c6dv4mrkg3534n0rlg3r7qzh4p58xmv6gkz";
        authors = [
          "Nikolai Vazquez"
        ];
        features = {
        };
      };
      "strip-ansi-escapes" = rec {
        crateName = "strip-ansi-escapes";
        version = "0.1.0";
        edition = "2015";
        sha256 = "1vmc6cwxsvp02b17b6x42mnnnn5vlc1dqbcqc2a71yms59p6fqwx";
        authors = [
          "Ted Mielczarek <ted@mielczarek.org>"
        ];
        dependencies = [
          {
            name = "vte";
            packageId = "vte";
          }
        ];
        
      };
      "strsim" = rec {
        crateName = "strsim";
        version = "0.8.0";
        edition = "2015";
        sha256 = "0sjsm7hrvjdifz661pjxq5w4hf190hx53fra8dfvamacvff139cf";
        authors = [
          "Danny Guo <dannyguo91@gmail.com>"
        ];
        
      };
      "surf" = rec {
        crateName = "surf";
        version = "1.0.3";
        edition = "2018";
        sha256 = "1kksp41r5w7pwv1bj8pq5cngny24flq4mybxyhbfycx8z04806kl";
        authors = [
          "Yoshua Wuyts <yoshuawuyts@gmail.com>"
        ];
        dependencies = [
          {
            name = "futures-preview";
            packageId = "futures-preview";
            features = [ "compat" "io-compat" ];
          }
          {
            name = "http";
            packageId = "http 0.1.21";
          }
          {
            name = "isahc";
            packageId = "isahc";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: (!(target."arch" == "wasm32"));
            features = [ "http2" ];
          }
          {
            name = "js-sys";
            packageId = "js-sys";
            optional = true;
            target = { target, features }: (target."arch" == "wasm32");
          }
          {
            name = "log";
            packageId = "log";
            features = [ "kv_unstable" ];
          }
          {
            name = "mime";
            packageId = "mime";
          }
          {
            name = "mime_guess";
            packageId = "mime_guess";
          }
          {
            name = "serde";
            packageId = "serde 1.0.105";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "serde_urlencoded";
            packageId = "serde_urlencoded";
          }
          {
            name = "url";
            packageId = "url";
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
            optional = true;
            target = { target, features }: (target."arch" == "wasm32");
          }
          {
            name = "wasm-bindgen-futures";
            packageId = "wasm-bindgen-futures";
            optional = true;
            target = { target, features }: (target."arch" == "wasm32");
            features = [ "futures_0_3" ];
          }
          {
            name = "web-sys";
            packageId = "web-sys";
            optional = true;
            target = { target, features }: (target."arch" == "wasm32");
            features = [ "AbortSignal" "Headers" "ObserverCallback" "ReferrerPolicy" "Request" "RequestCache" "RequestCredentials" "RequestInit" "RequestMode" "RequestRedirect" "Response" "Window" ];
          }
        ];
        devDependencies = [
          {
            name = "serde";
            packageId = "serde 1.0.105";
            features = [ "derive" ];
          }
        ];
        features = {
          "curl-client" = [ "isahc" ];
          "default" = [ "native-client" "middleware-logger" ];
          "hyper-client" = [ "hyper" "runtime" "runtime-raw" "runtime-tokio" ];
          "native-client" = [ "curl-client" "wasm-client" ];
          "wasm-client" = [ "js-sys" "web-sys" "wasm-bindgen" "wasm-bindgen-futures" ];
        };
        resolvedDefaultFeatures = [ "curl-client" "default" "isahc" "js-sys" "middleware-logger" "native-client" "wasm-bindgen" "wasm-bindgen-futures" "wasm-client" "web-sys" ];
      };
      "syn" = rec {
        crateName = "syn";
        version = "1.0.14";
        edition = "2018";
        sha256 = "1xf8g9a3yl41027g5napiwfd7r87y734lf2dqdyyzyfzv183avxg";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
            usesDefaultFeatures = false;
          }
          {
            name = "quote";
            packageId = "quote";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "unicode-xid";
            packageId = "unicode-xid";
          }
        ];
        features = {
          "default" = [ "derive" "parsing" "printing" "clone-impls" "proc-macro" ];
          "printing" = [ "quote" ];
          "proc-macro" = [ "proc-macro2/proc-macro" "quote/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "clone-impls" "default" "derive" "extra-traits" "fold" "full" "parsing" "printing" "proc-macro" "quote" "visit" "visit-mut" ];
      };
      "syn-mid" = rec {
        crateName = "syn-mid";
        version = "0.5.0";
        edition = "2018";
        sha256 = "12ikg5jfklixq0wsgfl7sdzjqlxgq50ygklxy4f972hjdjgm7qvv";
        authors = [
          "Taiki Endo <te316e89@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            usesDefaultFeatures = false;
            features = [ "parsing" "printing" "derive" ];
          }
        ];
        features = {
          "clone-impls" = [ "syn/clone-impls" ];
        };
      };
      "synstructure" = rec {
        crateName = "synstructure";
        version = "0.12.3";
        edition = "2018";
        sha256 = "0igmc5fzpk6fg7kgff914j05lbpc6ai2wmji312v2h8vvjhnwrb7";
        authors = [
          "Nika Layzell <nika@thelayzells.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
            usesDefaultFeatures = false;
          }
          {
            name = "quote";
            packageId = "quote";
            usesDefaultFeatures = false;
          }
          {
            name = "syn";
            packageId = "syn";
            usesDefaultFeatures = false;
            features = [ "derive" "parsing" "printing" "clone-impls" "visit" "extra-traits" ];
          }
          {
            name = "unicode-xid";
            packageId = "unicode-xid";
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
          "proc-macro" = [ "proc-macro2/proc-macro" "syn/proc-macro" "quote/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "syntect" = rec {
        crateName = "syntect";
        version = "3.2.0";
        edition = "2015";
        sha256 = "0yqnja471ddz90q8wm8mmk37jxg5y0fg09rpzhpijhx5qlqqh2z8";
        authors = [
          "Tristan Hume <tristan@thume.ca>"
        ];
        dependencies = [
          {
            name = "bincode";
            packageId = "bincode";
            optional = true;
          }
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "flate2";
            packageId = "flate2";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "fnv";
            packageId = "fnv";
            optional = true;
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "lazycell";
            packageId = "lazycell";
          }
          {
            name = "onig";
            packageId = "onig";
            optional = true;
          }
          {
            name = "plist";
            packageId = "plist";
          }
          {
            name = "regex-syntax";
            packageId = "regex-syntax";
            optional = true;
          }
          {
            name = "serde";
            packageId = "serde 1.0.105";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "walkdir";
            packageId = "walkdir";
          }
          {
            name = "yaml-rust";
            packageId = "yaml-rust";
            optional = true;
          }
        ];
        features = {
          "default" = [ "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create" ];
          "dump-create" = [ "flate2/default" "bincode" ];
          "dump-create-rs" = [ "flate2/rust_backend" "bincode" ];
          "dump-load" = [ "flate2/default" "bincode" ];
          "dump-load-rs" = [ "flate2/rust_backend" "bincode" ];
          "html" = [ "parsing" "assets" ];
          "metadata" = [ "parsing" ];
          "parsing" = [ "onig" "regex-syntax" "fnv" ];
          "yaml-load" = [ "yaml-rust" "parsing" ];
        };
        resolvedDefaultFeatures = [ "assets" "bincode" "default" "dump-create" "dump-load" "flate2" "fnv" "html" "onig" "parsing" "regex-syntax" "yaml-load" "yaml-rust" ];
      };
      "sysinfo" = rec {
        crateName = "sysinfo";
        version = "0.11.7";
        edition = "2015";
        sha256 = "0n089fjnqkd65h9dh1lr5srjn9iq7g0h6m94m4sas9wp0lzpjpg1";type = [ "rlib" "cdylib" ];
        authors = [
          "Guillaume Gomez <guillaume1.gomez@gmail.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "doc-comment";
            packageId = "doc-comment";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (!((target."os" == "unknown") || (target."arch" == "wasm32")));
          }
          {
            name = "ntapi";
            packageId = "ntapi";
            target = { target, features }: target."windows";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "rayon";
            packageId = "rayon";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "fileapi" "handleapi" "ifdef" "ioapiset" "minwindef" "pdh" "psapi" "synchapi" "sysinfoapi" "winbase" "winerror" "winioctl" "winnt" "oleauto" "wbemcli" "rpcdce" "combaseapi" "objidl" "powerbase" "netioapi" "lmcons" "lmaccess" "lmapibuf" "memoryapi" "shellapi" ];
          }
        ];
        features = {
          "debug" = [ "libc/extra_traits" ];
        };
      };
      "tempfile" = rec {
        crateName = "tempfile";
        version = "3.1.0";
        edition = "2018";
        sha256 = "1a9cfdqw70n7bcnkx05aih9xdba8lqazmqlkjpkmn2la6gcj8vks";
        authors = [
          "Steven Allen <steven@stebalien.com>"
          "The Rust Project Developers"
          "Ashley Mannix <ashleymannix@live.com.au>"
          "Jason White <jasonaw0@gmail.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "rand";
            packageId = "rand";
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "remove_dir_all";
            packageId = "remove_dir_all";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "fileapi" "handleapi" "winbase" ];
          }
        ];
        
      };
      "term" = rec {
        crateName = "term";
        version = "0.5.2";
        edition = "2015";
        sha256 = "0hkgjrfisj6zjwz525639pmsvzhlc48a0h65nw87qrdp6jihdlgd";
        authors = [
          "The Rust Project Developers"
          "Steven Allen"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "dirs";
            packageId = "dirs 1.0.5";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "consoleapi" "wincon" "handleapi" "fileapi" ];
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "term_size" = rec {
        crateName = "term_size";
        version = "0.3.1";
        edition = "2015";
        sha256 = "09wk3173ngmb710qs9rwgibq4w250q8lgnwjvb9cypc1vdk9lnwy";
        authors = [
          "Kevin K. <kbknapp@gmail.com>"
          "Benjamin Sago <ogham@bsago.me>"
        ];
        dependencies = [
          {
            name = "kernel32-sys";
            packageId = "kernel32-sys";
            target = { target, features }: (target."os" == "windows");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (!(target."os" == "windows"));
          }
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
            target = { target, features }: (target."os" == "windows");
          }
        ];
        features = {
          "lints" = [ "clippy" "nightly" ];
          "travis" = [ "lints" "nightly" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "termcolor" = rec {
        crateName = "termcolor";
        version = "1.1.0";
        edition = "2018";
        sha256 = "0pyp8vc0gx7124y80ixdl6plbfn1yjhw04i875k5fz2dk8lglsxv";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi-util";
            packageId = "winapi-util";
            target = { target, features }: target."windows";
          }
        ];
        
      };
      "textwrap" = rec {
        crateName = "textwrap";
        version = "0.11.0";
        edition = "2015";
        sha256 = "0q5hky03ik3y50s9sz25r438bc4nwhqc6dqwynv4wylc807n29nk";
        authors = [
          "Martin Geisler <martin@geisler.net>"
        ];
        dependencies = [
          {
            name = "term_size";
            packageId = "term_size";
            optional = true;
          }
          {
            name = "unicode-width";
            packageId = "unicode-width";
          }
        ];
        
        resolvedDefaultFeatures = [ "term_size" ];
      };
      "thiserror" = rec {
        crateName = "thiserror";
        version = "1.0.10";
        edition = "2018";
        sha256 = "1b8srynh2gxsf572jg8wawd32qv7sjinxkicn4r498cc07yq8mi0";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "thiserror-impl";
            packageId = "thiserror-impl";
          }
        ];
        
      };
      "thiserror-impl" = rec {
        crateName = "thiserror-impl";
        version = "1.0.10";
        edition = "2018";
        sha256 = "19z5vkmmxpkq36nr76agz149k9zgwgf9nc2qzd2fsl501kjx5r2p";
        procMacro = true;
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];
        
      };
      "thread_local" = rec {
        crateName = "thread_local";
        version = "1.0.1";
        edition = "2015";
        sha256 = "054vlrr1vsdy1h4b7n99mr24pnj8928ig9qwzg36wnkld4dns36l";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
        ];
        
      };
      "threadpool" = rec {
        crateName = "threadpool";
        version = "1.7.1";
        edition = "2015";
        sha256 = "0rd89n1q7vy47w4c32cnynibffv9kj3jy3dwr0536n9lbw5ckw72";
        authors = [
          "The Rust Project Developers"
          "Corey Farwell <coreyf@rwell.org>"
          "Stefan Schindler <dns2utf8@estada.ch>"
        ];
        dependencies = [
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
        ];
        
      };
      "time" = rec {
        crateName = "time";
        version = "0.1.42";
        edition = "2015";
        sha256 = "0vsbvsz0ryxb35dy9j4anxvy8zlaplmjmi0a4z4l64bc135cz3fv";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "std" "minwinbase" "minwindef" "ntdef" "profileapi" "sysinfoapi" "timezoneapi" ];
          }
        ];
        devDependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            features = [ "std" "processthreadsapi" "winbase" ];
          }
        ];
        
      };
      "tint" = rec {
        crateName = "tint";
        version = "1.0.1";
        edition = "2015";
        sha256 = "15k89pp3ddxczfnv2j995yvy02mfpmjrmxmv7mkp8c2acrq4bwks";
        authors = [
          "Brian Savage <savage13@gmail.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 0.2.11";
          }
        ];
        
      };
      "tokio-io" = rec {
        crateName = "tokio-io";
        version = "0.1.13";
        edition = "2015";
        sha256 = "0x06zyzinans1pn90g6i150lgixijdf1cg8y2gipjd09ms58dz2p";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.4.12";
          }
          {
            name = "futures";
            packageId = "futures 0.1.29";
          }
          {
            name = "log";
            packageId = "log";
          }
        ];
        
      };
      "toml 0.4.10" = rec {
        crateName = "toml";
        version = "0.4.10";
        edition = "2015";
        sha256 = "07qilkzinn8z13vq2sss65n2lza7wrmqpvkbclw919m3f7y691km";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde 1.0.105";
          }
        ];
        
      };
      "toml 0.5.6" = rec {
        crateName = "toml";
        version = "0.5.6";
        edition = "2018";
        sha256 = "06n7j8z63hj6g0kj2x6sqwxnm4q3s0q5d873bdk41vqy1cb2vjgz";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde 1.0.105";
          }
        ];
        features = {
          "preserve_order" = [ "indexmap" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "trash" = rec {
        crateName = "trash";
        version = "1.0.0";
        edition = "2018";
        sha256 = "1y13wf9aqb8rf4dlfzchsminf7r54g1h6b7fn64yjjaza0qlvwpj";
        authors = [
          "Artur Kovacs <kovacs.artur.barnabas@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "shellapi" "winerror" ];
          }
        ];
        
      };
      "typed-arena" = rec {
        crateName = "typed-arena";
        version = "1.7.0";
        edition = "2015";
        sha256 = "0va4q7439qzlxh9acd9nba7m7sljdh7xz1gp8l0i597b0y025cm9";
        libName = "typed_arena";
        authors = [
          "Simon Sapin <simon.sapin@exyr.org>"
          "Nick Fitzgerald <fitzgen@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "typenum" = rec {
        crateName = "typenum";
        version = "1.11.2";
        edition = "2015";
        sha256 = "1ybmfpp7j37zmaw50w35wiwx66lbpr0yp1312c0i333b5pz869vd";
        build = "build/main.rs";
        authors = [
          "Paho Lurie-Gregg <paho@paholg.com>"
          "Andre Bogus <bogusandre@gmail.com>"
        ];
        features = {
        };
      };
      "typetag" = rec {
        crateName = "typetag";
        version = "0.1.4";
        edition = "2018";
        sha256 = "1zhwhdg2bvdbcr68gkz0nf8x8s3caghq0vd0d3xrbmi98142rfvf";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "erased-serde";
            packageId = "erased-serde";
          }
          {
            name = "inventory";
            packageId = "inventory";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "serde";
            packageId = "serde 1.0.105";
            features = [ "derive" ];
          }
          {
            name = "typetag-impl";
            packageId = "typetag-impl";
          }
        ];
        
      };
      "typetag-impl" = rec {
        crateName = "typetag-impl";
        version = "0.1.4";
        edition = "2018";
        sha256 = "01020077hq6afzf6wkx8fszpnr9s5j7bnph51g7wa3jdkrwx8gxn";
        procMacro = true;
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" ];
          }
        ];
        
      };
      "umask" = rec {
        crateName = "umask";
        version = "0.1.8";
        edition = "2018";
        sha256 = "0rvhf2rxlh4la6m5fzqv6cx9qjpcgwx5294ivc8dbbaaxdd2xv6k";
        authors = [
          "dystroy <denys.seguret@gmail.com>"
        ];
        
      };
      "unicase" = rec {
        crateName = "unicase";
        version = "2.6.0";
        edition = "2015";
        sha256 = "1xmlbink4ycgxrkjspp0mf7pghcx4m7vxq7fpfm04ikr2zk7pwsh";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check 0.9.1";
          }
        ];
        features = {
        };
      };
      "unicode-bidi" = rec {
        crateName = "unicode-bidi";
        version = "0.3.4";
        edition = "2015";
        sha256 = "1malx8ljgm7v1gbaazkn7iicy5wj0bwcyadj3l727a38ch6bvwj9";
        libName = "unicode_bidi";
        authors = [
          "The Servo Project Developers"
        ];
        dependencies = [
          {
            name = "matches";
            packageId = "matches";
          }
        ];
        features = {
          "flame_it" = [ "flame" "flamer" ];
          "with_serde" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "unicode-normalization" = rec {
        crateName = "unicode-normalization";
        version = "0.1.12";
        edition = "2015";
        sha256 = "195gb4fzlgg4g9cv6w057ncpmvvnx30r00w9hj114knhmlmm6yal";
        authors = [
          "kwantam <kwantam@gmail.com>"
        ];
        dependencies = [
          {
            name = "smallvec";
            packageId = "smallvec";
          }
        ];
        
      };
      "unicode-segmentation" = rec {
        crateName = "unicode-segmentation";
        version = "1.6.0";
        edition = "2015";
        sha256 = "1h7d48mzpi8hwf5cvnq07warkv86pvapzzzf32hvbjsk20yiagp8";
        authors = [
          "kwantam <kwantam@gmail.com>"
          "Manish Goregaokar <manishsmail@gmail.com>"
        ];
        features = {
        };
      };
      "unicode-width" = rec {
        crateName = "unicode-width";
        version = "0.1.7";
        edition = "2015";
        sha256 = "0yflmxkxmm89ckrb3sz58whn491aycrj8cxra0hzzlb72x9rvana";
        authors = [
          "kwantam <kwantam@gmail.com>"
          "Manish Goregaokar <manishsmail@gmail.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "std" "core" "compiler_builtins" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "unicode-xid" = rec {
        crateName = "unicode-xid";
        version = "0.2.0";
        edition = "2015";
        sha256 = "0z09fn515xm7zyr0mmdyxa9mx2f7azcpv74pqmg611iralwpcvl2";
        authors = [
          "erick.tryzelaar <erick.tryzelaar@gmail.com>"
          "kwantam <kwantam@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "uom 0.26.0" = rec {
        crateName = "uom";
        version = "0.26.0";
        edition = "2015";
        sha256 = "1i4dggf4nxji7z1slq0wql2n41c6h8b7k43h65v5bb7pqmp7kv2c";
        authors = [
          "Mike Boutin <mike.boutin@gmail.com>"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
            usesDefaultFeatures = false;
          }
          {
            name = "typenum";
            packageId = "typenum";
          }
        ];
        features = {
          "bigint" = [ "bigint-support" ];
          "bigint-support" = [ "num-bigint" "num-rational/bigint" ];
          "bigrational" = [ "bigint-support" ];
          "biguint" = [ "bigint-support" ];
          "default" = [ "autoconvert" "f32" "f64" "si" "std" ];
          "i128" = [ "rational-support" ];
          "i16" = [ "rational-support" ];
          "i32" = [ "rational-support" ];
          "i64" = [ "rational-support" ];
          "i8" = [ "rational-support" ];
          "isize" = [ "rational-support" ];
          "rational" = [ "rational-support" ];
          "rational-support" = [ "num-rational" ];
          "rational32" = [ "rational-support" ];
          "rational64" = [ "rational-support" ];
          "std" = [ "num-traits/std" ];
          "u128" = [ "rational-support" ];
          "u16" = [ "rational-support" ];
          "u32" = [ "rational-support" ];
          "u64" = [ "rational-support" ];
          "u8" = [ "rational-support" ];
          "use_serde" = [ "serde" ];
          "usize" = [ "rational-support" ];
        };
        resolvedDefaultFeatures = [ "autoconvert" "default" "f32" "f64" "si" "std" ];
      };
      "uom 0.27.0" = rec {
        crateName = "uom";
        version = "0.27.0";
        edition = "2015";
        sha256 = "1kg0ps3v5fm0z1p4g6j53rl3n4jxn4n8g18qlxnq1dxw8kxh9z2i";
        authors = [
          "Mike Boutin <mike.boutin@gmail.com>"
        ];
        dependencies = [
          {
            name = "num-rational";
            packageId = "num-rational";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
            usesDefaultFeatures = false;
          }
          {
            name = "typenum";
            packageId = "typenum";
          }
        ];
        features = {
          "bigint" = [ "bigint-support" ];
          "bigint-support" = [ "num-bigint" "num-rational/bigint" ];
          "bigrational" = [ "bigint-support" ];
          "biguint" = [ "bigint-support" ];
          "default" = [ "autoconvert" "f32" "f64" "si" "std" ];
          "i128" = [ "rational-support" ];
          "i16" = [ "rational-support" ];
          "i32" = [ "rational-support" ];
          "i64" = [ "rational-support" ];
          "i8" = [ "rational-support" ];
          "isize" = [ "rational-support" ];
          "rational" = [ "rational-support" ];
          "rational-support" = [ "num-rational" ];
          "rational32" = [ "rational-support" ];
          "rational64" = [ "rational-support" ];
          "std" = [ "num-traits/std" ];
          "u128" = [ "rational-support" ];
          "u16" = [ "rational-support" ];
          "u32" = [ "rational-support" ];
          "u64" = [ "rational-support" ];
          "u8" = [ "rational-support" ];
          "use_serde" = [ "serde" ];
          "usize" = [ "rational-support" ];
        };
        resolvedDefaultFeatures = [ "autoconvert" "f32" "f64" "num-rational" "rational-support" "si" "std" "u64" ];
      };
      "url" = rec {
        crateName = "url";
        version = "2.1.1";
        edition = "2015";
        sha256 = "1jw7cw8br4xvjb92ddrrh1r7jvqhyhiknnnfpgq9np63fs24m7c2";
        authors = [
          "The rust-url developers"
        ];
        dependencies = [
          {
            name = "idna";
            packageId = "idna";
          }
          {
            name = "matches";
            packageId = "matches";
          }
          {
            name = "percent-encoding";
            packageId = "percent-encoding";
          }
        ];
        
      };
      "urlencoding" = rec {
        crateName = "urlencoding";
        version = "1.0.0";
        edition = "2015";
        sha256 = "1v9piz5dwrkiyk0w9cfr55y9rqnr90rw9r52wmblrfx854b5dwrx";
        authors = [
          "Bertram Truong <b@bertramtruong.com>"
        ];
        
      };
      "user32-sys" = rec {
        crateName = "user32-sys";
        version = "0.2.0";
        edition = "2015";
        sha256 = "0ivxc7hmsxax9crdhxdd1nqwik4s9lhb2x59lc8b88bv20fp3x2f";
        libName = "user32";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
          }
        ];
        buildDependencies = [
          {
            name = "winapi-build";
            packageId = "winapi-build";
          }
        ];
        
      };
      "users" = rec {
        crateName = "users";
        version = "0.9.1";
        edition = "2015";
        sha256 = "1kxl3y2hcrqqip7jpqn5mz7xlpbwmmpfmaza0xnyrhx0mrkl4by7";
        authors = [
          "Benjamin Sago <ogham@bsago.me>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "default" = [ "cache" "mock" ];
        };
        resolvedDefaultFeatures = [ "cache" "default" "mock" ];
      };
      "utf8parse" = rec {
        crateName = "utf8parse";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0zamsj2986shm4x9zncjf2m5qy9scaw7qnxw4f89b2afpg6a8wl7";
        authors = [
          "Joe Wilm <joe@jwilm.com>"
        ];
        
      };
      "vcpkg" = rec {
        crateName = "vcpkg";
        version = "0.2.8";
        edition = "2015";
        sha256 = "0s1ijdrsg6917imja2hb07l0z4vbx7ydm8m2i1n9g62fg7r3ki1z";
        authors = [
          "Jim McGrath <jimmc2@gmail.com>"
        ];
        
      };
      "vec_map" = rec {
        crateName = "vec_map";
        version = "0.8.1";
        edition = "2015";
        sha256 = "06n8hw4hlbcz328a3gbpvmy0ma46vg1lc0r5wf55900szf3qdiq5";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Jorge Aparicio <japaricious@gmail.com>"
          "Alexis Beingessner <a.beingessner@gmail.com>"
          "Brian Anderson <>"
          "tbu- <>"
          "Manish Goregaokar <>"
          "Aaron Turon <aturon@mozilla.com>"
          "Adolfo Ochagavía <>"
          "Niko Matsakis <>"
          "Steven Fackler <>"
          "Chase Southwood <csouth3@illinois.edu>"
          "Eduard Burtescu <>"
          "Florian Wilkens <>"
          "Félix Raimundo <>"
          "Tibor Benke <>"
          "Markus Siemens <markus@m-siemens.de>"
          "Josh Branchaud <jbranchaud@gmail.com>"
          "Huon Wilson <dbau.pp@gmail.com>"
          "Corey Farwell <coref@rwell.org>"
          "Aaron Liblong <>"
          "Nick Cameron <nrc@ncameron.org>"
          "Patrick Walton <pcwalton@mimiga.net>"
          "Felix S Klock II <>"
          "Andrew Paseltiner <apaseltiner@gmail.com>"
          "Sean McArthur <sean.monstar@gmail.com>"
          "Vadim Petrochenkov <>"
        ];
        features = {
          "eders" = [ "serde" ];
        };
      };
      "version_check 0.1.5" = rec {
        crateName = "version_check";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1pf91pvj8n6akh7w6j5ypka6aqz08b3qpzgs0ak2kjf4frkiljwi";
        authors = [
          "Sergio Benitez <sb@sergio.bz>"
        ];
        
      };
      "version_check 0.9.1" = rec {
        crateName = "version_check";
        version = "0.9.1";
        edition = "2015";
        sha256 = "1kikqlnggii1rvnxrbls55sc46lxvinz5k3giscgncjj4p87b1q7";
        authors = [
          "Sergio Benitez <sb@sergio.bz>"
        ];
        
      };
      "void" = rec {
        crateName = "void";
        version = "1.0.2";
        edition = "2015";
        sha256 = "0zc8f0ksxvmhvgx4fdg0zyn6vdnbxd2xv9hfx4nhzg6kbs4f80ka";
        authors = [
          "Jonathan Reem <jonathan.reem@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "vte" = rec {
        crateName = "vte";
        version = "0.3.3";
        edition = "2015";
        sha256 = "1kz8svnqnxclllsgh0ck20rplw3qzp46b5v30yscnzrgw8vgahjg";
        authors = [
          "Joe Wilm <joe@jwilm.com>"
        ];
        dependencies = [
          {
            name = "utf8parse";
            packageId = "utf8parse";
          }
        ];
        
      };
      "walkdir" = rec {
        crateName = "walkdir";
        version = "2.3.1";
        edition = "2018";
        sha256 = "0z9g39f49cycdm9vzjf8hnfh3f1csxgd65kmlphj8r2vffy84wbp";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "same-file";
            packageId = "same-file";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "std" "winnt" ];
          }
          {
            name = "winapi-util";
            packageId = "winapi-util";
            target = { target, features }: target."windows";
          }
        ];
        
      };
      "wasi" = rec {
        crateName = "wasi";
        version = "0.9.0+wasi-snapshot-preview1";
        edition = "2018";
        sha256 = "06g5v3vrdapfzvfq662cij7v8a1flwr2my45nnncdv2galrdzkfc";
        authors = [
          "The Cranelift Project Developers"
        ];
        features = {
          "default" = [ "std" ];
          "rustc-dep-of-std" = [ "compiler_builtins" "core" "rustc-std-workspace-alloc" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "wasm-bindgen" = rec {
        crateName = "wasm-bindgen";
        version = "0.2.58";
        edition = "2018";
        sha256 = "0v31s91andxcj73w63g3fkbw3ld6cfsaa4135qcjna22vypyj1aj";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "wasm-bindgen-macro";
            packageId = "wasm-bindgen-macro";
          }
        ];
        features = {
          "default" = [ "spans" "std" ];
          "enable-interning" = [ "std" ];
          "serde-serialize" = [ "serde" "serde_json" "std" ];
          "spans" = [ "wasm-bindgen-macro/spans" ];
          "strict-macro" = [ "wasm-bindgen-macro/strict-macro" ];
          "xxx_debug_only_print_generated_code" = [ "wasm-bindgen-macro/xxx_debug_only_print_generated_code" ];
        };
        resolvedDefaultFeatures = [ "default" "spans" "std" ];
      };
      "wasm-bindgen-backend" = rec {
        crateName = "wasm-bindgen-backend";
        version = "0.2.58";
        edition = "2018";
        sha256 = "0icskn0qlj30np6x6nbyl1i9dndckx0pczaq69dm42r92rcbkk8i";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "bumpalo";
            packageId = "bumpalo";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" ];
          }
          {
            name = "wasm-bindgen-shared";
            packageId = "wasm-bindgen-shared";
          }
        ];
        features = {
          "extra-traits" = [ "syn/extra-traits" ];
        };
        resolvedDefaultFeatures = [ "spans" ];
      };
      "wasm-bindgen-futures" = rec {
        crateName = "wasm-bindgen-futures";
        version = "0.3.27";
        edition = "2018";
        sha256 = "073p71skp91d9v2wczl6k7z9p0w25vn43br2v2g1ncbc6hvhnhl3";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "futures";
            packageId = "futures 0.1.29";
          }
          {
            name = "futures-channel-preview";
            packageId = "futures-channel-preview";
            optional = true;
          }
          {
            name = "futures-util-preview";
            packageId = "futures-util-preview";
            optional = true;
          }
          {
            name = "js-sys";
            packageId = "js-sys";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
            optional = true;
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
          }
          {
            name = "web-sys";
            packageId = "web-sys";
            target = { target, features }: (target."feature" == "atomics");
            features = [ "MessageEvent" "Worker" ];
          }
        ];
        features = {
          "futures_0_3" = [ "futures-util-preview" "futures-channel-preview" "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "futures-channel-preview" "futures-util-preview" "futures_0_3" "lazy_static" ];
      };
      "wasm-bindgen-macro" = rec {
        crateName = "wasm-bindgen-macro";
        version = "0.2.58";
        edition = "2018";
        sha256 = "1hwxw0nhi2n4izhjn2fvnrrn59xqjxs3ybkgzdv1b4p65ivr8h2p";
        procMacro = true;
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "wasm-bindgen-macro-support";
            packageId = "wasm-bindgen-macro-support";
          }
        ];
        features = {
          "spans" = [ "wasm-bindgen-macro-support/spans" ];
          "strict-macro" = [ "wasm-bindgen-macro-support/strict-macro" ];
        };
        resolvedDefaultFeatures = [ "spans" ];
      };
      "wasm-bindgen-macro-support" = rec {
        crateName = "wasm-bindgen-macro-support";
        version = "0.2.58";
        edition = "2018";
        sha256 = "0s3n7v741i4wkzib41m126li40qlhqyirnxpigkypsi59wsk2l78";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "visit" ];
          }
          {
            name = "wasm-bindgen-backend";
            packageId = "wasm-bindgen-backend";
          }
          {
            name = "wasm-bindgen-shared";
            packageId = "wasm-bindgen-shared";
          }
        ];
        features = {
          "extra-traits" = [ "syn/extra-traits" ];
          "spans" = [ "wasm-bindgen-backend/spans" ];
        };
        resolvedDefaultFeatures = [ "spans" ];
      };
      "wasm-bindgen-shared" = rec {
        crateName = "wasm-bindgen-shared";
        version = "0.2.58";
        edition = "2018";
        sha256 = "00cnbabf4k9bahb217vkilmjwqwzpwp112vlvgfw1x19r4gydrzm";
        authors = [
          "The wasm-bindgen Developers"
        ];
        
      };
      "wasm-bindgen-webidl" = rec {
        crateName = "wasm-bindgen-webidl";
        version = "0.2.58";
        edition = "2018";
        sha256 = "0pcpaw8w3xgfrg9y24ljrsl2bkidgdaaz3ka2bgk417wjc6jl0gg";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "heck";
            packageId = "heck";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" ];
          }
          {
            name = "wasm-bindgen-backend";
            packageId = "wasm-bindgen-backend";
          }
          {
            name = "weedle";
            packageId = "weedle";
          }
        ];
        
      };
      "web-sys" = rec {
        crateName = "web-sys";
        version = "0.3.35";
        edition = "2018";
        sha256 = "0fzmxcyahy3ghl8lkjkchj9krmnr56shvbqgr7db3hm8dappryda";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "js-sys";
            packageId = "js-sys";
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
          }
        ];
        buildDependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "sourcefile";
            packageId = "sourcefile";
          }
          {
            name = "wasm-bindgen-webidl";
            packageId = "wasm-bindgen-webidl";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "AbortSignal" "Headers" "MessageEvent" "ObserverCallback" "ReferrerPolicy" "Request" "RequestCache" "RequestCredentials" "RequestInit" "RequestMode" "RequestRedirect" "Response" "Window" "Worker" ];
      };
      "weedle" = rec {
        crateName = "weedle";
        version = "0.10.0";
        edition = "2015";
        sha256 = "0r0i2kllvkn9jil6cjzxdi1zsc6p1gjyk751w8lyclaii1q3zd1v";
        authors = [
          "Sharad Chand <sharad.d.chand@gmail.com>"
        ];
        dependencies = [
          {
            name = "nom";
            packageId = "nom 4.2.3";
          }
        ];
        
      };
      "widestring" = rec {
        crateName = "widestring";
        version = "0.4.0";
        edition = "2015";
        sha256 = "1dhx6dndjsz1y7c9w06922412kdxyrrkqblvggm76mh8z17hxz7g";
        authors = [
          "Kathryn Long <squeeself@gmail.com>"
        ];
        
      };
      "winapi 0.2.8" = rec {
        crateName = "winapi";
        version = "0.2.8";
        edition = "2015";
        sha256 = "0yh816lh6lf56dpsgxy189c2ai1z3j8mw9si6izqb6wsjkbcjz8n";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        
      };
      "winapi 0.3.8" = rec {
        crateName = "winapi";
        version = "0.3.8";
        edition = "2015";
        sha256 = "1ii9j9lzrhwri0902652awifzx9fpayimbp6hfhhc296xcg0k4w0";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi-i686-pc-windows-gnu";
            packageId = "winapi-i686-pc-windows-gnu";
            target = { target, features }: (stdenv.hostPlatform.config == "i686-pc-windows-gnu");
          }
          {
            name = "winapi-x86_64-pc-windows-gnu";
            packageId = "winapi-x86_64-pc-windows-gnu";
            target = { target, features }: (stdenv.hostPlatform.config == "x86_64-pc-windows-gnu");
          }
        ];
        features = {
          "debug" = [ "impl-debug" ];
        };
        resolvedDefaultFeatures = [ "basetsd" "cfg" "combaseapi" "consoleapi" "devguid" "errhandlingapi" "evntrace" "fileapi" "handleapi" "ifdef" "impl-default" "in6addr" "inaddr" "ioapiset" "knownfolders" "libloaderapi" "lmaccess" "lmapibuf" "lmcons" "memoryapi" "minschannel" "minwinbase" "minwindef" "netioapi" "ntdef" "ntsecapi" "ntstatus" "objbase" "objidl" "oleauto" "pdh" "powerbase" "processenv" "processthreadsapi" "profileapi" "psapi" "rpcdce" "schannel" "securitybaseapi" "setupapi" "shellapi" "shlobj" "sspi" "std" "synchapi" "sysinfoapi" "timezoneapi" "tlhelp32" "wbemcli" "winbase" "wincon" "wincrypt" "windef" "winerror" "winioctl" "winnt" "winsock2" "winuser" "ws2def" "ws2ipdef" "ws2tcpip" ];
      };
      "winapi-build" = rec {
        crateName = "winapi-build";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1g4rqsgjky0a7530qajn2bbfcrl2v0zb39idgdws9b1l7gp5wc9d";
        libName = "build";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        
      };
      "winapi-i686-pc-windows-gnu" = rec {
        crateName = "winapi-i686-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "1dmpa6mvcvzz16zg6d5vrfy4bxgg541wxrcip7cnshi06v38ffxc";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        
      };
      "winapi-util" = rec {
        crateName = "winapi-util";
        version = "0.1.3";
        edition = "2018";
        sha256 = "105dq898nah3dwrzr96vvb5srp6g2v5dl5vmzf211lba9iavzksc";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "std" "consoleapi" "errhandlingapi" "fileapi" "minwindef" "processenv" "winbase" "wincon" "winerror" "winnt" ];
          }
        ];
        
      };
      "winapi-x86_64-pc-windows-gnu" = rec {
        crateName = "winapi-x86_64-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "0gqq64czqb64kskjryj8isp62m2sgvx25yyj3kpc2myh85w24bki";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        
      };
      "ws2_32-sys" = rec {
        crateName = "ws2_32-sys";
        version = "0.2.1";
        edition = "2015";
        sha256 = "0ppscg5qfqaw0gzwv2a4nhn5bn01ff9iwn6ysqnzm4n8s3myz76m";
        libName = "ws2_32";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
          }
        ];
        buildDependencies = [
          {
            name = "winapi-build";
            packageId = "winapi-build";
          }
        ];
        
      };
      "x11" = rec {
        crateName = "x11";
        version = "2.18.2";
        edition = "2015";
        sha256 = "0wz7l6dlbraa9zalh9i45v9wibvkir9m2m1sg0jnzcbcaj9d1v3p";
        authors = [
          "daggerbot <daggerbot@gmail.com>"
          "Erle Pereira <erle@erlepereira.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
        ];
        features = {
          "xrecord" = [ "xtst" ];
          "xtest" = [ "xtst" ];
        };
        resolvedDefaultFeatures = [ "xlib" ];
      };
      "x11-clipboard" = rec {
        crateName = "x11-clipboard";
        version = "0.3.3";
        edition = "2015";
        sha256 = "1smwyr23jns0dncm6bwv00xfxxy99bv6qlx6df7dkdcydk04kgc9";
        authors = [
          "quininer kel <quininer@live.com>"
        ];
        dependencies = [
          {
            name = "xcb";
            packageId = "xcb";
            features = [ "thread" "xfixes" ];
          }
        ];
        
      };
      "xcb" = rec {
        crateName = "xcb";
        version = "0.8.2";
        edition = "2015";
        sha256 = "1ph27r9nxyfy3hh1c7x85g6dciwxcinf6514pvw9ybhl4hzpm4ay";
        authors = [
          "Remi Thebault <remi.thebault@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "log";
            packageId = "log";
          }
        ];
        buildDependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "composite" = [ "xfixes" ];
          "damage" = [ "xfixes" ];
          "debug_all" = [ "thread" "composite" "damage" "dpms" "dri2" "dri3" "glx" "randr" "record" "render" "res" "screensaver" "shape" "shm" "xevie" "xf86dri" "xfixes" "xinerama" "xkb" "xprint" "xselinux" "xtest" "xvmc" "xv" "xlib_xcb" ];
          "present" = [ "render" "xfixes" "sync" ];
          "randr" = [ "render" ];
          "xfixes" = [ "render" "shape" ];
          "xinput" = [ "xfixes" ];
          "xlib_xcb" = [ "x11/xlib" ];
          "xv" = [ "shm" ];
          "xvmc" = [ "xv" ];
        };
        resolvedDefaultFeatures = [ "render" "shape" "thread" "xfixes" ];
      };
      "xdg" = rec {
        crateName = "xdg";
        version = "2.2.0";
        edition = "2015";
        sha256 = "0mws8a0fr3cqk5nh7aq9lmkmhzghvasqy4mhw6nnza06l4d6i2fh";
        authors = [
          "Ben Longbons <b.r.longbons@gmail.com>"
          "whitequark <whitequark@whitequark.org>"
        ];
        
      };
      "xml-rs" = rec {
        crateName = "xml-rs";
        version = "0.8.0";
        edition = "2015";
        crateBin = [];
        sha256 = "1db4v716rbpgjiasaim2s17rmvsfcq1qzwg6nji6mdf5k34i46sl";
        libName = "xml";
        authors = [
          "Vladimir Matveev <vladimir.matweev@gmail.com>"
        ];
        
      };
      "xmlparser" = rec {
        crateName = "xmlparser";
        version = "0.13.1";
        edition = "2018";
        sha256 = "1mv2hg0k8cyap8qb05c1a8kz86zcdmf9wdp95nz41pys0c129d6c";
        authors = [
          "Evgeniy Reizner <razrfalcon@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "yaml-rust" = rec {
        crateName = "yaml-rust";
        version = "0.4.3";
        edition = "2015";
        sha256 = "0ka3qhqc5lvk3hz14wmsj32jhmh44blcbfrx5hfxli2gg38kv4k5";
        authors = [
          "Yuheng Chen <yuhengchen@sensetime.com>"
        ];
        dependencies = [
          {
            name = "linked-hash-map";
            packageId = "linked-hash-map 0.5.2";
          }
        ];
        
      };
      "zip" = rec {
        crateName = "zip";
        version = "0.5.4";
        edition = "2018";
        sha256 = "1biv5kh4fl7wpjlsxfczvgrdjlybf0xjaw7s36didql8lxxz67z4";
        authors = [
          "Mathijs van de Nes <git@mathijs.vd-nes.nl>"
        ];
        dependencies = [
          {
            name = "crc32fast";
            packageId = "crc32fast";
          }
          {
            name = "flate2";
            packageId = "flate2";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "podio";
            packageId = "podio";
          }
        ];
        features = {
          "default" = [ "bzip2" "deflate" "time" ];
          "deflate" = [ "flate2/rust_backend" ];
          "deflate-miniz" = [ "flate2/default" ];
          "deflate-zlib" = [ "flate2/zlib" ];
        };
        resolvedDefaultFeatures = [ "deflate" "flate2" ];
      };
    };

    #
# crate2nix/default.nix (excerpt start)
#

  /* Target (platform) data for conditional dependencies.
     This corresponds roughly to what buildRustCrate is setting.
  */
  defaultTarget = {
    unix = true;
    windows = false;
    fuchsia = true;
    test = false;

    # This doesn't appear to be officially documented anywhere yet.
    # See https://github.com/rust-lang-nursery/rust-forge/issues/101.
    os = if stdenv.hostPlatform.isDarwin
    then "macos"
    else stdenv.hostPlatform.parsed.kernel.name;
    arch = stdenv.hostPlatform.parsed.cpu.name;
    family = "unix";
    env = "gnu";
    endian =
      if stdenv.hostPlatform.parsed.cpu.significantByte.name == "littleEndian"
      then "little" else "big";
    pointer_width = toString stdenv.hostPlatform.parsed.cpu.bits;
    vendor = stdenv.hostPlatform.parsed.vendor.name;
    debug_assertions = false;
  };

  /* Filters common temp files and build files. */
  # TODO(pkolloch): Substitute with gitignore filter
  sourceFilter = name: type:
    let
      baseName = builtins.baseNameOf (builtins.toString name);
    in
      ! (
        # Filter out git
        baseName == ".gitignore"
        || (type == "directory" && baseName == ".git")

        # Filter out build results
        || (
          type == "directory" && (
            baseName == "target"
            || baseName == "_site"
            || baseName == ".sass-cache"
            || baseName == ".jekyll-metadata"
            || baseName == "build-artifacts"
          )
        )

        # Filter out nix-build result symlinks
        || (
          type == "symlink" && lib.hasPrefix "result" baseName
        )

        # Filter out IDE config
        || (
          type == "directory" && (
            baseName == ".idea" || baseName == ".vscode"
          )
        ) || lib.hasSuffix ".iml" baseName

        # Filter out nix build files
        || baseName == "Cargo.nix"

        # Filter out editor backup / swap files.
        || lib.hasSuffix "~" baseName
        || builtins.match "^\\.sw[a-z]$$" baseName != null
        || builtins.match "^\\..*\\.sw[a-z]$$" baseName != null
        || lib.hasSuffix ".tmp" baseName
        || lib.hasSuffix ".bak" baseName
        || baseName == "tests.nix"
      );

  /* Returns a crate which depends on successful test execution
     of crate given as the second argument.

     testCrateFlags: list of flags to pass to the test exectuable
     testInputs: list of packages that should be available during test execution
  */
  crateWithTest = { crate, testCrate, testCrateFlags, testInputs }:
    assert builtins.typeOf testCrateFlags == "list";
    assert builtins.typeOf testInputs == "list";
    let
      # override the `crate` so that it will build and execute tests instead of
      # building the actual lib and bin targets We just have to pass `--test`
      # to rustc and it will do the right thing.  We execute the tests and copy
      # their log and the test executables to $out for later inspection.
      test = let
        drv = testCrate.override (
          _: {
            buildTests = true;
          }
        );
      in
        pkgs.runCommand "run-tests-${testCrate.name}" {
          inherit testCrateFlags;
          buildInputs = testInputs;
        } ''
          set -ex

          export RUST_BACKTRACE=1

          # recreate a file hierarchy as when running tests with cargo

          # the source for test data
          ${pkgs.xorg.lndir}/bin/lndir ${crate.src}

          # build outputs
          testRoot=target/debug
          mkdir -p $testRoot

          # executables of the crate
          # we copy to prevent std::env::current_exe() to resolve to a store location
          for i in ${crate}/bin/*; do
            cp "$i" "$testRoot"
          done
          chmod +w -R .

          # test harness executables are suffixed with a hash, like cargo does
          # this allows to prevent name collision with the main
          # executables of the crate
          hash=$(basename $out)
          for file in ${drv}/tests/*; do
            f=$testRoot/$(basename $file)-$hash
            cp $file $f
            $f $testCrateFlags 2>&1 | tee -a $out
          done
        '';
    in
      crate.overrideAttrs (
        old: {
          checkPhase = ''
            test -e ${test}
          '';
          passthru = (old.passthru or {}) // {
            inherit test;
          };
        }
      );

  /* A restricted overridable version of builtRustCratesWithFeatures. */
  buildRustCrateWithFeatures =
    { packageId
    , features ? rootFeatures
    , crateOverrides ? defaultCrateOverrides
    , buildRustCrateFunc ? null
    , runTests ? false
    , testCrateFlags ? []
    , testInputs ? []
    }:
      lib.makeOverridable
        (
          { features
          , crateOverrides
          , runTests
          , testCrateFlags
          , testInputs
          }:
            let
              buildRustCrateFuncOverriden = if buildRustCrateFunc != null
              then buildRustCrateFunc
              else (
                if crateOverrides == pkgs.defaultCrateOverrides
                then buildRustCrate
                else buildRustCrate.override {
                  defaultCrateOverrides = crateOverrides;
                }
              );
              builtRustCrates = builtRustCratesWithFeatures {
                inherit packageId features;
                buildRustCrateFunc = buildRustCrateFuncOverriden;
                runTests = false;
              };
              builtTestRustCrates = builtRustCratesWithFeatures {
                inherit packageId features;
                buildRustCrateFunc = buildRustCrateFuncOverriden;
                runTests = true;
              };
              drv = builtRustCrates.${packageId};
              testDrv = builtTestRustCrates.${packageId};
              derivation = if runTests then
                crateWithTest {
                  crate = drv;
                  testCrate = testDrv;
                  inherit testCrateFlags testInputs;
                }
              else drv;
            in
              derivation
        )
        { inherit features crateOverrides runTests testCrateFlags testInputs; };

  /* Returns an attr set with packageId mapped to the result of buildRustCrateFunc
     for the corresponding crate.
  */
  builtRustCratesWithFeatures =
    { packageId
    , features
    , crateConfigs ? crates
    , buildRustCrateFunc
    , runTests
    , target ? defaultTarget
    } @ args:
      assert (builtins.isAttrs crateConfigs);
      assert (builtins.isString packageId);
      assert (builtins.isList features);
      assert (builtins.isAttrs target);
      assert (builtins.isBool runTests);
      let
        rootPackageId = packageId;
        mergedFeatures = mergePackageFeatures (
          args // {
            inherit rootPackageId;
            target = target // { test = runTests; };
          }
        );

        buildByPackageId = packageId: buildByPackageIdImpl packageId;

        # Memoize built packages so that reappearing packages are only built once.
        builtByPackageId =
          lib.mapAttrs (packageId: value: buildByPackageId packageId) crateConfigs;

        buildByPackageIdImpl = packageId:
          let
            features = mergedFeatures."${packageId}" or [];
            crateConfig' = crateConfigs."${packageId}";
            crateConfig =
              builtins.removeAttrs crateConfig' [ "resolvedDefaultFeatures" "devDependencies" ];
            devDependencies =
              lib.optionals
                (runTests && packageId == rootPackageId)
                (crateConfig'.devDependencies or []);
            dependencies =
              dependencyDerivations {
                inherit builtByPackageId features target;
                dependencies =
                  (crateConfig.dependencies or [])
                  ++ devDependencies;
              };
            buildDependencies =
              dependencyDerivations {
                inherit builtByPackageId features target;
                dependencies = crateConfig.buildDependencies or [];
              };

            filterEnabledDependenciesForThis = dependencies: filterEnabledDependencies {
              inherit dependencies features target;
            };

            dependenciesWithRenames =
              lib.filter (d: d ? "rename") (
                filterEnabledDependenciesForThis
                  (
                    (crateConfig.buildDependencies or [])
                    ++ (crateConfig.dependencies or [])
                    ++ devDependencies
                  )
              );

            crateRenames =
              builtins.listToAttrs
                (map (d: { name = d.name; value = d.rename; }) dependenciesWithRenames);
          in
            buildRustCrateFunc (
              crateConfig // {
                src = crateConfig.src or (
                  pkgs.fetchurl {
                    name = "${crateConfig.crateName}-${crateConfig.version}.tar.gz";
                    # https://www.pietroalbini.org/blog/downloading-crates-io/
                    # Not rate-limited, CDN URL.
                    url = "https://static.crates.io/crates/${crateConfig.crateName}/${crateConfig.crateName}-${crateConfig.version}.crate";
                    sha256 = crateConfig.sha256;
                  }
                );
                inherit features dependencies buildDependencies crateRenames release;
              }
            );
      in
        builtByPackageId;

  /* Returns the actual derivations for the given dependencies. */
  dependencyDerivations =
    { builtByPackageId
    , features
    , dependencies
    , target
    }:
      assert (builtins.isAttrs builtByPackageId);
      assert (builtins.isList features);
      assert (builtins.isList dependencies);
      assert (builtins.isAttrs target);
      let
        enabledDependencies = filterEnabledDependencies {
          inherit dependencies features target;
        };
        depDerivation = dependency: builtByPackageId.${dependency.packageId};
      in
        map depDerivation enabledDependencies;

  /* Returns a sanitized version of val with all values substituted that cannot
     be serialized as JSON.
  */
  sanitizeForJson = val:
    if builtins.isAttrs val
    then lib.mapAttrs (n: v: sanitizeForJson v) val
    else if builtins.isList val
    then builtins.map sanitizeForJson val
    else if builtins.isFunction val
    then "function"
    else val;

  /* Returns various tools to debug a crate. */
  debugCrate = { packageId, target ? defaultTarget }:
    assert (builtins.isString packageId);
    let
      debug = rec {
        # The built tree as passed to buildRustCrate.
        buildTree = buildRustCrateWithFeatures {
          buildRustCrateFunc = lib.id;
          inherit packageId;
        };
        sanitizedBuildTree = sanitizeForJson buildTree;
        dependencyTree = sanitizeForJson (
          buildRustCrateWithFeatures {
            buildRustCrateFunc = crate: {
              "01_crateName" = crate.crateName or false;
              "02_features" = crate.features or [];
              "03_dependencies" = crate.dependencies or [];
            };
            inherit packageId;
          }
        );
        mergedPackageFeatures = mergePackageFeatures {
          features = rootFeatures;
          inherit packageId target;
        };
        diffedDefaultPackageFeatures = diffDefaultPackageFeatures {
          inherit packageId target;
        };
      };
    in
      { internal = debug; };

  /* Returns differences between cargo default features and crate2nix default
     features.

     This is useful for verifying the feature resolution in crate2nix.
  */
  diffDefaultPackageFeatures =
    { crateConfigs ? crates
    , packageId
    , target
    }:
      assert (builtins.isAttrs crateConfigs);
      let
        prefixValues = prefix: lib.mapAttrs (n: v: { "${prefix}" = v; });
        mergedFeatures =
          prefixValues
            "crate2nix"
            (mergePackageFeatures { inherit crateConfigs packageId target; features = [ "default" ]; });
        configs = prefixValues "cargo" crateConfigs;
        combined = lib.foldAttrs (a: b: a // b) {} [ mergedFeatures configs ];
        onlyInCargo =
          builtins.attrNames
            (lib.filterAttrs (n: v: !(v ? "crate2nix") && (v ? "cargo")) combined);
        onlyInCrate2Nix =
          builtins.attrNames
            (lib.filterAttrs (n: v: (v ? "crate2nix") && !(v ? "cargo")) combined);
        differentFeatures = lib.filterAttrs
          (
            n: v:
              (v ? "crate2nix")
              && (v ? "cargo")
              && (v.crate2nix.features or []) != (v."cargo".resolved_default_features or [])
          )
          combined;
      in
        builtins.toJSON {
          inherit onlyInCargo onlyInCrate2Nix differentFeatures;
        };

  /* Returns an attrset mapping packageId to the list of enabled features.

     If multiple paths to a dependency enable different features, the
     corresponding feature sets are merged. Features in rust are additive.
  */
  mergePackageFeatures =
    { crateConfigs ? crates
    , packageId
    , rootPackageId ? packageId
    , features ? rootFeatures
    , dependencyPath ? [ crates.${packageId}.crateName ]
    , featuresByPackageId ? {}
    , target
      # Adds devDependencies to the crate with rootPackageId.
    , runTests ? false
    , ...
    } @ args:
      assert (builtins.isAttrs crateConfigs);
      assert (builtins.isString packageId);
      assert (builtins.isString rootPackageId);
      assert (builtins.isList features);
      assert (builtins.isList dependencyPath);
      assert (builtins.isAttrs featuresByPackageId);
      assert (builtins.isAttrs target);
      assert (builtins.isBool runTests);
      let
        crateConfig = crateConfigs."${packageId}" or (builtins.throw "Package not found: ${packageId}");
        expandedFeatures = expandFeatures (crateConfig.features or {}) features;

        depWithResolvedFeatures = dependency:
          let
            packageId = dependency.packageId;
            features = dependencyFeatures expandedFeatures dependency;
          in
            { inherit packageId features; };

        resolveDependencies = cache: path: dependencies:
          assert (builtins.isAttrs cache);
          assert (builtins.isList dependencies);
          let
            enabledDependencies = filterEnabledDependencies {
              inherit dependencies target;
              features = expandedFeatures;
            };
            directDependencies = map depWithResolvedFeatures enabledDependencies;
            foldOverCache = op: lib.foldl op cache directDependencies;
          in
            foldOverCache
              (
                cache: { packageId, features }:
                  let
                    cacheFeatures = cache.${packageId} or [];
                    combinedFeatures = sortedUnique (cacheFeatures ++ features);
                  in
                    if cache ? ${packageId} && cache.${packageId} == combinedFeatures
                    then cache
                    else mergePackageFeatures {
                      features = combinedFeatures;
                      featuresByPackageId = cache;
                      inherit crateConfigs packageId target runTests rootPackageId;
                    }
              );

        cacheWithSelf =
          let
            cacheFeatures = featuresByPackageId.${packageId} or [];
            combinedFeatures = sortedUnique (cacheFeatures ++ expandedFeatures);
          in
            featuresByPackageId // {
              "${packageId}" = combinedFeatures;
            };

        cacheWithDependencies =
          resolveDependencies cacheWithSelf "dep" (
            crateConfig.dependencies or []
            ++ lib.optionals
              (runTests && packageId == rootPackageId)
              (crateConfig.devDependencies or [])
          );

        cacheWithAll =
          resolveDependencies
            cacheWithDependencies "build"
            (crateConfig.buildDependencies or []);
      in
        cacheWithAll;

  /* Returns the enabled dependencies given the enabled features. */
  filterEnabledDependencies = { dependencies, features, target }:
    assert (builtins.isList dependencies);
    assert (builtins.isList features);
    assert (builtins.isAttrs target);

    lib.filter
      (
        dep:
          let
            targetFunc = dep.target or (features: true);
          in
            targetFunc { inherit features target; }
            && (
              !(dep.optional or false)
              || builtins.any (doesFeatureEnableDependency dep) features
            )
      )
      dependencies;

  /* Returns whether the given feature should enable the given dependency. */
  doesFeatureEnableDependency = { name, rename ? null, ... }: feature:
    let
      prefix = "${name}/";
      len = builtins.stringLength prefix;
      startsWithPrefix = builtins.substring 0 len feature == prefix;
    in
      (rename == null && feature == name)
      || (rename != null && rename == feature)
      || startsWithPrefix;

  /* Returns the expanded features for the given inputFeatures by applying the
     rules in featureMap.

     featureMap is an attribute set which maps feature names to lists of further
     feature names to enable in case this feature is selected.
  */
  expandFeatures = featureMap: inputFeatures:
    assert (builtins.isAttrs featureMap);
    assert (builtins.isList inputFeatures);
    let
      expandFeature = feature:
        assert (builtins.isString feature);
        [ feature ] ++ (expandFeatures featureMap (featureMap."${feature}" or []));
      outFeatures = lib.concatMap expandFeature inputFeatures;
    in
      sortedUnique outFeatures;

  /*
     Returns the actual features for the given dependency.

     features: The features of the crate that refers this dependency.
  */
  dependencyFeatures = features: dependency:
    assert (builtins.isList features);
    assert (builtins.isAttrs dependency);
    let
      defaultOrNil = if dependency.usesDefaultFeatures or true
      then [ "default" ]
      else [];
      explicitFeatures = dependency.features or [];
      additionalDependencyFeatures =
        let
          dependencyPrefix = (dependency.rename or dependency.name) + "/";
          dependencyFeatures =
            builtins.filter (f: lib.hasPrefix dependencyPrefix f) features;
        in
          builtins.map (lib.removePrefix dependencyPrefix) dependencyFeatures;
    in
      defaultOrNil ++ explicitFeatures ++ additionalDependencyFeatures;

  /* Sorts and removes duplicates from a list of strings. */
  sortedUnique = features:
    assert (builtins.isList features);
    assert (builtins.all builtins.isString features);
    let
      outFeaturesSet = lib.foldl (set: feature: set // { "${feature}" = 1; }) {} features;
      outFeaturesUnique = builtins.attrNames outFeaturesSet;
    in
      builtins.sort (a: b: a < b) outFeaturesUnique;

  deprecationWarning = message: value:
    if strictDeprecation
    then builtins.throw "strictDeprecation enabled, aborting: ${message}"
    else builtins.trace message value;

  #
  # crate2nix/default.nix (excerpt end)
  #

  };
}
