
# This file was @generated by crate2nix 0.9.0-alpha.1 with the command:
#   "generate" "-o" "/home/jamie/Misc/cratesioout/nu/v0.1.2.nix.tmp"
# See https://github.com/kolloch/crate2nix for more info.

{ nixpkgs ? <nixpkgs>
, pkgs ? import nixpkgs { config = {}; }
, lib ? pkgs.lib
, stdenv ? pkgs.stdenv
, buildRustCrate ? pkgs.buildRustCrate
  # This is used as the `crateOverrides` argument for `buildRustCrate`.
, defaultCrateOverrides ? pkgs.defaultCrateOverrides
  # The features to enable for the root_crate or the workspace_members.
, rootFeatures ? [ "default" ]
  # If true, throw errors instead of issueing deprecation warnings.
, strictDeprecation ? false
  # Whether to perform release builds: longer compile times, faster binaries.
, release ? true
  # Additional crate2nix configuration if it exists.
, crateConfig
  ? if builtins.pathExists ./crate-config.nix
    then pkgs.callPackage ./crate-config.nix {}
    else {}
}:

rec {
  #
  # "public" attributes that we attempt to keep stable with new versions of crate2nix.
  #

  rootCrate = rec {
    packageId = "nu";

    # Use this attribute to refer to the derivation building your root crate package.
    # You can override the features with rootCrate.build.override { features = [ "default" "feature1" ... ]; }.
    build = internal.buildRustCrateWithFeatures {
      inherit packageId;
    };

    # Debug support which might change between releases.
    # File a bug if you depend on any for non-debug work!
    debug = internal.debugCrate { inherit packageId; };
  };
  # Refer your crate build derivation by name here.
  # You can override the features with
  # workspaceMembers."${crateName}".build.override { features = [ "default" "feature1" ... ]; }.
  workspaceMembers = {
    "nu" = rec {
      packageId = "nu";
      build = internal.buildRustCrateWithFeatures {
        packageId = "nu";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
  };

  #
  # "internal" ("private") attributes that may change in every new version of crate2nix.
  #

  internal = rec {
    # Build and dependency information for crates.
    # Many of the fields are passed one-to-one to buildRustCrate.
    #
    # Noteworthy:
    # * `dependencies`/`buildDependencies`: similar to the corresponding fields for buildRustCrate.
    #   but with additional information which is used during dependency/feature resolution.
    # * `resolvedDependencies`: the selected default features reported by cargo - only included for debugging.
    # * `devDependencies` as of now not used by `buildRustCrate` but used to
    #   inject test dependencies into the build

    crates = {
      "adhoc_derive" = rec {
        crateName = "adhoc_derive";
        version = "0.1.2";
        edition = "2018";
        sha256 = "0q8cjd2nbw2cwmsm7w34wrf4f5a03h71s3f52a66r4gfg305kym7";
        procMacro = true;
        authors = [
          "Dominik Fankhauser <dominik@fankhausers.ch>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "regex-syntax";
            packageId = "regex-syntax";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "extra-traits" "full" "visit-mut" ];
          }
        ];
        
      };
      "adler32" = rec {
        crateName = "adler32";
        version = "1.0.3";
        edition = "2015";
        sha256 = "0p7fxlnks9l7p7rwfqi7aqgnk2bps5zc0rjiw00mdw19nnbjjlky";
        authors = [
          "Remi Rampin <remirampin@gmail.com>"
        ];
        
      };
      "aho-corasick" = rec {
        crateName = "aho-corasick";
        version = "0.7.4";
        edition = "2015";
        sha256 = "10p2yl9fz7a4zwc4kj4zpk0wcz64n4m5l0ng6zsa6zkxrcfamdrn";
        libName = "aho_corasick";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "memchr";
            packageId = "memchr";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "memchr/use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "ansi_colours" = rec {
        crateName = "ansi_colours";
        version = "1.0.1";
        edition = "2015";
        sha256 = "1dnqmpk68mzvncj37jlv0362kdgsgjxg010c6psagimgh4m303qx";
        authors = [
          "Micha≈Ç Nazarewicz <mina86@mina86.com>"
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];
        
      };
      "ansi_term 0.11.0" = rec {
        crateName = "ansi_term";
        version = "0.11.0";
        edition = "2015";
        sha256 = "16wpvrghvd0353584i1idnsgm0r3vchg8fyrm0x8ayv1rgvbljgf";
        authors = [
          "ogham@bsago.me"
          "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>"
          "Josh Triplett <josh@joshtriplett.org>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            target = { target, features }: (target."os" == "windows");
            features = [ "errhandlingapi" "consoleapi" "processenv" ];
          }
        ];
        
      };
      "ansi_term 0.12.0" = rec {
        crateName = "ansi_term";
        version = "0.12.0";
        edition = "2015";
        sha256 = "0dmvziqx1j06xbv3zx62k7w81dyaqviag1rk5a0iynjqqdk2g9za";
        authors = [
          "ogham@bsago.me"
          "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>"
          "Josh Triplett <josh@joshtriplett.org>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            target = { target, features }: (target."os" == "windows");
            features = [ "errhandlingapi" "consoleapi" "processenv" "handleapi" ];
          }
        ];
        features = {
          "derive_serde_style" = [ "serde" ];
        };
      };
      "app_dirs" = rec {
        crateName = "app_dirs";
        version = "1.2.1";
        edition = "2015";
        sha256 = "0g9ijvl4xqbmahy7d7s0wj570wg0kz3ad0jk77b98smxv6x28fp7";
        authors = [
          "Andy Barron <AndrewLBarron@gmail.com>"
        ];
        dependencies = [
          {
            name = "ole32-sys";
            packageId = "ole32-sys";
            target = { target, features }: target."windows";
          }
          {
            name = "shell32-sys";
            packageId = "shell32-sys";
            target = { target, features }: target."windows";
          }
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
            target = { target, features }: target."windows";
          }
          {
            name = "xdg";
            packageId = "xdg";
            target = { target, features }: (target."unix" && (!(target."os" == "macos")));
          }
        ];
        
      };
      "argon2rs" = rec {
        crateName = "argon2rs";
        version = "0.2.5";
        edition = "2015";
        sha256 = "14mkgkrjd4b4zy92pflz6yb4j1wn2chbd8jczxknxbkdm2vb0rrz";
        authors = [
          "bryant <bryant@defrag.in>"
        ];
        dependencies = [
          {
            name = "blake2-rfc";
            packageId = "blake2-rfc";
          }
          {
            name = "scoped_threadpool";
            packageId = "scoped_threadpool";
          }
        ];
        features = {
          "simd" = [ "blake2-rfc/simd_asm" ];
        };
      };
      "arrayvec" = rec {
        crateName = "arrayvec";
        version = "0.4.10";
        edition = "2015";
        sha256 = "0wcch3ca9qvkixgdbd2afrv1xa27l83vpraf7frsh9l8pivgpiwj";
        authors = [
          "bluss"
        ];
        dependencies = [
          {
            name = "nodrop";
            packageId = "nodrop";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "serde-1" = [ "serde" ];
        };
      };
      "atty" = rec {
        crateName = "atty";
        version = "0.2.11";
        edition = "2015";
        sha256 = "0lln6vaczj521qqjbaqnb81w5p6xk4fjfkg33r0m22cm4f3mnzcs";
        authors = [
          "softprops <d.tangren@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: target."unix";
          }
          {
            name = "termion";
            packageId = "termion";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            target = { target, features }: target."windows";
            features = [ "consoleapi" "processenv" "minwinbase" "minwindef" "winbase" ];
          }
        ];
        
      };
      "autocfg" = rec {
        crateName = "autocfg";
        version = "0.1.4";
        edition = "2015";
        sha256 = "1gvpf03pdl08k29j9hjv7r7cs5zn39ib97f7wwvzv9992fjyyj8f";
        authors = [
          "Josh Stone <cuviper@gmail.com>"
        ];
        
      };
      "backtrace" = rec {
        crateName = "backtrace";
        version = "0.3.30";
        edition = "2015";
        sha256 = "0ks0342dl6mqw5zapbk5a2lrvj9cmqlz90049v0l6x3ypf1wg95d";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "backtrace-sys";
            packageId = "backtrace-sys";
            optional = true;
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
          }
          {
            name = "rustc-demangle";
            packageId = "rustc-demangle";
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
        ];
        features = {
          "default" = [ "std" "libunwind" "libbacktrace" "coresymbolication" "dladdr" "dbghelp" ];
          "gimli-symbolize" = [ "addr2line" "findshlibs" "memmap" ];
          "libbacktrace" = [ "backtrace-sys" ];
          "serialize-rustc" = [ "rustc-serialize" ];
          "serialize-serde" = [ "serde" "serde_derive" ];
          "verify-winapi" = [ "winapi/dbghelp" "winapi/handleapi" "winapi/libloaderapi" "winapi/minwindef" "winapi/processthreadsapi" "winapi/winbase" "winapi/winnt" ];
        };
        resolvedDefaultFeatures = [ "backtrace-sys" "coresymbolication" "dbghelp" "default" "dladdr" "libbacktrace" "libunwind" "std" ];
      };
      "backtrace-sys" = rec {
        crateName = "backtrace-sys";
        version = "0.1.28";
        edition = "2015";
        sha256 = "1dk9sx6sbm73aihlln8l2m9ia1s4vqmqdfd7z2kr5k2wq8586z3r";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];
        
      };
      "base64" = rec {
        crateName = "base64";
        version = "0.10.1";
        edition = "2015";
        sha256 = "13k6bvd3n6dm7jqn9x918w65dd9xhx454bqphbnv0bkd6n9dj98b";
        authors = [
          "Alice Maz <alice@alicemaz.com>"
          "Marshall Pierce <marshall@mpierce.org>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
        ];
        
      };
      "bincode" = rec {
        crateName = "bincode";
        version = "1.1.4";
        edition = "2015";
        sha256 = "1xx6bp39irvsndk6prnmmq8m1l9p6q2qj21j6mfks2y81pjsa14z";
        authors = [
          "Ty Overby <ty@pre-alpha.com>"
          "Francesco Mazzoli <f@mazzo.li>"
          "David Tolnay <dtolnay@gmail.com>"
          "Daniel Griffen"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "serde";
            packageId = "serde 1.0.94";
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
        ];
        features = {
        };
      };
      "bitflags" = rec {
        crateName = "bitflags";
        version = "1.1.0";
        edition = "2015";
        sha256 = "1zc1qb1hwsnl2d8rhzicsv9kqd5b2hwbrscrcfw5as4sfr35659x";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "blake2-rfc" = rec {
        crateName = "blake2-rfc";
        version = "0.2.18";
        edition = "2015";
        sha256 = "0034g47hyq2bzmk40895ill1mbnpmmjakdq3dmm9clidvl5m6vax";
        authors = [
          "Cesar Eduardo Barros <cesarb@cesarb.eti.br>"
        ];
        dependencies = [
          {
            name = "arrayvec";
            packageId = "arrayvec";
            usesDefaultFeatures = false;
          }
          {
            name = "constant_time_eq";
            packageId = "constant_time_eq";
          }
        ];
        features = {
          "default" = [ "std" ];
          "simd_asm" = [ "simd_opt" ];
          "simd_opt" = [ "simd" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "block" = rec {
        crateName = "block";
        version = "0.1.6";
        edition = "2015";
        sha256 = "16k9jgll25pzsq14f244q22cdv0zb4bqacldg3kx6h89d7piz30d";
        authors = [
          "Steven Sheldon"
        ];
        
      };
      "build_const" = rec {
        crateName = "build_const";
        version = "0.2.1";
        edition = "2015";
        sha256 = "0faz882spx9474cszay2djmb0lghbwq51qayabcar1s7g4r2l29r";
        authors = [
          "Garrett Berg <vitiral@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "bumpalo" = rec {
        crateName = "bumpalo";
        version = "2.5.0";
        edition = "2018";
        sha256 = "018b5calz3895v04shk9bn7i73r4zf8yf7p1dqg92s3xya13vm1c";
        authors = [
          "Nick Fitzgerald <fitzgen@gmail.com>"
        ];
        features = {
          "collections" = [ "std" ];
          "default" = [ "collections" "std" ];
        };
        resolvedDefaultFeatures = [ "collections" "default" "std" ];
      };
      "byte-unit" = rec {
        crateName = "byte-unit";
        version = "2.1.0";
        edition = "2015";
        sha256 = "0hdqmz9kmpkdf8zl9fg3rng1mhqw5y2cdw41agnpn5ma0d3vnm37";
        authors = [
          "Magic Len <len@magiclen.org>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
          }
          {
            name = "regex";
            packageId = "regex";
          }
        ];
        
      };
      "bytecount" = rec {
        crateName = "bytecount";
        version = "0.3.2";
        edition = "2015";
        sha256 = "1n6bmj66dixkvrm80yxmmln77baj9sw1qahcdv5xnmlz6p7djqgq";
        authors = [
          "Andre Bogus <bogusandre@gmail.de>"
          "Joshua Landau <joshua@landau.ws>"
        ];
        features = {
          "avx-accel" = [ "simd-accel" ];
          "simd-accel" = [ "simd" ];
        };
      };
      "byteorder" = rec {
        crateName = "byteorder";
        version = "1.3.2";
        edition = "2015";
        sha256 = "1xbwjlmq2ziqjmjvkqxdx1yh136xxhilxd40bky1w4d7hn4xvhx7";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "bytes" = rec {
        crateName = "bytes";
        version = "0.4.12";
        edition = "2015";
        sha256 = "0768a55q2fsqdjsvcv98ndg9dq7w2g44dvq1avhwpxrdzbydyvr0";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "either";
            packageId = "either";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "iovec";
            packageId = "iovec";
          }
        ];
        features = {
          "i128" = [ "byteorder/i128" ];
        };
        resolvedDefaultFeatures = [ "either" ];
      };
      "c2-chacha" = rec {
        crateName = "c2-chacha";
        version = "0.2.2";
        edition = "2018";
        sha256 = "00a11qdc8mg3z0k613rhprkc9p6xz0y7b1681x32ixg0hr3x0r3x";
        authors = [
          "The CryptoCorrosion Contributors"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
            optional = true;
          }
          {
            name = "ppv-lite86";
            packageId = "ppv-lite86";
            rename = "ppv-lite86";
          }
        ];
        features = {
          "default" = [ "std" "simd" "rustcrypto_api" ];
          "rustcrypto_api" = [ "stream-cipher" "byteorder" ];
          "simd" = [ "ppv-lite86/simd" ];
          "std" = [ "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "lazy_static" "simd" "std" ];
      };
      "cc" = rec {
        crateName = "cc";
        version = "1.0.37";
        edition = "2015";
        crateBin = [];
        sha256 = "0zby3adq7zdxpn4dnx1q2mv9rzs9ss7z4s111mb5gbxvsx25bxrr";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "parallel" = [ "rayon" ];
        };
      };
      "cfg-if" = rec {
        crateName = "cfg-if";
        version = "0.1.9";
        edition = "2015";
        sha256 = "0csygklgz3ybpr0670rkip49zh76m43ar3k7xgypkzbzrwycx1ml";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        
      };
      "chrono" = rec {
        crateName = "chrono";
        version = "0.4.7";
        edition = "2015";
        sha256 = "1glam3iqhshbamzgf0npn7hgghski92r31lm7gg8841hnxc1zn3p";
        authors = [
          "Kang Seonghoon <public+rust@mearie.org>"
          "Brandon W Maister <quodlibetor@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
          }
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.8";
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde 1.0.94";
            optional = true;
          }
          {
            name = "time";
            packageId = "time";
            optional = true;
          }
        ];
        features = {
          "clock" = [ "time" ];
          "default" = [ "clock" ];
        };
        resolvedDefaultFeatures = [ "clock" "default" "serde" "time" ];
      };
      "chrono-humanize" = rec {
        crateName = "chrono-humanize";
        version = "0.0.11";
        edition = "2015";
        sha256 = "03g9nnl9cmf249sf5i78g6l35zyqgypnd7m3x7dd5s2zcn5g8bzb";
        authors = [
          "Cyril Plisko <cyril.plisko@mountall.com>"
        ];
        dependencies = [
          {
            name = "chrono";
            packageId = "chrono";
          }
        ];
        features = {
        };
      };
      "chrono-tz" = rec {
        crateName = "chrono-tz";
        version = "0.5.1";
        edition = "2015";
        sha256 = "05gaa4wgf9z0b870idzridx0i1mqs4ii4sywqgplskiqs3x31r70";
        authors = [
          "Djzin"
        ];
        dependencies = [
          {
            name = "chrono";
            packageId = "chrono";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "parse-zoneinfo";
            packageId = "parse-zoneinfo";
          }
        ];
        
      };
      "clap" = rec {
        crateName = "clap";
        version = "2.33.0";
        edition = "2015";
        sha256 = "1nf6ld3bims1n5vfzhkvcb55pdzh04bbhzf8nil5vvw05nxzarsh";
        authors = [
          "Kevin K. <kbknapp@gmail.com>"
        ];
        dependencies = [
          {
            name = "ansi_term";
            packageId = "ansi_term 0.11.0";
            optional = true;
            target = { target, features }: (!target."windows");
          }
          {
            name = "atty";
            packageId = "atty";
            optional = true;
          }
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "strsim";
            packageId = "strsim 0.8.0";
            optional = true;
          }
          {
            name = "textwrap";
            packageId = "textwrap";
          }
          {
            name = "unicode-width";
            packageId = "unicode-width";
          }
          {
            name = "vec_map";
            packageId = "vec_map";
            optional = true;
          }
        ];
        features = {
          "color" = [ "ansi_term" "atty" ];
          "default" = [ "suggestions" "color" "vec_map" ];
          "doc" = [ "yaml" ];
          "lints" = [ "clippy" ];
          "suggestions" = [ "strsim" ];
          "wrap_help" = [ "term_size" "textwrap/term_size" ];
          "yaml" = [ "yaml-rust" ];
        };
        resolvedDefaultFeatures = [ "ansi_term" "atty" "color" "default" "strsim" "suggestions" "vec_map" ];
      };
      "clicolors-control" = rec {
        crateName = "clicolors-control";
        version = "1.0.0";
        edition = "2015";
        sha256 = "1y80cgarxhrd1bz5yjm81r444v6flvy36aaxrrsac0yhfd6gvavk";
        authors = [
          "Armin Ronacher <armin.ronacher@active-4.com>"
        ];
        dependencies = [
          {
            name = "atty";
            packageId = "atty";
            target = { target, features }: target."windows";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            target = { target, features }: target."windows";
            features = [ "winbase" "handleapi" "consoleapi" "processenv" ];
          }
        ];
        features = {
          "default" = [ "terminal_autoconfig" ];
        };
        resolvedDefaultFeatures = [ "default" "terminal_autoconfig" ];
      };
      "clipboard" = rec {
        crateName = "clipboard";
        version = "0.5.0";
        edition = "2015";
        sha256 = "1rxjfn811h09g6jpjjs2vx7z52wj6dxnflbwryfj6h03dij09a95";
        authors = [
          "Avi Weinstock <aweinstock314@gmail.com>"
        ];
        dependencies = [
          {
            name = "clipboard-win";
            packageId = "clipboard-win";
            target = { target, features }: target."windows";
          }
          {
            name = "objc";
            packageId = "objc";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "objc-foundation";
            packageId = "objc-foundation";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "objc_id";
            packageId = "objc_id";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "x11-clipboard";
            packageId = "x11-clipboard";
            target = { target, features }: (target."unix" && (!((target."os" == "macos") || (target."os" == "android"))));
          }
        ];
        
      };
      "clipboard-win" = rec {
        crateName = "clipboard-win";
        version = "2.2.0";
        edition = "2018";
        sha256 = "0svqk0lrw66abaxd6h7l4k4g2s5vd1dcipy34kzfan6mzvb97873";
        libName = "clipboard_win";
        authors = [
          "Douman <douman@gmx.se>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            usesDefaultFeatures = false;
            target = { target, features }: target."windows";
            features = [ "std" "basetsd" "shellapi" "winbase" "winuser" ];
          }
        ];
        features = {
        };
      };
      "cloudabi" = rec {
        crateName = "cloudabi";
        version = "0.0.3";
        edition = "2015";
        sha256 = "0kxcg83jlihy0phnd2g8c2c303px3l2p3pkjz357ll6llnd5pz6x";
        libPath = "cloudabi.rs";
        authors = [
          "Nuxi (https://nuxi.nl/) and contributors"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
            optional = true;
          }
        ];
        features = {
          "default" = [ "bitflags" ];
        };
        resolvedDefaultFeatures = [ "bitflags" "default" ];
      };
      "color_quant" = rec {
        crateName = "color_quant";
        version = "1.0.1";
        edition = "2015";
        sha256 = "1ga56jrafnjm80903nnqjkyii4bwd6a7visxh0g8hgi6cmrvbfqd";
        authors = [
          "nwin <nwin@users.noreply.github.com>"
        ];
        
      };
      "config" = rec {
        crateName = "config";
        version = "0.9.3";
        edition = "2015";
        sha256 = "1rppjv8q5ffdyir6rawgizyqrm5yg9j8xlg7hrdgmcv2xmw7s47r";
        authors = [
          "Ryan Leckey <leckey.ryan@gmail.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
          }
          {
            name = "nom";
            packageId = "nom 4.2.3";
          }
          {
            name = "rust-ini";
            packageId = "rust-ini";
            optional = true;
          }
          {
            name = "serde";
            packageId = "serde 1.0.94";
          }
          {
            name = "serde-hjson";
            packageId = "serde-hjson 0.8.2";
            optional = true;
          }
          {
            name = "serde_json";
            packageId = "serde_json";
            optional = true;
          }
          {
            name = "toml";
            packageId = "toml 0.4.10";
            optional = true;
          }
          {
            name = "yaml-rust";
            packageId = "yaml-rust";
            optional = true;
          }
        ];
        features = {
          "default" = [ "toml" "json" "yaml" "hjson" "ini" ];
          "hjson" = [ "serde-hjson" ];
          "ini" = [ "rust-ini" ];
          "json" = [ "serde_json" ];
          "yaml" = [ "yaml-rust" ];
        };
        resolvedDefaultFeatures = [ "default" "hjson" "ini" "json" "rust-ini" "serde-hjson" "serde_json" "toml" "yaml" "yaml-rust" ];
      };
      "console" = rec {
        crateName = "console";
        version = "0.7.7";
        edition = "2015";
        sha256 = "0a4n2syzik9lh02v2i4wdazvm05d99bib7dw0lqvz8mq2hn7r9cc";
        authors = [
          "Armin Ronacher <armin.ronacher@active-4.com>"
        ];
        dependencies = [
          {
            name = "atty";
            packageId = "atty";
          }
          {
            name = "clicolors-control";
            packageId = "clicolors-control";
          }
          {
            name = "encode_unicode";
            packageId = "encode_unicode";
            target = { target, features }: target."windows";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.8.0";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "termios";
            packageId = "termios";
            target = { target, features }: target."unix";
          }
          {
            name = "unicode-width";
            packageId = "unicode-width";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            target = { target, features }: target."windows";
            features = [ "winbase" "winuser" "consoleapi" "processenv" "wincon" ];
          }
        ];
        
      };
      "constant_time_eq" = rec {
        crateName = "constant_time_eq";
        version = "0.1.3";
        edition = "2015";
        sha256 = "17janp8n9dd6kjbbgqiayrh9fw81v4cq9rz04926s5nf4pi15w4g";
        authors = [
          "Cesar Eduardo Barros <cesarb@cesarb.eti.br>"
        ];
        
      };
      "content_inspector" = rec {
        crateName = "content_inspector";
        version = "0.2.4";
        edition = "2015";
        sha256 = "0f1gwv4axxw9wck4a4jxlkm7xjjakb3616isll2k0s4chmpadgdp";
        authors = [
          "David Peter <mail@david-peter.de>"
        ];
        dependencies = [
          {
            name = "memchr";
            packageId = "memchr";
          }
        ];
        
      };
      "cookie" = rec {
        crateName = "cookie";
        version = "0.12.0";
        edition = "2015";
        sha256 = "1mdvqixahcywvqp0y8k2skkgbpfhsp0w73l9mz93dcrx1gq091l8";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Sergio Benitez <sb@sergio.bz>"
        ];
        dependencies = [
          {
            name = "time";
            packageId = "time";
          }
          {
            name = "url";
            packageId = "url";
            optional = true;
          }
        ];
        features = {
          "percent-encode" = [ "url" ];
          "secure" = [ "ring" "base64" ];
        };
        resolvedDefaultFeatures = [ "percent-encode" "url" ];
      };
      "cookie_store" = rec {
        crateName = "cookie_store";
        version = "0.7.0";
        edition = "2018";
        sha256 = "174i9k9g62pfx7y1nqynywdpjplkl3j4hi3ck6bz2r996qzhnxa6";
        authors = [
          "patrick.fernie@gmail.com"
        ];
        dependencies = [
          {
            name = "cookie";
            packageId = "cookie";
            features = [ "percent-encode" ];
          }
          {
            name = "failure";
            packageId = "failure";
          }
          {
            name = "idna";
            packageId = "idna";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "publicsuffix";
            packageId = "publicsuffix";
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde 1.0.94";
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "time";
            packageId = "time";
          }
          {
            name = "try_from";
            packageId = "try_from";
          }
          {
            name = "url";
            packageId = "url";
          }
        ];
        
      };
      "core-foundation" = rec {
        crateName = "core-foundation";
        version = "0.6.4";
        edition = "2015";
        sha256 = "0va97wf49c8dzm9c8pgyk1jn7z21rl0bj1syf2zz5m2z2hzy1f95";
        authors = [
          "The Servo Project Developers"
        ];
        dependencies = [
          {
            name = "core-foundation-sys";
            packageId = "core-foundation-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "mac_os_10_7_support" = [ "core-foundation-sys/mac_os_10_7_support" ];
          "mac_os_10_8_features" = [ "core-foundation-sys/mac_os_10_8_features" ];
          "with-chrono" = [ "chrono" ];
          "with-uuid" = [ "uuid" ];
        };
      };
      "core-foundation-sys" = rec {
        crateName = "core-foundation-sys";
        version = "0.6.2";
        edition = "2015";
        sha256 = "0fzsw1j9g1x598yhwklg59l15hwzc0pyvs01w9fg2kin4598mjp7";
        authors = [
          "The Servo Project Developers"
        ];
        features = {
        };
      };
      "crc" = rec {
        crateName = "crc";
        version = "1.8.1";
        edition = "2015";
        sha256 = "1sqal6gm6lbj7f45iv3rw2s9w3pvvha8v970y51s7k7mwy6m8qyn";
        authors = [
          "Rui Hu <code@mrhooray.com>"
        ];
        buildDependencies = [
          {
            name = "build_const";
            packageId = "build_const";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "crc32fast" = rec {
        crateName = "crc32fast";
        version = "1.2.0";
        edition = "2015";
        sha256 = "1c9dhkvf3brrzzplcijaywxi2w8wv5578i0ryhcm7x8dmzi5s4ms";
        authors = [
          "Sam Rijs <srijs@airpost.net>"
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "crossbeam-deque 0.6.3" = rec {
        crateName = "crossbeam-deque";
        version = "0.6.3";
        edition = "2015";
        sha256 = "04rcpgjs6ns57vag8a3dzx26190dhbvy2l0p9n22b9p1yf64pr05";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "crossbeam-epoch";
            packageId = "crossbeam-epoch";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.6.5";
          }
        ];
        
      };
      "crossbeam-deque 0.7.1" = rec {
        crateName = "crossbeam-deque";
        version = "0.7.1";
        edition = "2015";
        sha256 = "0was9x71cz5g1y3670cyy6jdmsdfg6k9mbf0ddz2k1mdd7hx535i";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "crossbeam-epoch";
            packageId = "crossbeam-epoch";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.6.5";
          }
        ];
        
      };
      "crossbeam-epoch" = rec {
        crateName = "crossbeam-epoch";
        version = "0.7.1";
        edition = "2015";
        sha256 = "1d408b9x82mdbnb405gw58v5mmdbj2rl28a1h7b9rmn25h8f7j84";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "arrayvec";
            packageId = "arrayvec";
            usesDefaultFeatures = false;
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.6.5";
            usesDefaultFeatures = false;
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
            optional = true;
          }
          {
            name = "memoffset";
            packageId = "memoffset";
          }
          {
            name = "scopeguard";
            packageId = "scopeguard 0.3.3";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "nightly" = [ "crossbeam-utils/nightly" "arrayvec/use_union" ];
          "std" = [ "crossbeam-utils/std" "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" ];
      };
      "crossbeam-queue" = rec {
        crateName = "crossbeam-queue";
        version = "0.1.2";
        edition = "2015";
        sha256 = "0jsa9dbxnwqcxfws09vaschf92d4imlbbikmcn4ka8z7rzb9r5vw";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.6.5";
          }
        ];
        
      };
      "crossbeam-utils 0.5.0" = rec {
        crateName = "crossbeam-utils";
        version = "0.5.0";
        edition = "2015";
        sha256 = "05b00dr1srl94d7jkalhwxdvpkaby2f8p3m37y8jpgg82wx4azb7";
        authors = [
          "The Crossbeam Project Developers"
        ];
        features = {
          "default" = [ "use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
      "crossbeam-utils 0.6.5" = rec {
        crateName = "crossbeam-utils";
        version = "0.6.5";
        edition = "2015";
        sha256 = "0p5aa8k3wpsn17md4rx038ac2azm9354knbxdfvn7dd7yk76yc7q";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" ];
      };
      "crossterm" = rec {
        crateName = "crossterm";
        version = "0.9.6";
        edition = "2015";
        sha256 = "1rb14fq7nldvdzwzjjbnvcb67di9hw9ycxx32xcw7cw1g4spkb11";
        authors = [
          "T. Post"
        ];
        dependencies = [
          {
            name = "crossterm_cursor";
            packageId = "crossterm_cursor";
            optional = true;
          }
          {
            name = "crossterm_input";
            packageId = "crossterm_input";
            optional = true;
          }
          {
            name = "crossterm_screen";
            packageId = "crossterm_screen";
            optional = true;
          }
          {
            name = "crossterm_style";
            packageId = "crossterm_style";
            optional = true;
          }
          {
            name = "crossterm_terminal";
            packageId = "crossterm_terminal";
            optional = true;
          }
          {
            name = "crossterm_utils";
            packageId = "crossterm_utils";
          }
        ];
        features = {
          "cursor" = [ "crossterm_cursor" ];
          "default" = [ "cursor" "style" "terminal" "screen" "input" ];
          "input" = [ "crossterm_input" ];
          "screen" = [ "crossterm_screen" ];
          "style" = [ "crossterm_style" ];
          "terminal" = [ "crossterm_terminal" ];
        };
        resolvedDefaultFeatures = [ "crossterm_cursor" "crossterm_input" "crossterm_screen" "crossterm_style" "crossterm_terminal" "cursor" "default" "input" "screen" "style" "terminal" ];
      };
      "crossterm_cursor" = rec {
        crateName = "crossterm_cursor";
        version = "0.2.4";
        edition = "2018";
        sha256 = "0gcdw8nny1ybzim12wp8is0srkjlfx4yk7ilgphgpykvjd1xp3ab";
        authors = [
          "T. Post"
        ];
        dependencies = [
          {
            name = "crossterm_utils";
            packageId = "crossterm_utils";
          }
          {
            name = "crossterm_winapi";
            packageId = "crossterm_winapi";
            target = { target, features }: target."windows";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            target = { target, features }: target."windows";
            features = [ "wincon" "winnt" "minwindef" ];
          }
        ];
        
      };
      "crossterm_input" = rec {
        crateName = "crossterm_input";
        version = "0.3.6";
        edition = "2018";
        sha256 = "1i9b6h7gsifsv6yqzzql1l1z083blaqpj49l7vhp93yw3nsp2fm2";
        authors = [
          "T. Post"
        ];
        dependencies = [
          {
            name = "crossterm_screen";
            packageId = "crossterm_screen";
          }
          {
            name = "crossterm_utils";
            packageId = "crossterm_utils";
          }
          {
            name = "crossterm_winapi";
            packageId = "crossterm_winapi";
            target = { target, features }: target."windows";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            target = { target, features }: target."windows";
            features = [ "winnt" "winuser" ];
          }
        ];
        
      };
      "crossterm_screen" = rec {
        crateName = "crossterm_screen";
        version = "0.2.3";
        edition = "2018";
        sha256 = "0rbdm92f35bqr8hdjw7bx5wh789j3smxwd6yvs1sarvq3ngrp24h";
        authors = [
          "T. Post"
        ];
        dependencies = [
          {
            name = "crossterm_utils";
            packageId = "crossterm_utils";
          }
          {
            name = "crossterm_winapi";
            packageId = "crossterm_winapi";
            target = { target, features }: target."windows";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            target = { target, features }: target."windows";
            features = [ "minwindef" "wincon" ];
          }
        ];
        
      };
      "crossterm_style" = rec {
        crateName = "crossterm_style";
        version = "0.3.3";
        edition = "2018";
        sha256 = "1xv13gj6x4anwavpk1h8pylf1riz0xkbcmjnck4slf77bx09cdcq";
        authors = [
          "T. Post"
        ];
        dependencies = [
          {
            name = "crossterm_utils";
            packageId = "crossterm_utils";
          }
          {
            name = "crossterm_winapi";
            packageId = "crossterm_winapi";
            target = { target, features }: target."windows";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            target = { target, features }: target."windows";
            features = [ "wincon" ];
          }
        ];
        
      };
      "crossterm_terminal" = rec {
        crateName = "crossterm_terminal";
        version = "0.2.4";
        edition = "2018";
        sha256 = "0mmk0gh1fz9c8k45ygd5yh52kgwkly483x9db39mzk6dqnbjqy8q";
        authors = [
          "T. Post"
        ];
        dependencies = [
          {
            name = "crossterm_cursor";
            packageId = "crossterm_cursor";
          }
          {
            name = "crossterm_utils";
            packageId = "crossterm_utils";
          }
          {
            name = "crossterm_winapi";
            packageId = "crossterm_winapi";
            target = { target, features }: target."windows";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
        ];
        
      };
      "crossterm_utils" = rec {
        crateName = "crossterm_utils";
        version = "0.2.3";
        edition = "2015";
        sha256 = "1p3pn2iiq5jslggvk09g2ljp4krbmqg5jprk575pgvnh104x88c3";
        authors = [
          "T. Post"
        ];
        dependencies = [
          {
            name = "crossterm_winapi";
            packageId = "crossterm_winapi";
            target = { target, features }: target."windows";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            target = { target, features }: target."windows";
            features = [ "wincon" ];
          }
        ];
        
      };
      "crossterm_winapi" = rec {
        crateName = "crossterm_winapi";
        version = "0.1.4";
        edition = "2015";
        sha256 = "0chrlzf7ziwwkjdsksw28jvpmkb11b09c8qgp993k9a73i51w1lc";
        authors = [
          "T. Post"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            features = [ "winbase" "consoleapi" "processenv" "handleapi" ];
          }
        ];
        
      };
      "csv" = rec {
        crateName = "csv";
        version = "1.0.7";
        edition = "2015";
        sha256 = "0fqvxa2ixgvzx3jr39cfss2rwqhq16dnh4amzjjva909zddf4i4h";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "csv-core";
            packageId = "csv-core";
          }
          {
            name = "itoa";
            packageId = "itoa";
          }
          {
            name = "ryu";
            packageId = "ryu 0.2.8";
          }
          {
            name = "serde";
            packageId = "serde 1.0.94";
          }
        ];
        
      };
      "csv-core" = rec {
        crateName = "csv-core";
        version = "0.1.5";
        edition = "2015";
        sha256 = "0r9xymqixn5hdkjhvb0wzyivfcnvq0dkhyphs7kzzrip5zvdwp7s";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "memchr";
            packageId = "memchr";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "libc" ];
          "libc" = [ "memchr/libc" ];
        };
        resolvedDefaultFeatures = [ "default" "libc" ];
      };
      "ctor" = rec {
        crateName = "ctor";
        version = "0.1.9";
        edition = "2018";
        sha256 = "0b096a0i9q00gbkwhmqw2jn7zp9r4sw88039bwmjbha3jrhifk1v";
        procMacro = true;
        authors = [
          "Matt Mastracci <matthew@mastracci.com>"
        ];
        dependencies = [
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            usesDefaultFeatures = false;
            features = [ "full" "fold" "parsing" "printing" "proc-macro" ];
          }
        ];
        
      };
      "ctrlc" = rec {
        crateName = "ctrlc";
        version = "3.1.3";
        edition = "2015";
        sha256 = "0zz8ad4bk28s111af5vy1c5kii4zw0cgh87ivzgj28f8nkcd5py7";
        authors = [
          "Antti Ker√§nen <detegr@gmail.com>"
        ];
        dependencies = [
          {
            name = "nix";
            packageId = "nix";
            target = { target, features }: target."unix";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            target = { target, features }: target."windows";
            features = [ "consoleapi" "handleapi" "synchapi" "winbase" ];
          }
        ];
        devDependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            target = {target, features}: target."windows";
            features = [ "fileapi" "processenv" "winnt" ];
          }
        ];
        features = {
        };
      };
      "darling 0.8.6" = rec {
        crateName = "darling";
        version = "0.8.6";
        edition = "2015";
        sha256 = "1q2bwb3lb4ypxxj2qna5jfrhh86ya16mxf257ryab8v2pj8dcn4i";
        authors = [
          "Ted Driggs <ted.driggs@outlook.com>"
        ];
        dependencies = [
          {
            name = "darling_core";
            packageId = "darling_core 0.8.6";
          }
          {
            name = "darling_macro";
            packageId = "darling_macro 0.8.6";
          }
        ];
        features = {
          "diagnostics" = [ "darling_core/diagnostics" ];
          "suggestions" = [ "darling_core/suggestions" ];
        };
      };
      "darling 0.9.0" = rec {
        crateName = "darling";
        version = "0.9.0";
        edition = "2015";
        sha256 = "1mnksf0i47pb7sxvi1iqfwmqy9iny0x8w56ilybpb431b46cpyzw";
        authors = [
          "Ted Driggs <ted.driggs@outlook.com>"
        ];
        dependencies = [
          {
            name = "darling_core";
            packageId = "darling_core 0.9.0";
          }
          {
            name = "darling_macro";
            packageId = "darling_macro 0.9.0";
          }
        ];
        features = {
          "default" = [ "suggestions" ];
          "diagnostics" = [ "darling_core/diagnostics" ];
          "suggestions" = [ "darling_core/suggestions" ];
        };
        resolvedDefaultFeatures = [ "default" "suggestions" ];
      };
      "darling_core 0.8.6" = rec {
        crateName = "darling_core";
        version = "0.8.6";
        edition = "2015";
        sha256 = "10pgybkvnr674j2xr1wvsipzd3gwishf7j8hgq91wfb5jic6i8yj";
        authors = [
          "Ted Driggs <ted.driggs@outlook.com>"
        ];
        dependencies = [
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "ident_case";
            packageId = "ident_case";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "extra-traits" ];
          }
        ];
        features = {
          "default" = [ "syn/full" ];
          "suggestions" = [ "strsim" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "darling_core 0.9.0" = rec {
        crateName = "darling_core";
        version = "0.9.0";
        edition = "2015";
        sha256 = "0b201dx4m58l5ac7gmbjvbf4z2xipnk5d4pqa7mz7gy3f21h3z3a";
        authors = [
          "Ted Driggs <ted.driggs@outlook.com>"
        ];
        dependencies = [
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "ident_case";
            packageId = "ident_case";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "strsim";
            packageId = "strsim 0.7.0";
            optional = true;
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "extra-traits" ];
          }
        ];
        features = {
          "suggestions" = [ "strsim" ];
        };
        resolvedDefaultFeatures = [ "strsim" "suggestions" ];
      };
      "darling_macro 0.8.6" = rec {
        crateName = "darling_macro";
        version = "0.8.6";
        edition = "2015";
        sha256 = "1c87ka0valy3an1c4qvmg6q7yq3zcnij1phc4j2l65sfpn3qjki4";
        procMacro = true;
        authors = [
          "Ted Driggs <ted.driggs@outlook.com>"
        ];
        dependencies = [
          {
            name = "darling_core";
            packageId = "darling_core 0.8.6";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];
        
      };
      "darling_macro 0.9.0" = rec {
        crateName = "darling_macro";
        version = "0.9.0";
        edition = "2015";
        sha256 = "1lcq9418w0vmvncg4a3n9k64zjvqz0048aviqi0rmlpiqv0xmn66";
        procMacro = true;
        authors = [
          "Ted Driggs <ted.driggs@outlook.com>"
        ];
        dependencies = [
          {
            name = "darling_core";
            packageId = "darling_core 0.9.0";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];
        
      };
      "deflate" = rec {
        crateName = "deflate";
        version = "0.7.20";
        edition = "2015";
        sha256 = "1d7d9fpmgjnznrksmd3vlv3dyw01wsrm11ifil6ag22871xnlyvh";
        authors = [
          "oyvindln <oyvindln@users.noreply.github.com>"
        ];
        dependencies = [
          {
            name = "adler32";
            packageId = "adler32";
          }
          {
            name = "byteorder";
            packageId = "byteorder";
          }
        ];
        features = {
          "gzip" = [ "gzip-header" ];
        };
      };
      "derive-new" = rec {
        crateName = "derive-new";
        version = "0.5.7";
        edition = "2015";
        sha256 = "1c4bxqbpd456sv6b9zw0y4sqdb39w0la5jg7w7xirj993dbh9zf3";
        procMacro = true;
        authors = [
          "Nick Cameron <ncameron@mozilla.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "derive_builder" = rec {
        crateName = "derive_builder";
        version = "0.7.2";
        edition = "2015";
        sha256 = "1m34zpj6fw764g7s368r2wgazp154m24d4rshbgn18fdlfk3zi9s";
        procMacro = true;
        build = "build/mod.rs";
        authors = [
          "Colin Kiegel <kiegel@gmx.de>"
          "Pascal Hertleif <killercup@gmail.com>"
          "Jan-Erik Rediger <janerik@fnordig.de>"
          "Ted Driggs <ted.driggs@outlook.com>"
        ];
        dependencies = [
          {
            name = "darling";
            packageId = "darling 0.9.0";
          }
          {
            name = "derive_builder_core";
            packageId = "derive_builder_core";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "extra-traits" ];
          }
        ];
        features = {
          "logging" = [ "log" "env_logger" "derive_builder_core/logging" ];
          "nightlytests" = [ "compiletest_rs" ];
          "skeptic_tests" = [ "skeptic" ];
        };
      };
      "derive_builder_core" = rec {
        crateName = "derive_builder_core";
        version = "0.5.0";
        edition = "2015";
        sha256 = "0drbjk6n8ywls8cmhp4r8xkyjsja0wk3854cn5mj8g1km4ys5202";
        authors = [
          "Colin Kiegel <kiegel@gmx.de>"
          "Pascal Hertleif <killercup@gmail.com>"
          "Jan-Erik Rediger <janerik@fnordig.de>"
          "Ted Driggs <ted.driggs@outlook.com>"
        ];
        dependencies = [
          {
            name = "darling";
            packageId = "darling 0.9.0";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "extra-traits" ];
          }
        ];
        features = {
          "logging" = [ "log" ];
        };
      };
      "derive_more" = rec {
        crateName = "derive_more";
        version = "0.15.0";
        edition = "2015";
        sha256 = "1zks5bn7hmqfz927spmridk9bvy7ly4f38vls331x4hc4hq1653s";
        procMacro = true;
        authors = [
          "Jelte Fennema <github-tech@jeltef.nl>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "extra-traits" ];
          }
        ];
        buildDependencies = [
          {
            name = "rustc_version";
            packageId = "rustc_version";
          }
        ];
        features = {
        };
      };
      "difference" = rec {
        crateName = "difference";
        version = "2.0.0";
        edition = "2015";
        crateBin = [];
        sha256 = "1621wx4k8h452p6xzmzzvm7mz87kxh4yqz0kzxfjj9xmjxlbyk2j";
        authors = [
          "Johann Hofmann <mail@johann-hofmann.com>"
        ];
        features = {
          "bin" = [ "getopts" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "directories" = rec {
        crateName = "directories";
        version = "1.0.2";
        edition = "2015";
        sha256 = "03ybnr3afpspias9d5p12r4pzmax5jc7ijx2ri7psq4h86k3glvj";
        authors = [
          "Simon Ochsenreither <simon@ochsenreither.de>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            target = { target, features }: target."windows";
            features = [ "knownfolders" "objbase" "shlobj" "winbase" "winerror" ];
          }
        ];
        
      };
      "dirs 1.0.5" = rec {
        crateName = "dirs";
        version = "1.0.5";
        edition = "2015";
        sha256 = "009rrhzj9pxyncmm2vhlj70npg0cgggv2hjbbkiwdl9vccq8kmrz";
        authors = [
          "Simon Ochsenreither <simon@ochsenreither.de>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "redox_users";
            packageId = "redox_users";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            target = { target, features }: target."windows";
            features = [ "knownfolders" "objbase" "shlobj" "winbase" "winerror" ];
          }
        ];
        
      };
      "dirs 2.0.1" = rec {
        crateName = "dirs";
        version = "2.0.1";
        edition = "2015";
        sha256 = "18aggvhdg6jcgf1gz8z51rzcx4mgfgjpyb1akqrr7lq2p6lgakhw";
        authors = [
          "Simon Ochsenreither <simon@ochsenreither.de>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "dirs-sys";
            packageId = "dirs-sys";
          }
        ];
        
      };
      "dirs-sys" = rec {
        crateName = "dirs-sys";
        version = "0.3.3";
        edition = "2015";
        sha256 = "0b8ynb5g8hjf6qndfy8l2ai0klb7k3bcjfnwv4niyzf75qwmcxwk";
        authors = [
          "Simon Ochsenreither <simon@ochsenreither.de>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "redox_users";
            packageId = "redox_users";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            target = { target, features }: target."windows";
            features = [ "knownfolders" "objbase" "shlobj" "winbase" "winerror" ];
          }
        ];
        
      };
      "doc-comment" = rec {
        crateName = "doc-comment";
        version = "0.3.1";
        edition = "2015";
        sha256 = "15rsqxgarfpb1yim9sbp9yfgj7p2dq6v51c6bq1a62paii9ylgcj";
        libName = "doc_comment";
        authors = [
          "Guillaume Gomez <guillaume1.gomez@gmail.com>"
        ];
        features = {
        };
      };
      "dtoa" = rec {
        crateName = "dtoa";
        version = "0.4.4";
        edition = "2015";
        sha256 = "0phbm7i0dpn44gzi07683zxaicjap5064w62pidci4fhhciv8mza";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        
      };
      "dunce" = rec {
        crateName = "dunce";
        version = "1.0.0";
        edition = "2018";
        sha256 = "0kys739zvwcvsngspa4lw2dksigiima17i25c09d2j45m3v6pbfh";
        authors = [
          "Kornel <kornel@geekhood.net>"
        ];
        
      };
      "either" = rec {
        crateName = "either";
        version = "1.5.2";
        edition = "2015";
        sha256 = "0yyggfd5yq9hyyp0bd5jj0fgz3rwws42d19ri0znxwwqs3hcy9sm";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
      "encode_unicode" = rec {
        crateName = "encode_unicode";
        version = "0.3.5";
        edition = "2015";
        sha256 = "1g8a8pixkxz6r927f4sc4r15qyc0szxdxb1732v8q7h0di4wkclh";
        authors = [
          "Torbj√∏rn Birch Moltu <t.b.moltu@lyse.net>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "encoding" = rec {
        crateName = "encoding";
        version = "0.2.33";
        edition = "2015";
        sha256 = "1v1ndmkarh9z3n5hk53da4z56hgk9wa5kcsm7cnx345raqw983bb";
        authors = [
          "Kang Seonghoon <public+rust@mearie.org>"
        ];
        dependencies = [
          {
            name = "encoding-index-japanese";
            packageId = "encoding-index-japanese";
          }
          {
            name = "encoding-index-korean";
            packageId = "encoding-index-korean";
          }
          {
            name = "encoding-index-simpchinese";
            packageId = "encoding-index-simpchinese";
          }
          {
            name = "encoding-index-singlebyte";
            packageId = "encoding-index-singlebyte";
          }
          {
            name = "encoding-index-tradchinese";
            packageId = "encoding-index-tradchinese";
          }
        ];
        
      };
      "encoding-index-japanese" = rec {
        crateName = "encoding-index-japanese";
        version = "1.20141219.5";
        edition = "2015";
        sha256 = "148c1lmd640p1d7fzk0nv7892mbyavvwddgqvcsm78798bzv5s04";
        libName = "encoding_index_japanese";
        libPath = "lib.rs";
        authors = [
          "Kang Seonghoon <public+rust@mearie.org>"
        ];
        dependencies = [
          {
            name = "encoding_index_tests";
            packageId = "encoding_index_tests";
          }
        ];
        
      };
      "encoding-index-korean" = rec {
        crateName = "encoding-index-korean";
        version = "1.20141219.5";
        edition = "2015";
        sha256 = "10cxabp5ppygbq4y6y680856zl9zjvq7ahpiw8zj3fmwwsw3zhsd";
        libName = "encoding_index_korean";
        libPath = "lib.rs";
        authors = [
          "Kang Seonghoon <public+rust@mearie.org>"
        ];
        dependencies = [
          {
            name = "encoding_index_tests";
            packageId = "encoding_index_tests";
          }
        ];
        
      };
      "encoding-index-simpchinese" = rec {
        crateName = "encoding-index-simpchinese";
        version = "1.20141219.5";
        edition = "2015";
        sha256 = "1xria2i7mc5dqdrpqxasdbxv1qx46jjbm53if3y1i4cvj2a72ynq";
        libName = "encoding_index_simpchinese";
        libPath = "lib.rs";
        authors = [
          "Kang Seonghoon <public+rust@mearie.org>"
        ];
        dependencies = [
          {
            name = "encoding_index_tests";
            packageId = "encoding_index_tests";
          }
        ];
        
      };
      "encoding-index-singlebyte" = rec {
        crateName = "encoding-index-singlebyte";
        version = "1.20141219.5";
        edition = "2015";
        sha256 = "0jp85bz2pprzvg9m95w4q0vibh67b6w3bx35lafay95jzyndal9k";
        libName = "encoding_index_singlebyte";
        libPath = "lib.rs";
        authors = [
          "Kang Seonghoon <public+rust@mearie.org>"
        ];
        dependencies = [
          {
            name = "encoding_index_tests";
            packageId = "encoding_index_tests";
          }
        ];
        
      };
      "encoding-index-tradchinese" = rec {
        crateName = "encoding-index-tradchinese";
        version = "1.20141219.5";
        edition = "2015";
        sha256 = "060ci4iz6xfvzk38syfbjvs7pix5hch3mvxkksswmqwcd3aj03px";
        libName = "encoding_index_tradchinese";
        libPath = "lib.rs";
        authors = [
          "Kang Seonghoon <public+rust@mearie.org>"
        ];
        dependencies = [
          {
            name = "encoding_index_tests";
            packageId = "encoding_index_tests";
          }
        ];
        
      };
      "encoding_index_tests" = rec {
        crateName = "encoding_index_tests";
        version = "0.1.4";
        edition = "2015";
        sha256 = "0s85y091gl17ixass49bzaivng7w8p82p6nyvz2r3my9w4mxhim2";
        libPath = "index_tests.rs";
        authors = [
          "Kang Seonghoon <public+rust@mearie.org>"
        ];
        
      };
      "encoding_rs" = rec {
        crateName = "encoding_rs";
        version = "0.8.17";
        edition = "2015";
        sha256 = "1v902qqnbd37vdq4rjvp6k05wmghrasfdcjy30gp1xpjg5f7hma1";
        authors = [
          "Henri Sivonen <hsivonen@hsivonen.fi>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
        ];
        features = {
          "fast-legacy-encode" = [ "fast-hangul-encode" "fast-hanja-encode" "fast-kanji-encode" "fast-gb-hanzi-encode" "fast-big5-hanzi-encode" ];
          "simd-accel" = [ "packed_simd" "packed_simd/into_bits" ];
        };
      };
      "enum-utils" = rec {
        crateName = "enum-utils";
        version = "0.1.1";
        edition = "2018";
        sha256 = "0dl8bf2gm7y3k8ds88zbzdivwfsfbh0vcyp1jgxpj649v5rfc6hz";
        procMacro = true;
        authors = [
          "Dylan MacKenzie <ecstaticmorse@gmail.com>"
        ];
        dependencies = [
          {
            name = "enum-utils-from-str";
            packageId = "enum-utils-from-str";
          }
          {
            name = "failure";
            packageId = "failure";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "serde_derive_internals";
            packageId = "serde_derive_internals";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];
        
      };
      "enum-utils-from-str" = rec {
        crateName = "enum-utils-from-str";
        version = "0.1.0";
        edition = "2018";
        sha256 = "06l0flhl4y8iwdlznryhyqs6d63z62ld9g9a28735mvn3ww6jmkb";
        authors = [
          "Dylan MacKenzie <ecstaticmorse@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
        ];
        
      };
      "enum_derive" = rec {
        crateName = "enum_derive";
        version = "0.1.7";
        edition = "2015";
        sha256 = "05n8mdca3y2c8pvl1isncj52fa80wplvx28lxvwqmpzfr6lc4sj0";
        authors = [
          "Daniel Keep <daniel.keep@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "env_logger" = rec {
        crateName = "env_logger";
        version = "0.6.1";
        edition = "2015";
        sha256 = "0nh7ja7kikq551x16k1zgcn61xgsiip590cm1aimv52a0a8sh7xn";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "atty";
            packageId = "atty";
            optional = true;
          }
          {
            name = "humantime";
            packageId = "humantime";
            optional = true;
          }
          {
            name = "log";
            packageId = "log";
            features = [ "std" ];
          }
          {
            name = "regex";
            packageId = "regex";
            optional = true;
          }
          {
            name = "termcolor";
            packageId = "termcolor";
            optional = true;
          }
        ];
        features = {
          "default" = [ "termcolor" "atty" "humantime" "regex" ];
        };
        resolvedDefaultFeatures = [ "atty" "default" "humantime" "regex" "termcolor" ];
      };
      "error-chain" = rec {
        crateName = "error-chain";
        version = "0.12.1";
        edition = "2015";
        crateBin = [];
        sha256 = "1ndpw1ny2kxqpw6k1shq8k56z4vfpk4xz9zr8ay988k0rffrxd1s";
        authors = [
          "Brian Anderson <banderson@mozilla.com>"
          "Paul Colomiets <paul@colomiets.name>"
          "Colin Kiegel <kiegel@gmx.de>"
          "Yamakaky <yamakaky@yamaworld.fr>"
        ];
        dependencies = [
          {
            name = "backtrace";
            packageId = "backtrace";
            optional = true;
          }
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check";
          }
        ];
        features = {
          "default" = [ "backtrace" "example_generated" ];
        };
        resolvedDefaultFeatures = [ "backtrace" "default" "example_generated" ];
      };
      "failure" = rec {
        crateName = "failure";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1qppmgv4i5jj6vrss91qackqnl0a12h7lnby4l7j5fdy78yxhnvr";
        authors = [
          "Without Boats <boats@mozilla.com>"
        ];
        dependencies = [
          {
            name = "backtrace";
            packageId = "backtrace";
            optional = true;
          }
          {
            name = "failure_derive";
            packageId = "failure_derive";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" "derive" ];
          "derive" = [ "failure_derive" ];
          "std" = [ "backtrace" ];
        };
        resolvedDefaultFeatures = [ "backtrace" "default" "derive" "failure_derive" "std" ];
      };
      "failure_derive" = rec {
        crateName = "failure_derive";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1q97n7dp51j5hndzic9ng2fgn6f3z5ya1992w84l7vypby8n647a";
        procMacro = true;
        authors = [
          "Without Boats <woboats@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
          {
            name = "synstructure";
            packageId = "synstructure";
          }
        ];
        features = {
        };
      };
      "fixedbitset" = rec {
        crateName = "fixedbitset";
        version = "0.1.9";
        edition = "2015";
        sha256 = "0czam11mi80dbyhf4rd4lz0ihcf7vkfchrdcrn45wbs0h40dxm46";
        authors = [
          "bluss"
        ];
        
      };
      "flate2" = rec {
        crateName = "flate2";
        version = "1.0.9";
        edition = "2015";
        sha256 = "1n639gc7sbmrkir6pif608xqpwcv60kigmp5cn9x7m8892nk82am";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "crc32fast";
            packageId = "crc32fast";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "miniz-sys";
            packageId = "miniz-sys";
            optional = true;
          }
          {
            name = "miniz_oxide_c_api";
            packageId = "miniz_oxide_c_api";
            optional = true;
            features = [ "no_c_export" ];
          }
          {
            name = "miniz_oxide_c_api";
            packageId = "miniz_oxide_c_api";
            target = { target, features }: ((target."arch" == "wasm32") && (!(target."os" == "emscripten")));
            features = [ "no_c_export" ];
          }
        ];
        features = {
          "default" = [ "miniz-sys" ];
          "rust_backend" = [ "miniz_oxide_c_api" ];
          "tokio" = [ "tokio-io" "futures" ];
          "zlib" = [ "libz-sys" ];
        };
        resolvedDefaultFeatures = [ "default" "miniz-sys" "miniz_oxide_c_api" "rust_backend" ];
      };
      "fnv" = rec {
        crateName = "fnv";
        version = "1.0.6";
        edition = "2015";
        sha256 = "1ww56bi1r5b8id3ns9j3qxbi7w5h005rzhiryy0zi9h97raqbb9g";
        libPath = "lib.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        
      };
      "foreign-types" = rec {
        crateName = "foreign-types";
        version = "0.3.2";
        edition = "2015";
        sha256 = "1cgk0vyd7r45cj769jym4a6s7vwshvd0z4bqrb92q1fwibmkkwzn";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = [
          {
            name = "foreign-types-shared";
            packageId = "foreign-types-shared";
          }
        ];
        
      };
      "foreign-types-shared" = rec {
        crateName = "foreign-types-shared";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0jxgzd04ra4imjv8jgkmdq59kj8fsz6w4zxsbmlai34h26225c00";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        
      };
      "fuchsia-cprng" = rec {
        crateName = "fuchsia-cprng";
        version = "0.1.1";
        edition = "2018";
        sha256 = "1fnkqrbz7ixxzsb04bsz9p0zzazanma8znfdqjvh39n14vapfvx0";
        authors = [
          "Erick Tryzelaar <etryzelaar@google.com>"
        ];
        
      };
      "fuchsia-zircon" = rec {
        crateName = "fuchsia-zircon";
        version = "0.3.3";
        edition = "2015";
        sha256 = "10jxc5ks1x06gpd0xg51kcjrxr35nj6qhx2zlc5n7bmskv3675rf";
        authors = [
          "Raph Levien <raph@google.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "fuchsia-zircon-sys";
            packageId = "fuchsia-zircon-sys";
          }
        ];
        
      };
      "fuchsia-zircon-sys" = rec {
        crateName = "fuchsia-zircon-sys";
        version = "0.3.3";
        edition = "2015";
        sha256 = "19zp2085qsyq2bh1gvcxq1lb8w6v6jj9kbdkhpdjrl95fypakjix";
        authors = [
          "Raph Levien <raph@google.com>"
        ];
        
      };
      "futures" = rec {
        crateName = "futures";
        version = "0.1.27";
        edition = "2015";
        sha256 = "0f81nr10k3z8za8cx2j1rgv687xfgqgsnbknayazgi61qv0pw0x2";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "use_std" "with-deprecated" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" "with-deprecated" ];
      };
      "futures-channel-preview" = rec {
        crateName = "futures-channel-preview";
        version = "0.3.0-alpha.16";
        edition = "2018";
        sha256 = "0yph1k6xbh67rpy9nh3ybddfxsrdhfi6b4b62jvyjwn25xqj7mac";
        libName = "futures_channel";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "futures-core-preview";
            packageId = "futures-core-preview";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "futures-core-preview/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "futures-core-preview" = rec {
        crateName = "futures-core-preview";
        version = "0.3.0-alpha.16";
        edition = "2018";
        sha256 = "0dlclp85bbay5q900c5vsn6m7fbxc1dbnmlqhixnaav453rp15vi";
        libName = "futures_core";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
      "futures-cpupool" = rec {
        crateName = "futures-cpupool";
        version = "0.1.8";
        edition = "2015";
        sha256 = "1r32456gpblzfvnkf60545v8acqk7gh5zhyhi1jn669k9gicv45b";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures";
            usesDefaultFeatures = false;
            features = [ "use_std" ];
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
        ];
        features = {
          "default" = [ "with-deprecated" ];
          "with-deprecated" = [ "futures/with-deprecated" ];
        };
        resolvedDefaultFeatures = [ "default" "with-deprecated" ];
      };
      "futures-executor-preview" = rec {
        crateName = "futures-executor-preview";
        version = "0.3.0-alpha.16";
        edition = "2018";
        sha256 = "00yy60rkbymj9wwwvkw26d1k6n8qrn39nckaaxcx0dc5j26cap9i";
        libName = "futures_executor";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "futures-channel-preview";
            packageId = "futures-channel-preview";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-core-preview";
            packageId = "futures-core-preview";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-util-preview";
            packageId = "futures-util-preview";
            usesDefaultFeatures = false;
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
            optional = true;
          }
          {
            name = "pin-utils";
            packageId = "pin-utils";
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "num_cpus" "futures-core-preview/std" "futures-util-preview/std" "futures-channel-preview/std" ];
        };
        resolvedDefaultFeatures = [ "num_cpus" "std" ];
      };
      "futures-io-preview" = rec {
        crateName = "futures-io-preview";
        version = "0.3.0-alpha.16";
        edition = "2018";
        sha256 = "18sry5ynzb4vaimsssi3jqbsfalksn9yy3bvg4mx7j9r3xxbz86c";
        libName = "futures_io";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "futures-core-preview";
            packageId = "futures-core-preview";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "futures-core-preview/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "futures-preview" = rec {
        crateName = "futures-preview";
        version = "0.3.0-alpha.16";
        edition = "2018";
        sha256 = "0qxjsw4l3pwx7mq64x9007hg0r0aymhpkswkpcsmhjva05gsrzpw";
        libName = "futures";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "futures-channel-preview";
            packageId = "futures-channel-preview";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-core-preview";
            packageId = "futures-core-preview";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-executor-preview";
            packageId = "futures-executor-preview";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-io-preview";
            packageId = "futures-io-preview";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-sink-preview";
            packageId = "futures-sink-preview";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-util-preview";
            packageId = "futures-util-preview";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "futures-core-preview/alloc" "futures-sink-preview/alloc" "futures-util-preview/alloc" ];
          "async-await" = [ "futures-util-preview/async-await" ];
          "cfg-target-has-atomic" = [ "futures-core-preview/cfg-target-has-atomic" "futures-util-preview/cfg-target-has-atomic" ];
          "compat" = [ "std" "futures-util-preview/compat" ];
          "default" = [ "std" ];
          "io-compat" = [ "compat" "futures-util-preview/io-compat" ];
          "never-type" = [ "futures-util-preview/never-type" ];
          "nightly" = [ "futures-core-preview/nightly" "futures-sink-preview/nightly" "futures-util-preview/nightly" ];
          "std" = [ "alloc" "futures-core-preview/std" "futures-executor-preview/std" "futures-io-preview/std" "futures-sink-preview/std" "futures-util-preview/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "compat" "default" "io-compat" "std" ];
      };
      "futures-sink-preview" = rec {
        crateName = "futures-sink-preview";
        version = "0.3.0-alpha.16";
        edition = "2018";
        sha256 = "1r44nzspkql2vz1kb5qp0q1dlw8hzn7w72xpp6h4r5xmssngvp29";
        libName = "futures_sink";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "futures-channel-preview";
            packageId = "futures-channel-preview";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-core-preview";
            packageId = "futures-core-preview";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "futures-core-preview/alloc" ];
          "default" = [ "std" ];
          "nightly" = [ "futures-core-preview/nightly" ];
          "std" = [ "alloc" "futures-core-preview/std" "futures-channel-preview/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "futures-util-preview" = rec {
        crateName = "futures-util-preview";
        version = "0.3.0-alpha.16";
        edition = "2018";
        sha256 = "1cildqfd9ys5rmvvj11wx48ma5lk0zymyhlkmfww4ishkhdlb87p";
        libName = "futures_util";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures";
            rename = "futures_01";
            optional = true;
          }
          {
            name = "futures-channel-preview";
            packageId = "futures-channel-preview";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-core-preview";
            packageId = "futures-core-preview";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-io-preview";
            packageId = "futures-io-preview";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-sink-preview";
            packageId = "futures-sink-preview";
            usesDefaultFeatures = false;
          }
          {
            name = "memchr";
            packageId = "memchr";
            optional = true;
          }
          {
            name = "pin-utils";
            packageId = "pin-utils";
          }
          {
            name = "slab";
            packageId = "slab";
            optional = true;
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
            optional = true;
          }
        ];
        features = {
          "alloc" = [ "futures-core-preview/alloc" "futures-sink-preview/alloc" ];
          "async-await" = [ "std" "futures-select-macro-preview" "proc-macro-hack" "proc-macro-nested" "rand" "rand_core" ];
          "cfg-target-has-atomic" = [ "futures-core-preview/cfg-target-has-atomic" ];
          "compat" = [ "std" "futures_01" ];
          "default" = [ "std" ];
          "io-compat" = [ "compat" "tokio-io" ];
          "nightly" = [ "futures-core-preview/nightly" "futures-sink-preview/nightly" ];
          "std" = [ "alloc" "futures-core-preview/std" "futures-io-preview/std" "futures-sink-preview/std" "slab" "memchr" ];
        };
        resolvedDefaultFeatures = [ "alloc" "compat" "futures_01" "io-compat" "memchr" "slab" "std" "tokio-io" ];
      };
      "futures_codec" = rec {
        crateName = "futures_codec";
        version = "0.2.2";
        edition = "2018";
        sha256 = "07ncmnab65ys0l1y59b8q9806i3vy5whpgrgbl0xyrg30fm4h3xn";
        authors = [
          "Matt Hunzinger <matthunz2@gmail.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "futures-preview";
            packageId = "futures-preview";
          }
        ];
        
      };
      "getrandom" = rec {
        crateName = "getrandom";
        version = "0.1.6";
        edition = "2018";
        sha256 = "0macrjfkgsjn6ikr94agapp4fkxmr8w7y2g7qis4icc4a17cwp76";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
            target = { target, features }: (target."unix" || (target."os" == "redox"));
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
            target = { target, features }: (target."os" == "uefi");
            features = [ "spin_no_std" ];
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
            target = { target, features }: (stdenv.hostPlatform.config == "wasm32-unknown-unknown");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" || (target."os" == "wasi"));
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "getset" = rec {
        crateName = "getset";
        version = "0.0.7";
        edition = "2015";
        sha256 = "1jz2ark3zi0rpp9fcx2gyzr0jax2kdf1yjv9fja1y70cml7xxyqr";
        procMacro = true;
        authors = [
          "Ana Hobden <ana@hoverbear.org>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
            usesDefaultFeatures = false;
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];
        
      };
      "gif" = rec {
        crateName = "gif";
        version = "0.10.2";
        edition = "2015";
        sha256 = "0s7mm8i971i0clm8xs6kvbl8yins7cib4isrxs35rq6njysz5hl6";
        authors = [
          "nwin <nwin@users.noreply.github.com>"
        ];
        dependencies = [
          {
            name = "color_quant";
            packageId = "color_quant";
          }
          {
            name = "lzw";
            packageId = "lzw";
          }
        ];
        features = {
          "c_api" = [ "libc" ];
          "default" = [ "raii_no_panic" ];
        };
        resolvedDefaultFeatures = [ "default" "raii_no_panic" ];
      };
      "git2" = rec {
        crateName = "git2";
        version = "0.9.1";
        edition = "2018";
        sha256 = "0cayf5w7wkvclvs8brbi7lyfxbdklwls9s49mpf2brl655yjwjwj";
        authors = [
          "Josh Triplett <josh@joshtriplett.org>"
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "libgit2-sys";
            packageId = "libgit2-sys";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "openssl-probe";
            packageId = "openssl-probe";
            optional = true;
            target = { target, features }: (target."unix" && (!(target."os" == "macos")));
          }
          {
            name = "openssl-sys";
            packageId = "openssl-sys";
            optional = true;
            target = { target, features }: (target."unix" && (!(target."os" == "macos")));
          }
          {
            name = "url";
            packageId = "url";
          }
        ];
        features = {
          "default" = [ "ssh" "https" "ssh_key_from_memory" ];
          "https" = [ "libgit2-sys/https" "openssl-sys" "openssl-probe" ];
          "ssh" = [ "libgit2-sys/ssh" ];
          "ssh_key_from_memory" = [ "libgit2-sys/ssh_key_from_memory" ];
          "vendored-openssl" = [ "openssl-sys/vendored" ];
        };
        resolvedDefaultFeatures = [ "default" "https" "openssl-probe" "openssl-sys" "ssh" "ssh_key_from_memory" ];
      };
      "h2" = rec {
        crateName = "h2";
        version = "0.1.24";
        edition = "2015";
        sha256 = "1lk5290jrz0031yi66chs0pfx5p60a240mgya74vpgic16isbck9";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "http";
            packageId = "http";
          }
          {
            name = "indexmap";
            packageId = "indexmap";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "string";
            packageId = "string";
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
          }
        ];
        features = {
        };
      };
      "http" = rec {
        crateName = "http";
        version = "0.1.17";
        edition = "2015";
        sha256 = "06icxvrd26r6s7dzjavja7r47hgjb9851wblqh8frxnsy3q29lzf";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Carl Lerche <me@carllerche.com>"
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "itoa";
            packageId = "itoa";
          }
        ];
        
      };
      "http-body" = rec {
        crateName = "http-body";
        version = "0.1.0";
        edition = "2015";
        sha256 = "0b99404k4mw6a92hvyr0qwzkqv4f866ykg0x7913limjq5cwhhb7";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "http";
            packageId = "http";
          }
          {
            name = "tokio-buf";
            packageId = "tokio-buf";
            usesDefaultFeatures = false;
          }
        ];
        
      };
      "httparse" = rec {
        crateName = "httparse";
        version = "1.3.3";
        edition = "2015";
        sha256 = "10vsfx1b8drhif08fbi0ha9d3v1f3h80w42rxh0y3hrvzl64nwz8";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "humantime" = rec {
        crateName = "humantime";
        version = "1.2.0";
        edition = "2015";
        sha256 = "057ilhy6vc9iqhhby5ymh45m051pgxwq2z437gwkbnqhw7rfb9rw";
        authors = [
          "Paul Colomiets <paul@colomiets.name>"
        ];
        dependencies = [
          {
            name = "quick-error";
            packageId = "quick-error";
          }
        ];
        
      };
      "hyper" = rec {
        crateName = "hyper";
        version = "0.12.30";
        edition = "2015";
        sha256 = "06gj8gl98wg6lp54mnzxzs05idyqsjnq88inkcg0p9q940mnkrs0";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "futures-cpupool";
            packageId = "futures-cpupool";
            optional = true;
          }
          {
            name = "h2";
            packageId = "h2";
          }
          {
            name = "http";
            packageId = "http";
          }
          {
            name = "http-body";
            packageId = "http-body";
          }
          {
            name = "httparse";
            packageId = "httparse";
          }
          {
            name = "iovec";
            packageId = "iovec";
          }
          {
            name = "itoa";
            packageId = "itoa";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "net2";
            packageId = "net2";
            optional = true;
          }
          {
            name = "time";
            packageId = "time";
          }
          {
            name = "tokio";
            packageId = "tokio";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "rt-full" ];
          }
          {
            name = "tokio-buf";
            packageId = "tokio-buf";
          }
          {
            name = "tokio-executor";
            packageId = "tokio-executor";
            optional = true;
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
          }
          {
            name = "tokio-reactor";
            packageId = "tokio-reactor";
            optional = true;
          }
          {
            name = "tokio-tcp";
            packageId = "tokio-tcp";
            optional = true;
          }
          {
            name = "tokio-threadpool";
            packageId = "tokio-threadpool";
            optional = true;
          }
          {
            name = "tokio-timer";
            packageId = "tokio-timer";
            optional = true;
          }
          {
            name = "want";
            packageId = "want";
          }
        ];
        buildDependencies = [
          {
            name = "rustc_version";
            packageId = "rustc_version";
          }
        ];
        features = {
          "default" = [ "__internal_flaky_tests" "runtime" ];
          "runtime" = [ "futures-cpupool" "net2" "tokio" "tokio-executor" "tokio-reactor" "tokio-tcp" "tokio-threadpool" "tokio-timer" ];
        };
        resolvedDefaultFeatures = [ "__internal_flaky_tests" "default" "futures-cpupool" "net2" "runtime" "tokio" "tokio-executor" "tokio-reactor" "tokio-tcp" "tokio-threadpool" "tokio-timer" ];
      };
      "hyper-tls" = rec {
        crateName = "hyper-tls";
        version = "0.3.2";
        edition = "2015";
        sha256 = "0kqp4sz8613j6nv375wfj3gh95ff4nb6a3rb1f2vbx0almm0v01s";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "hyper";
            packageId = "hyper";
          }
          {
            name = "native-tls";
            packageId = "native-tls";
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
          }
        ];
        features = {
          "vendored" = [ "native-tls/vendored" ];
        };
      };
      "ident_case" = rec {
        crateName = "ident_case";
        version = "1.0.1";
        edition = "2015";
        sha256 = "0fac21q6pwns8gh1hz3nbq15j8fi441ncl6w4vlnd1cmc55kiq5r";
        authors = [
          "Ted Driggs <ted.driggs@outlook.com>"
        ];
        
      };
      "idna" = rec {
        crateName = "idna";
        version = "0.1.5";
        edition = "2015";
        sha256 = "0kl4gs5kaydn4v07c6ka33spm9qdh2np0x7iw7g5zd8z1c7rxw1q";
        authors = [
          "The rust-url developers"
        ];
        dependencies = [
          {
            name = "matches";
            packageId = "matches";
          }
          {
            name = "unicode-bidi";
            packageId = "unicode-bidi";
          }
          {
            name = "unicode-normalization";
            packageId = "unicode-normalization";
          }
        ];
        
      };
      "image" = rec {
        crateName = "image";
        version = "0.21.2";
        edition = "2015";
        sha256 = "193b8wkpad01s442nnimn3h7pnd2ip0apx5b2b7zqbh1bmcqw6cr";
        authors = [
          "ccgn"
          "bvssvni <bvssvni@gmail.com>"
          "nwin"
          "TyOverby <ty@pre-alpha.com>"
          "HeroicKatora"
          "Calum"
          "CensoredUsername <cens.username@gmail.com>"
          "fintelia <fintelia@gmail.com>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "gif";
            packageId = "gif";
            optional = true;
          }
          {
            name = "jpeg-decoder";
            packageId = "jpeg-decoder";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "lzw";
            packageId = "lzw";
          }
          {
            name = "num-iter";
            packageId = "num-iter";
          }
          {
            name = "num-rational";
            packageId = "num-rational";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.8";
          }
          {
            name = "png";
            packageId = "png";
            optional = true;
          }
          {
            name = "scoped_threadpool";
            packageId = "scoped_threadpool";
            optional = true;
          }
          {
            name = "tiff";
            packageId = "tiff";
            optional = true;
          }
        ];
        features = {
          "default" = [ "gif_codec" "jpeg" "ico" "png_codec" "pnm" "tga" "tiff" "webp" "bmp" "hdr" "dxt" "jpeg_rayon" ];
          "gif_codec" = [ "gif" ];
          "hdr" = [ "scoped_threadpool" ];
          "ico" = [ "bmp" "png_codec" ];
          "jpeg" = [ "jpeg-decoder" ];
          "jpeg_rayon" = [ "jpeg-decoder/rayon" ];
          "png_codec" = [ "png" ];
        };
        resolvedDefaultFeatures = [ "bmp" "default" "dxt" "gif" "gif_codec" "hdr" "ico" "jpeg" "jpeg-decoder" "jpeg_rayon" "png" "png_codec" "pnm" "scoped_threadpool" "tga" "tiff" "webp" ];
      };
      "indexmap" = rec {
        crateName = "indexmap";
        version = "1.0.2";
        edition = "2015";
        sha256 = "13f5k1kl2759y4xfy0vhays35fmrkmhqngbr2ny8smvrbz0ag0by";
        authors = [
          "bluss"
          "Josh Stone <cuviper@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde 1.0.94";
            optional = true;
          }
        ];
        features = {
          "serde-1" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "serde" "serde-1" ];
      };
      "inflate" = rec {
        crateName = "inflate";
        version = "0.4.5";
        edition = "2015";
        sha256 = "1zxjdn8iwa0ssxrnjmywm3r1v284wryvzrf8vkc7nyf5ijbjknqw";
        authors = [
          "nwin <nwin@users.noreply.github.com>"
        ];
        dependencies = [
          {
            name = "adler32";
            packageId = "adler32";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "iovec" = rec {
        crateName = "iovec";
        version = "0.1.2";
        edition = "2015";
        sha256 = "025vi072m22299z3fg73qid188z2iip7k41ba6v5v5yhwwby9rnv";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
            target = { target, features }: target."windows";
          }
        ];
        
      };
      "is-match" = rec {
        crateName = "is-match";
        version = "0.1.0";
        edition = "2015";
        sha256 = "0lxh7q417fy422br8dfhdgskwgrcsfwpq8v5prvwd89kxxm3hnvy";
        authors = [
          "Matthias Beyer <mail@beyermatthias.de>"
        ];
        
      };
      "isatty" = rec {
        crateName = "isatty";
        version = "0.1.9";
        edition = "2015";
        sha256 = "1p2yx591kwz2b3f2bv7al9hamhn052zmz9jd969rdv4kzj0q46p3";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            target = { target, features }: target."windows";
            features = [ "consoleapi" "fileapi" "minwinbase" "minwindef" "processenv" "winbase" "winnt" ];
          }
        ];
        
      };
      "itertools 0.7.11" = rec {
        crateName = "itertools";
        version = "0.7.11";
        edition = "2015";
        sha256 = "03cpsj26xmyamcalclqzr1i700vwx8hnbgxbpjvs354f8mnr8iqd";
        authors = [
          "bluss"
        ];
        dependencies = [
          {
            name = "either";
            packageId = "either";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
      "itertools 0.8.0" = rec {
        crateName = "itertools";
        version = "0.8.0";
        edition = "2015";
        sha256 = "0n2k13b6w4x2x6np2lykh9bj3b3z4hwh2r4cn3z2dgnfq7cng12v";
        authors = [
          "bluss"
        ];
        dependencies = [
          {
            name = "either";
            packageId = "either";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
      "itoa" = rec {
        crateName = "itoa";
        version = "0.4.4";
        edition = "2015";
        sha256 = "0zvg2d9qv3avhf3d8ggglh6fdyw8kkwqg3r4622ly5yhxnvnc4jh";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "jpeg-decoder" = rec {
        crateName = "jpeg-decoder";
        version = "0.1.15";
        edition = "2015";
        sha256 = "038i40nrpln9433dpgdr94h7fvhrv95ificlxaa3yjxk0qrd9dy8";
        authors = [
          "Ulf Nilsson <kaksmet@gmail.com>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "rayon";
            packageId = "rayon";
            optional = true;
          }
        ];
        features = {
          "default" = [ "rayon" ];
        };
        resolvedDefaultFeatures = [ "rayon" ];
      };
      "kernel32-sys" = rec {
        crateName = "kernel32-sys";
        version = "0.2.2";
        edition = "2015";
        sha256 = "1389av0601a9yz8dvx5zha9vmkd6ik7ax0idpb032d28555n41vm";
        libName = "kernel32";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
          }
        ];
        buildDependencies = [
          {
            name = "winapi-build";
            packageId = "winapi-build";
          }
        ];
        
      };
      "language-reporting" = rec {
        crateName = "language-reporting";
        version = "0.3.1";
        edition = "2018";
        sha256 = "1nqmz3kl1sz628nhg7d7rdrskwq3ynhvdsvqgqg4wc7l9aw152b2";
        authors = [
          "Yehuda Katz <wycats@gmail.com>"
          "Brendan Zabarauskas <bjzaba@yahoo.com.au>"
        ];
        dependencies = [
          {
            name = "derive-new";
            packageId = "derive-new";
          }
          {
            name = "itertools";
            packageId = "itertools 0.7.11";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "render-tree";
            packageId = "render-tree";
          }
          {
            name = "serde";
            packageId = "serde 1.0.94";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "termcolor";
            packageId = "termcolor";
          }
        ];
        
      };
      "lazy_static 0.2.11" = rec {
        crateName = "lazy_static";
        version = "0.2.11";
        edition = "2015";
        sha256 = "0wxy8vak7jsx6r8gx475pjqpx11p2bfq4wvw6idmqi31mp3k7w3n";
        authors = [
          "Marvin L√∂bel <loebel.marvin@gmail.com>"
        ];
        features = {
          "compiletest" = [ "compiletest_rs" ];
          "spin_no_std" = [ "nightly" "spin" ];
        };
      };
      "lazy_static 1.3.0" = rec {
        crateName = "lazy_static";
        version = "1.3.0";
        edition = "2015";
        sha256 = "052ac27w189hrf1j3hz7sga46rp84zl2hqnzyihxv78mgzr2jmxw";
        authors = [
          "Marvin L√∂bel <loebel.marvin@gmail.com>"
        ];
        dependencies = [
          {
            name = "spin";
            packageId = "spin";
            optional = true;
          }
        ];
        features = {
          "spin_no_std" = [ "spin" ];
        };
        resolvedDefaultFeatures = [ "spin" "spin_no_std" ];
      };
      "lazycell" = rec {
        crateName = "lazycell";
        version = "1.2.1";
        edition = "2015";
        sha256 = "0gvqycmpv7parc98i6y64ai7rvxrn1947z2a6maa02g4kvxdd55j";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Nikita Pekin <contact@nikitapek.in>"
        ];
        features = {
          "nightly-testing" = [ "clippy" "nightly" ];
        };
      };
      "lexical-core" = rec {
        crateName = "lexical-core";
        version = "0.4.1";
        edition = "2015";
        sha256 = "15m7895w0r36hhc26pvgxxdfclfldfg2v4x1vv0dzj3hycqln8lx";type = [ "lib" "staticlib" "cdylib" ];
        authors = [
          "Alex Huszagh <ahuszagh@gmail.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "ryu";
            packageId = "ryu 0.2.8";
            optional = true;
          }
          {
            name = "stackvector";
            packageId = "stackvector";
            optional = true;
          }
          {
            name = "static_assertions";
            packageId = "static_assertions";
          }
        ];
        buildDependencies = [
          {
            name = "rustc_version";
            packageId = "rustc_version";
          }
        ];
        features = {
          "correct" = [ "stackvector" "table" ];
          "default" = [ "correct" "ryu" "std" ];
          "grisu3" = [ "dtoa" ];
        };
        resolvedDefaultFeatures = [ "correct" "default" "ryu" "stackvector" "std" "table" ];
      };
      "libc" = rec {
        crateName = "libc";
        version = "0.2.58";
        edition = "2015";
        sha256 = "06d32dv5inxajhibwgz6z6nq0mgkighykrhb01k46pmsjrkvi0b2";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "std" ];
          "rustc-dep-of-std" = [ "align" "rustc-std-workspace-core" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "libgit2-sys" = rec {
        crateName = "libgit2-sys";
        version = "0.8.1";
        edition = "2018";
        sha256 = "1xwzkl2asfvxfns1i307fv0xyfgfr6p1iq9fkn63nckp7zi426ll";
        libName = "libgit2_sys";
        libPath = "lib.rs";
        authors = [
          "Josh Triplett <josh@joshtriplett.org>"
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "libssh2-sys";
            packageId = "libssh2-sys";
            optional = true;
          }
          {
            name = "libz-sys";
            packageId = "libz-sys";
          }
          {
            name = "openssl-sys";
            packageId = "openssl-sys";
            optional = true;
            target = { target, features }: target."unix";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
        ];
        features = {
          "https" = [ "openssl-sys" ];
          "ssh" = [ "libssh2-sys" ];
        };
        resolvedDefaultFeatures = [ "https" "libssh2-sys" "openssl-sys" "ssh" "ssh_key_from_memory" ];
      };
      "libssh2-sys" = rec {
        crateName = "libssh2-sys";
        version = "0.2.11";
        edition = "2015";
        sha256 = "17dz3xxy5bc73sr52maa6wdqmw1a0ymznrgfzlxid2rng101yshj";
        libName = "libssh2_sys";
        libPath = "lib.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "libz-sys";
            packageId = "libz-sys";
          }
          {
            name = "openssl-sys";
            packageId = "openssl-sys";
            target = { target, features }: target."unix";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
          {
            name = "vcpkg";
            packageId = "vcpkg";
            target = {target, features}: (target."env" == "msvc");
          }
        ];
        
      };
      "libz-sys" = rec {
        crateName = "libz-sys";
        version = "1.0.25";
        edition = "2015";
        sha256 = "1gjycyl2283525abks98bhxa4r259m617xfm5z52p3p3c8ry9d9f";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
          {
            name = "vcpkg";
            packageId = "vcpkg";
            target = {target, features}: (target."env" == "msvc");
          }
        ];
        features = {
        };
      };
      "line-wrap" = rec {
        crateName = "line-wrap";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1ffa2whkyh9mwvdlpk6v8pjkg8p8mlzyjfymq5adll9a18sl80zk";
        authors = [
          "Marshall Pierce <marshall@mpierce.org>"
        ];
        dependencies = [
          {
            name = "safemem";
            packageId = "safemem";
          }
        ];
        
      };
      "linked-hash-map 0.3.0" = rec {
        crateName = "linked-hash-map";
        version = "0.3.0";
        edition = "2015";
        sha256 = "1kaf95grvfqchxn8pl0854g8ab0fzl56217hndhhhz5qqm2j09kd";
        authors = [
          "Stepan Koltsov <stepan.koltsov@gmail.com>"
          "Andrew Paseltiner <apaseltiner@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde 0.8.23";
            optional = true;
          }
          {
            name = "serde_test";
            packageId = "serde_test";
            optional = true;
          }
        ];
        features = {
          "serde_impl" = [ "serde" "serde_test" ];
        };
        resolvedDefaultFeatures = [ "serde" "serde_impl" "serde_test" ];
      };
      "linked-hash-map 0.5.2" = rec {
        crateName = "linked-hash-map";
        version = "0.5.2";
        edition = "2015";
        sha256 = "10qgbvh00q36ql0jh00rxh2jlq6qvl11n6mig0cvkpf4xf5bd4df";
        authors = [
          "Stepan Koltsov <stepan.koltsov@gmail.com>"
          "Andrew Paseltiner <apaseltiner@gmail.com>"
        ];
        features = {
          "heapsize_impl" = [ "heapsize" ];
          "serde_impl" = [ "serde" "serde_test" ];
        };
      };
      "lock_api 0.1.5" = rec {
        crateName = "lock_api";
        version = "0.1.5";
        edition = "2015";
        sha256 = "0b24q9mh258xa52ap636q1sxz0j5vrnp0hwbbh7ddjka3wwz3sv2";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "owning_ref";
            packageId = "owning_ref";
            optional = true;
          }
          {
            name = "scopeguard";
            packageId = "scopeguard 0.3.3";
            usesDefaultFeatures = false;
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "owning_ref" ];
      };
      "lock_api 0.2.0" = rec {
        crateName = "lock_api";
        version = "0.2.0";
        edition = "2018";
        sha256 = "1zx7pksmgyggpczgw4qrr4vj2nkdk5lipgiysvr20slm552nv57d";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "scopeguard";
            packageId = "scopeguard 1.0.0";
            usesDefaultFeatures = false;
          }
        ];
        features = {
        };
      };
      "log" = rec {
        crateName = "log";
        version = "0.4.7";
        edition = "2015";
        sha256 = "1cx51p86d9s1y2vbyi6jr4wj5cs7nryikygfcpbc42h7ajnvcxf2";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "logos" = rec {
        crateName = "logos";
        version = "0.10.0-rc2";
        edition = "2018";
        sha256 = "07mlcz9m3xccfafrsbzqgdabmzbqq3x0d1ysv38qz90214p9cdp1";
        authors = [
          "maciejhirsz <maciej.hirsz@gmail.com>"
        ];
        dependencies = [
          {
            name = "logos-derive";
            packageId = "logos-derive";
            optional = true;
          }
        ];
        features = {
          "default" = [ "export_derive" "std" ];
          "export_derive" = [ "logos-derive" ];
        };
        resolvedDefaultFeatures = [ "default" "export_derive" "logos-derive" "std" ];
      };
      "logos-derive" = rec {
        crateName = "logos-derive";
        version = "0.10.0-rc2";
        edition = "2018";
        sha256 = "1gym3dkl4kdddnvdnxi2mkfi2f2g1bk4159s9xncralkv78yq0sz";
        procMacro = true;
        libName = "logos_derive";
        authors = [
          "maciejhirsz <maciej.hirsz@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "regex-syntax";
            packageId = "regex-syntax";
          }
          {
            name = "rustc-hash";
            packageId = "rustc-hash";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "extra-traits" "full" ];
          }
          {
            name = "utf8-ranges";
            packageId = "utf8-ranges";
          }
        ];
        
      };
      "lzw" = rec {
        crateName = "lzw";
        version = "0.10.0";
        edition = "2015";
        sha256 = "1170dfskhzlh8h2bm333811hykjvpypgnvxyhhm1rllyi2xpr53x";
        authors = [
          "nwin <nwin@users.noreply.github.com>"
        ];
        features = {
          "default" = [ "raii_no_panic" ];
        };
        resolvedDefaultFeatures = [ "default" "raii_no_panic" ];
      };
      "malloc_buf" = rec {
        crateName = "malloc_buf";
        version = "0.0.6";
        edition = "2015";
        sha256 = "1jqr77j89pwszv51fmnknzvd53i1nkmcr8rjrvcxhm4dx1zr1fv2";
        authors = [
          "Steven Sheldon"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        
      };
      "matches" = rec {
        crateName = "matches";
        version = "0.1.8";
        edition = "2015";
        sha256 = "020axl4q7rk9vz90phs7f8jas4imxal9y9kxl4z4v7a6719mrz3z";
        libPath = "lib.rs";
        authors = [
          "Simon Sapin <simon.sapin@exyr.org>"
        ];
        
      };
      "memchr" = rec {
        crateName = "memchr";
        version = "2.2.0";
        edition = "2015";
        sha256 = "0f8wdra7yaggsr4jzlrvpd8yknnqhd990iijdr6llgc8gk2ppz1f";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
          "bluss"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "libc" "use_std" ];
      };
      "memoffset" = rec {
        crateName = "memoffset";
        version = "0.2.1";
        edition = "2015";
        sha256 = "1cvm2z7dy138s302ii7wlzcxbka5a8yfl5pl5di7lbdnw9hw578g";
        authors = [
          "Gilad Naaman <gilad.naaman@gmail.com>"
        ];
        
      };
      "mime" = rec {
        crateName = "mime";
        version = "0.3.13";
        edition = "2015";
        sha256 = "09clbyvdkwflp8anwjhqdib0sw8191gphcchdp80nc8ayhhwl9ry";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "unicase";
            packageId = "unicase 2.4.0";
          }
        ];
        
      };
      "mime_guess" = rec {
        crateName = "mime_guess";
        version = "2.0.0-alpha.6";
        edition = "2015";
        sha256 = "1vf3k57mmgjr6f82m692q68215bn80s3y4yqcgna3jzg2d32xpih";
        authors = [
          "Austin Bonander <austin.bonander@gmail.com>"
        ];
        dependencies = [
          {
            name = "mime";
            packageId = "mime";
          }
          {
            name = "phf";
            packageId = "phf";
            features = [ "unicase" ];
          }
          {
            name = "unicase";
            packageId = "unicase 1.4.2";
          }
        ];
        buildDependencies = [
          {
            name = "phf_codegen";
            packageId = "phf_codegen";
          }
          {
            name = "unicase";
            packageId = "unicase 1.4.2";
          }
        ];
        features = {
        };
      };
      "miniz-sys" = rec {
        crateName = "miniz-sys";
        version = "0.1.12";
        edition = "2015";
        sha256 = "00l2r4anm8g35x0js2zfdnwfbrih9m43vphdpb77c5ga3kjkm7hy";
        libName = "miniz_sys";
        libPath = "lib.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];
        
      };
      "miniz_oxide" = rec {
        crateName = "miniz_oxide";
        version = "0.2.1";
        edition = "2015";
        sha256 = "07ppnzf6win6qp845zkf8vand2j8z1wr0b5vs2jm3mh7kwvg4s64";
        authors = [
          "Frommi <daniil.liferenko@gmail.com>"
        ];
        dependencies = [
          {
            name = "adler32";
            packageId = "adler32";
          }
        ];
        
      };
      "miniz_oxide_c_api" = rec {
        crateName = "miniz_oxide_c_api";
        version = "0.2.1";
        edition = "2015";
        sha256 = "1avv8ixjpbiqzqap1ri1n9wl9qnlhzf93cgg3pvpx07389x95zmp";
        build = "src/build.rs";
        authors = [
          "Frommi <daniil.liferenko@gmail.com>"
        ];
        dependencies = [
          {
            name = "crc";
            packageId = "crc";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "miniz_oxide";
            packageId = "miniz_oxide";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];
        features = {
          "benching" = [ "build_orig_miniz" "no_c_export" ];
          "fuzzing" = [ "build_orig_miniz" "no_c_export" ];
          "miniz_zip" = [ "build_stub_miniz" ];
        };
        resolvedDefaultFeatures = [ "default" "no_c_export" ];
      };
      "mio" = rec {
        crateName = "mio";
        version = "0.6.19";
        edition = "2015";
        sha256 = "08zzs227vrnyz5kvws6awzlgzb8zqpnihs71hkqlw07dlfb1kxc3";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "fuchsia-zircon";
            packageId = "fuchsia-zircon";
            target = { target, features }: (target."os" == "fuchsia");
          }
          {
            name = "fuchsia-zircon-sys";
            packageId = "fuchsia-zircon-sys";
            target = { target, features }: (target."os" == "fuchsia");
          }
          {
            name = "iovec";
            packageId = "iovec";
          }
          {
            name = "kernel32-sys";
            packageId = "kernel32-sys";
            target = { target, features }: target."windows";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "miow";
            packageId = "miow";
            target = { target, features }: target."windows";
          }
          {
            name = "net2";
            packageId = "net2";
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
            target = { target, features }: target."windows";
          }
        ];
        features = {
          "default" = [ "with-deprecated" ];
        };
        resolvedDefaultFeatures = [ "default" "with-deprecated" ];
      };
      "miow" = rec {
        crateName = "miow";
        version = "0.2.1";
        edition = "2015";
        sha256 = "06g9b8sqlh5gxakwqq4rrib07afwanfnxgxajrldwcgk3hxjy7wc";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "kernel32-sys";
            packageId = "kernel32-sys";
          }
          {
            name = "net2";
            packageId = "net2";
            usesDefaultFeatures = false;
          }
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
          }
          {
            name = "ws2_32-sys";
            packageId = "ws2_32-sys";
          }
        ];
        
      };
      "native-tls" = rec {
        crateName = "native-tls";
        version = "0.2.3";
        edition = "2015";
        sha256 = "0ki7cj4wzyd2nach4qdjly69sp7rs0yz3n3z2ii4mm1gqajg2bab";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
          {
            name = "log";
            packageId = "log";
            target = { target, features }: (!((target."os" == "windows") || (target."os" == "macos") || (target."os" == "ios")));
          }
          {
            name = "openssl";
            packageId = "openssl";
            target = { target, features }: (!((target."os" == "windows") || (target."os" == "macos") || (target."os" == "ios")));
          }
          {
            name = "openssl-probe";
            packageId = "openssl-probe";
            target = { target, features }: (!((target."os" == "windows") || (target."os" == "macos") || (target."os" == "ios")));
          }
          {
            name = "openssl-sys";
            packageId = "openssl-sys";
            target = { target, features }: (!((target."os" == "windows") || (target."os" == "macos") || (target."os" == "ios")));
          }
          {
            name = "schannel";
            packageId = "schannel";
            target = { target, features }: (target."os" == "windows");
          }
          {
            name = "security-framework";
            packageId = "security-framework";
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
          {
            name = "security-framework-sys";
            packageId = "security-framework-sys";
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
          {
            name = "tempfile";
            packageId = "tempfile";
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
        ];
        features = {
          "vendored" = [ "openssl/vendored" ];
        };
      };
      "neso" = rec {
        crateName = "neso";
        version = "0.5.0";
        edition = "2018";
        sha256 = "1j78iyrv3r46n7jdayvgwarpq9iaikc7yhqqvdii226bzgg32g3b";type = [ "cdylib" "lib" ];
        authors = [
          "Jeffrey Xiao <jeffrey.xiao1998@gmail.com>"
        ];
        dependencies = [
          {
            name = "bincode";
            packageId = "bincode";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "log";
            packageId = "log";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "serde";
            packageId = "serde 1.0.94";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
            target = { target, features }: (target."arch" == "wasm32");
          }
        ];
        
      };
      "net2" = rec {
        crateName = "net2";
        version = "0.2.33";
        edition = "2015";
        sha256 = "126g3fgfxp06zimc1l9iyxnn9cif1hjsg7sd81nlls5nnyghsma2";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: ((target."os" == "redox") || target."unix");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            target = { target, features }: target."windows";
            features = [ "handleapi" "winsock2" "ws2def" "ws2ipdef" "ws2tcpip" ];
          }
        ];
        features = {
          "default" = [ "duration" ];
        };
        resolvedDefaultFeatures = [ "default" "duration" ];
      };
      "nix" = rec {
        crateName = "nix";
        version = "0.14.1";
        edition = "2015";
        sha256 = "1kmxdlmvnmq8cfpmr3g6wk37rwi2ybdvp1z6z3831m1p23p2nwkc";
        authors = [
          "The nix-rust Project Developers"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "void";
            packageId = "void";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
            target = {target, features}: (target."os" == "dragonfly");
          }
        ];
        
      };
      "nodrop" = rec {
        crateName = "nodrop";
        version = "0.1.13";
        edition = "2015";
        sha256 = "0if9ifn6rvar5jirx4b3qh4sl5kjkmcifycvzhxa9j3crkfng5ig";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "std" ];
          "use_union" = [ "nodrop-union" ];
        };
      };
      "nom 4.2.3" = rec {
        crateName = "nom";
        version = "4.2.3";
        edition = "2015";
        sha256 = "1mkvby8b4m61p4g1px0pwr58yfkphyp1jcfbp4qfp7l6iqdaklia";
        authors = [
          "contact@geoffroycouprie.com"
        ];
        dependencies = [
          {
            name = "memchr";
            packageId = "memchr";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check";
          }
        ];
        features = {
          "default" = [ "std" ];
          "regexp" = [ "regex" ];
          "regexp_macros" = [ "regexp" "lazy_static" ];
          "std" = [ "alloc" "memchr/use_std" ];
          "verbose-errors" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "nom 5.0.0" = rec {
        crateName = "nom";
        version = "5.0.0";
        edition = "2018";
        sha256 = "06snml9wfrvk8k71l4md6gg29jgj4pa8wzsg180q3qr0jf2isxp9";
        authors = [
          "contact@geoffroycouprie.com"
        ];
        dependencies = [
          {
            name = "lexical-core";
            packageId = "lexical-core";
            optional = true;
          }
          {
            name = "memchr";
            packageId = "memchr";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check";
          }
        ];
        features = {
          "default" = [ "std" "lexical" ];
          "lexical" = [ "lexical-core" ];
          "regexp" = [ "regex" ];
          "regexp_macros" = [ "regexp" "lazy_static" ];
          "std" = [ "alloc" "memchr/use_std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "lexical" "lexical-core" "std" ];
      };
      "nom5_locate" = rec {
        crateName = "nom5_locate";
        version = "0.1.1";
        edition = "2018";
        sha256 = "0g92csk8c2wb8bvvzwddlfjjy882wl3l54sb6h4xja4bgx314hrx";
        authors = [
          "Florent FAYOLLE <florent.fayolle69@gmail.com>"
          "Christopher Durham <cad97@cad97.com>"
          "Valentin Lorentz <progval+git@progval.net>"
          "Yehuda Katz <wycats@gmail.com>"
        ];
        dependencies = [
          {
            name = "bytecount";
            packageId = "bytecount";
          }
          {
            name = "memchr";
            packageId = "memchr";
          }
          {
            name = "nom";
            packageId = "nom 5.0.0";
          }
        ];
        features = {
          "alloc" = [ "nom/alloc" ];
          "avx-accel" = [ "bytecount/avx-accel" ];
          "default" = [ "std" ];
          "simd-accel" = [ "bytecount/simd-accel" ];
          "std" = [ "nom/std" "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "nu" = rec {
        crateName = "nu";
        version = "0.1.2";
        edition = "2018";
        crateBin = [
          { name = "nu_plugin_inc"; path = "src/plugins/inc.rs"; }
          { name = "nu_plugin_skip"; path = "src/plugins/skip.rs"; }
          { name = "nu_plugin_tree"; path = "src/plugins/tree.rs"; }
          { name = "nu_plugin_binaryview"; path = "src/plugins/binaryview.rs"; }
          { name = "nu"; path = "src/main.rs"; }
        ];
        src = pkgs.callPackage ./tarball-v0.1.2.nix {};
        authors = [
          "Yehuda Katz <wycats@gmail.com>"
          "Jonathan Turner <jonathan.d.turner@gmail.com>"
        ];
        dependencies = [
          {
            name = "adhoc_derive";
            packageId = "adhoc_derive";
          }
          {
            name = "ansi_term";
            packageId = "ansi_term 0.12.0";
          }
          {
            name = "app_dirs";
            packageId = "app_dirs";
          }
          {
            name = "byte-unit";
            packageId = "byte-unit";
          }
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "chrono";
            packageId = "chrono";
            features = [ "serde" ];
          }
          {
            name = "chrono-humanize";
            packageId = "chrono-humanize";
          }
          {
            name = "chrono-tz";
            packageId = "chrono-tz";
          }
          {
            name = "clap";
            packageId = "clap";
          }
          {
            name = "clipboard";
            packageId = "clipboard";
          }
          {
            name = "crossterm";
            packageId = "crossterm";
          }
          {
            name = "ctrlc";
            packageId = "ctrlc";
          }
          {
            name = "derive-new";
            packageId = "derive-new";
          }
          {
            name = "derive_more";
            packageId = "derive_more";
          }
          {
            name = "dirs";
            packageId = "dirs 2.0.1";
          }
          {
            name = "dunce";
            packageId = "dunce";
          }
          {
            name = "enum-utils";
            packageId = "enum-utils";
          }
          {
            name = "enum_derive";
            packageId = "enum_derive";
          }
          {
            name = "futures-preview";
            packageId = "futures-preview";
            features = [ "compat" "io-compat" ];
          }
          {
            name = "futures-sink-preview";
            packageId = "futures-sink-preview";
          }
          {
            name = "futures_codec";
            packageId = "futures_codec";
          }
          {
            name = "getset";
            packageId = "getset";
          }
          {
            name = "git2";
            packageId = "git2";
          }
          {
            name = "image";
            packageId = "image";
          }
          {
            name = "indexmap";
            packageId = "indexmap";
            features = [ "serde-1" ];
          }
          {
            name = "itertools";
            packageId = "itertools 0.8.0";
          }
          {
            name = "language-reporting";
            packageId = "language-reporting";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "logos";
            packageId = "logos";
          }
          {
            name = "logos-derive";
            packageId = "logos-derive";
          }
          {
            name = "mime";
            packageId = "mime";
          }
          {
            name = "neso";
            packageId = "neso";
          }
          {
            name = "nom";
            packageId = "nom 5.0.0";
          }
          {
            name = "nom5_locate";
            packageId = "nom5_locate";
          }
          {
            name = "ordered-float";
            packageId = "ordered-float";
            features = [ "serde" ];
          }
          {
            name = "pretty-hex";
            packageId = "pretty-hex";
          }
          {
            name = "pretty_env_logger";
            packageId = "pretty_env_logger";
          }
          {
            name = "prettyprint";
            packageId = "prettyprint";
          }
          {
            name = "prettytable-rs";
            packageId = "prettytable-rs";
          }
          {
            name = "ptree";
            packageId = "ptree";
          }
          {
            name = "rawkey";
            packageId = "rawkey";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "reqwest";
            packageId = "reqwest";
          }
          {
            name = "roxmltree";
            packageId = "roxmltree";
          }
          {
            name = "rustyline";
            packageId = "rustyline";
          }
          {
            name = "serde";
            packageId = "serde 1.0.94";
          }
          {
            name = "serde-hjson";
            packageId = "serde-hjson 0.9.0";
          }
          {
            name = "serde_bytes";
            packageId = "serde_bytes";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "serde_ini";
            packageId = "serde_ini";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "serde_yaml";
            packageId = "serde_yaml";
          }
          {
            name = "subprocess";
            packageId = "subprocess";
          }
          {
            name = "sys-info";
            packageId = "sys-info";
          }
          {
            name = "sysinfo";
            packageId = "sysinfo";
          }
          {
            name = "tempfile";
            packageId = "tempfile";
          }
          {
            name = "term";
            packageId = "term";
          }
          {
            name = "toml";
            packageId = "toml 0.5.1";
          }
          {
            name = "toml-query";
            packageId = "toml-query";
          }
          {
            name = "unicode-xid";
            packageId = "unicode-xid";
          }
        ];
        devDependencies = [
          {
            name = "pretty_assertions";
            packageId = "pretty_assertions";
          }
        ];
        
      };
      "num-derive" = rec {
        crateName = "num-derive";
        version = "0.2.5";
        edition = "2015";
        sha256 = "1wnv7776fh4i40r3zfxcxcmm0dh029skx7gp4sjknz2kqm2hpzga";
        procMacro = true;
        libName = "num_derive";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];
        features = {
          "full-syntax" = [ "syn/full" ];
        };
      };
      "num-integer" = rec {
        crateName = "num-integer";
        version = "0.1.41";
        edition = "2015";
        sha256 = "02dwjjpfbi16c71fq689s4sw3ih52cvfzr5z5gs6qpr5z0g58pmq";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits 0.2.8";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
        ];
        features = {
          "default" = [ "std" ];
          "i128" = [ "num-traits/i128" ];
          "std" = [ "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "num-iter" = rec {
        crateName = "num-iter";
        version = "0.1.39";
        edition = "2015";
        sha256 = "0bhk2qbr3261r6zvfc58lz4spfqjhvdripxgz5mks5rd85r55gbn";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.8";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
        ];
        features = {
          "default" = [ "std" ];
          "i128" = [ "num-integer/i128" "num-traits/i128" ];
          "std" = [ "num-integer/std" "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "num-rational" = rec {
        crateName = "num-rational";
        version = "0.2.2";
        edition = "2015";
        sha256 = "0m5l76rdzzq98cfhnbjsxfngz6w75pal5mnfflpxqapysmw5527j";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.8";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
        ];
        features = {
          "bigint" = [ "num-bigint" ];
          "bigint-std" = [ "bigint" "num-bigint/std" ];
          "default" = [ "bigint-std" "std" ];
          "i128" = [ "num-integer/i128" "num-traits/i128" ];
          "std" = [ "num-integer/std" "num-traits/std" ];
        };
      };
      "num-traits 0.1.43" = rec {
        crateName = "num-traits";
        version = "0.1.43";
        edition = "2015";
        sha256 = "0c9whknf2dm74a3cqirafy6gj83a76gl56g4v3g19k6lkwz13rcj";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits 0.2.8";
          }
        ];
        
      };
      "num-traits 0.2.8" = rec {
        crateName = "num-traits";
        version = "0.2.8";
        edition = "2015";
        sha256 = "0clvrm34rrqc8p6gq5ps5fcgws3kgq5knh7nlqxf2ayarwks9abb";
        authors = [
          "The Rust Project Developers"
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "num_cpus" = rec {
        crateName = "num_cpus";
        version = "1.10.1";
        edition = "2015";
        sha256 = "0wrj3zvj6h3q26sqj9zxpd59frjb54n7jhjwf307clq31ic47vxw";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        
      };
      "numtoa" = rec {
        crateName = "numtoa";
        version = "0.1.0";
        edition = "2015";
        sha256 = "1vs9rhggqbql1p26x8nkha1j06wawwgb2jp5fs88b5gi7prvvy5q";
        authors = [
          "Michael Aaron Murphy <mmstickman@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "objc" = rec {
        crateName = "objc";
        version = "0.2.6";
        edition = "2015";
        sha256 = "03ar7qxhailxgb0zi5lszv7fhwl6b1xkas5y4m8wy1vyng90zlii";
        authors = [
          "Steven Sheldon"
        ];
        dependencies = [
          {
            name = "malloc_buf";
            packageId = "malloc_buf";
          }
        ];
        features = {
          "exception" = [ "objc_exception" ];
        };
      };
      "objc-foundation" = rec {
        crateName = "objc-foundation";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1y9bwb3m5fdq7w7i4bnds067dhm4qxv4m1mbg9y61j9nkrjipp8s";
        authors = [
          "Steven Sheldon"
        ];
        dependencies = [
          {
            name = "block";
            packageId = "block";
          }
          {
            name = "objc";
            packageId = "objc";
          }
          {
            name = "objc_id";
            packageId = "objc_id";
          }
        ];
        
      };
      "objc_id" = rec {
        crateName = "objc_id";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0fq71hnp2sdblaighjc82yrac3adfmqzhpr11irhvdfp9gdlsbf9";
        authors = [
          "Steven Sheldon"
        ];
        dependencies = [
          {
            name = "objc";
            packageId = "objc";
          }
        ];
        
      };
      "ole32-sys" = rec {
        crateName = "ole32-sys";
        version = "0.2.0";
        edition = "2015";
        sha256 = "134xg38xicrqynx4pfjfxnpp8x83m3gqw5j3s8y27rc22w14jb2x";
        libName = "ole32";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
          }
        ];
        buildDependencies = [
          {
            name = "winapi-build";
            packageId = "winapi-build";
          }
        ];
        
      };
      "onig" = rec {
        crateName = "onig";
        version = "4.3.2";
        edition = "2015";
        sha256 = "1rr6gx0qpx1h8mxjgdawhdckl74k293kg410pr4rz8fqvad9him6";
        authors = [
          "Will Speak <will@willspeak.me>"
          "Ivan Ivashchenko <defuz@me.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."windows";
          }
          {
            name = "onig_sys";
            packageId = "onig_sys";
          }
        ];
        features = {
          "posix-api" = [ "onig_sys/posix-api" ];
          "print-debug" = [ "onig_sys/print-debug" ];
        };
      };
      "onig_sys" = rec {
        crateName = "onig_sys";
        version = "69.1.0";
        edition = "2015";
        sha256 = "1c639k5x7kp5m4vrvmvx4hqar8dyyiskknz6b07g2hd3byzi111q";
        authors = [
          "Will Speak <will@willspeak.me>"
          "Ivan Ivashchenko <defuz@me.com>"
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
        ];
        features = {
        };
      };
      "openssl" = rec {
        crateName = "openssl";
        version = "0.10.23";
        edition = "2015";
        sha256 = "1998yv9rxvg8gy57y9b83ws9zwyyi0dlrl9x35l38frgp35l1hcp";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "foreign-types";
            packageId = "foreign-types";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "openssl-sys";
            packageId = "openssl-sys";
          }
        ];
        features = {
          "vendored" = [ "openssl-sys/vendored" ];
        };
      };
      "openssl-probe" = rec {
        crateName = "openssl-probe";
        version = "0.1.2";
        edition = "2015";
        sha256 = "1pijrdifgsdwd45b08c2g0dsmnhz7c3kmagb70839ngrd7d29bvp";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        
      };
      "openssl-sys" = rec {
        crateName = "openssl-sys";
        version = "0.9.47";
        edition = "2015";
        sha256 = "1k2shs8l6l5ffdsd7iax43fb87md8y439lm18y7d6n29pgdxdgbm";
        build = "build/main.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
          {
            name = "cc";
            packageId = "cc";
          }
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
          {
            name = "vcpkg";
            packageId = "vcpkg";
            target = {target, features}: (target."env" == "msvc");
          }
        ];
        features = {
          "vendored" = [ "openssl-src" ];
        };
      };
      "ordered-float" = rec {
        crateName = "ordered-float";
        version = "1.0.2";
        edition = "2015";
        sha256 = "0625x96987kspdxbikry5mb7hsf5pdc5bbanxd8wjwqlx0ar71hq";
        authors = [
          "Jonathan Reem <jonathan.reem@gmail.com>"
          "Matt Brubeck <mbrubeck@limpet.net>"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits 0.2.8";
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde 1.0.94";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "default" "serde" "std" ];
      };
      "ordermap" = rec {
        crateName = "ordermap";
        version = "0.3.5";
        edition = "2015";
        sha256 = "0qr0a50l0qakbjcck93qdayd0xl8gzpp42x0n7b75cs4ybsx6vm8";
        authors = [
          "bluss"
        ];
        features = {
          "serde-1" = [ "serde" ];
        };
      };
      "output_vt100" = rec {
        crateName = "output_vt100";
        version = "0.1.2";
        edition = "2018";
        sha256 = "1ygqplpxz4gg3i8f3rkan2q69pqll7gv65l2mmd8r9dphnvwbkak";
        authors = [
          "Phuntsok Drak-pa <phundrak@phundrak.fr>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            features = [ "winuser" "winbase" "consoleapi" "processenv" ];
          }
        ];
        
      };
      "owning_ref" = rec {
        crateName = "owning_ref";
        version = "0.4.0";
        edition = "2015";
        sha256 = "04zgwy77lin8qz398s6g44467pd6kjhbrlqifkia5rkr47mbi929";
        authors = [
          "Marvin L√∂bel <loebel.marvin@gmail.com>"
        ];
        dependencies = [
          {
            name = "stable_deref_trait";
            packageId = "stable_deref_trait";
          }
        ];
        
      };
      "parking_lot 0.7.1" = rec {
        crateName = "parking_lot";
        version = "0.7.1";
        edition = "2015";
        sha256 = "0dz32cqx9200n1lk3kwyb599vabfid3f8sj1aq85sw42s2pb8hdb";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "lock_api";
            packageId = "lock_api 0.1.5";
          }
          {
            name = "parking_lot_core";
            packageId = "parking_lot_core 0.4.0";
          }
        ];
        features = {
          "deadlock_detection" = [ "parking_lot_core/deadlock_detection" ];
          "default" = [ "owning_ref" ];
          "nightly" = [ "parking_lot_core/nightly" "lock_api/nightly" ];
          "owning_ref" = [ "lock_api/owning_ref" ];
        };
        resolvedDefaultFeatures = [ "default" "owning_ref" ];
      };
      "parking_lot 0.8.0" = rec {
        crateName = "parking_lot";
        version = "0.8.0";
        edition = "2018";
        sha256 = "1rrcdalr8l5zx3bw28l376321l6dnd6rqnsqsl0ygk01fy0nfxzs";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "lock_api";
            packageId = "lock_api 0.2.0";
          }
          {
            name = "parking_lot_core";
            packageId = "parking_lot_core 0.5.0";
          }
        ];
        buildDependencies = [
          {
            name = "rustc_version";
            packageId = "rustc_version";
          }
        ];
        features = {
          "deadlock_detection" = [ "parking_lot_core/deadlock_detection" ];
          "nightly" = [ "parking_lot_core/nightly" "lock_api/nightly" ];
          "owning_ref" = [ "lock_api/owning_ref" ];
          "serde" = [ "lock_api/serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "parking_lot_core 0.4.0" = rec {
        crateName = "parking_lot_core";
        version = "0.4.0";
        edition = "2015";
        sha256 = "1jcq8aq4wv9y5fip7jg12jdwjd5g5r3x857xdma8vcin769cgj4l";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "rand";
            packageId = "rand 0.6.5";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            target = { target, features }: target."windows";
            features = [ "winnt" "ntstatus" "minwindef" "winerror" "winbase" "errhandlingapi" "handleapi" ];
          }
        ];
        buildDependencies = [
          {
            name = "rustc_version";
            packageId = "rustc_version";
          }
        ];
        features = {
          "deadlock_detection" = [ "petgraph" "thread-id" "backtrace" ];
        };
      };
      "parking_lot_core 0.5.0" = rec {
        crateName = "parking_lot_core";
        version = "0.5.0";
        edition = "2018";
        sha256 = "1317j5a1yd03baza2kqqrxb4kr1vxa7rckw4frksl2vrncfcp26b";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "cloudabi";
            packageId = "cloudabi";
            target = { target, features }: (target."os" == "cloudabi");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "rand";
            packageId = "rand 0.6.5";
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            target = { target, features }: target."windows";
            features = [ "winnt" "ntstatus" "minwindef" "winerror" "winbase" "errhandlingapi" "handleapi" ];
          }
        ];
        buildDependencies = [
          {
            name = "rustc_version";
            packageId = "rustc_version";
          }
        ];
        features = {
          "deadlock_detection" = [ "petgraph" "thread-id" "backtrace" ];
        };
      };
      "parse-zoneinfo" = rec {
        crateName = "parse-zoneinfo";
        version = "0.2.0";
        edition = "2015";
        sha256 = "1rbrnzfqx0kcaddnvznvr721pnk79cg5m7ch7267pmydrn63k6h8";
        authors = [
          "Djzin <djzin@users.noreply.github.com>"
        ];
        dependencies = [
          {
            name = "regex";
            packageId = "regex";
          }
        ];
        
      };
      "percent-encoding" = rec {
        crateName = "percent-encoding";
        version = "1.0.1";
        edition = "2015";
        sha256 = "0cgq08v1fvr6bs5fvy390cz830lq4fak8havdasdacxcw790s09i";
        libPath = "lib.rs";
        authors = [
          "The rust-url developers"
        ];
        
      };
      "petgraph" = rec {
        crateName = "petgraph";
        version = "0.4.13";
        edition = "2015";
        sha256 = "0kyfmca854s54jk26g2x1kjb04c3k7cjilaxyr0if8lhxv8mjdlw";
        authors = [
          "bluss"
          "mitchmindtree"
        ];
        dependencies = [
          {
            name = "fixedbitset";
            packageId = "fixedbitset";
          }
          {
            name = "ordermap";
            packageId = "ordermap";
            optional = true;
          }
        ];
        features = {
          "all" = [ "unstable" "quickcheck" "stable_graph" "graphmap" ];
          "default" = [ "graphmap" "stable_graph" ];
          "graphmap" = [ "ordermap" ];
          "serde-1" = [ "serde" "serde_derive" ];
          "unstable" = [ "generate" ];
        };
        resolvedDefaultFeatures = [ "default" "graphmap" "ordermap" "stable_graph" ];
      };
      "phf" = rec {
        crateName = "phf";
        version = "0.7.24";
        edition = "2015";
        sha256 = "066xwv4dr6056a9adlkarwp4n94kbpwngbmd47ngm3cfbyw49nmk";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = [
          {
            name = "phf_shared";
            packageId = "phf_shared";
          }
        ];
        features = {
          "core" = [ "phf_shared/core" ];
          "macros" = [ "phf_macros" ];
          "unicase" = [ "phf_shared/unicase" ];
        };
        resolvedDefaultFeatures = [ "unicase" ];
      };
      "phf_codegen" = rec {
        crateName = "phf_codegen";
        version = "0.7.24";
        edition = "2015";
        sha256 = "0zjiblicfm0nrmr2xxrs6pnf6zz2394wgch6dcbd8jijkq98agmh";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = [
          {
            name = "phf_generator";
            packageId = "phf_generator";
          }
          {
            name = "phf_shared";
            packageId = "phf_shared";
          }
        ];
        
      };
      "phf_generator" = rec {
        crateName = "phf_generator";
        version = "0.7.24";
        edition = "2015";
        sha256 = "0qi62gxk3x3whrmw5c4i71406icqk11qmpgln438p6qm7k4lqdh9";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = [
          {
            name = "phf_shared";
            packageId = "phf_shared";
          }
          {
            name = "rand";
            packageId = "rand 0.6.5";
          }
        ];
        
      };
      "phf_shared" = rec {
        crateName = "phf_shared";
        version = "0.7.24";
        edition = "2015";
        sha256 = "18371fla0vsj7d6d5rlfb747xbr2in11ar9vgv5qna72bnhp2kr3";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = [
          {
            name = "siphasher";
            packageId = "siphasher";
          }
          {
            name = "unicase";
            packageId = "unicase 1.4.2";
            optional = true;
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "unicase" ];
      };
      "pin-utils" = rec {
        crateName = "pin-utils";
        version = "0.1.0-alpha.4";
        edition = "2018";
        sha256 = "11xmyx00n4m37d546by2rxb8ryxs12v55cc172i3yak1rqccd52q";
        authors = [
          "Josef Brandl <mail@josefbrandl.de>"
        ];
        
      };
      "pkg-config" = rec {
        crateName = "pkg-config";
        version = "0.3.14";
        edition = "2015";
        sha256 = "135ia995lqzr0gxpk85h0bjxf82kj6hbxdx924sh9jdln6r8wvk7";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        
      };
      "plist" = rec {
        crateName = "plist";
        version = "0.4.2";
        edition = "2015";
        sha256 = "0zqnxc5i4y6mj119vr0lzpb5j67vffpx2phhgh711533bw3ryajz";
        authors = [
          "Ed Barnard <eabarnard@gmail.com>"
        ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64";
          }
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "humantime";
            packageId = "humantime";
          }
          {
            name = "line-wrap";
            packageId = "line-wrap";
          }
          {
            name = "serde";
            packageId = "serde 1.0.94";
            optional = true;
          }
          {
            name = "xml-rs";
            packageId = "xml-rs";
          }
        ];
        features = {
          "default" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" "serde" ];
      };
      "png" = rec {
        crateName = "png";
        version = "0.14.1";
        edition = "2015";
        sha256 = "0nf3a8r9p9zrj4x30b48f7yv18dz9xkmrq9b3lnzmpnhzn0z9nk3";
        authors = [
          "nwin <nwin@users.noreply.github.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "deflate";
            packageId = "deflate";
            optional = true;
          }
          {
            name = "inflate";
            packageId = "inflate";
          }
          {
            name = "num-iter";
            packageId = "num-iter";
          }
        ];
        features = {
          "default" = [ "png-encoding" ];
          "png-encoding" = [ "deflate" ];
        };
        resolvedDefaultFeatures = [ "default" "deflate" "png-encoding" ];
      };
      "ppv-lite86" = rec {
        crateName = "ppv-lite86";
        version = "0.2.5";
        edition = "2018";
        sha256 = "06snnv338w341nicfqba2jgln5dsla72ndkgrw7h1dfdb3vgkjz3";
        authors = [
          "The CryptoCorrosion Contributors"
        ];
        features = {
          "default" = [ "std" "simd" ];
        };
        resolvedDefaultFeatures = [ "default" "simd" "std" ];
      };
      "pretty-hex" = rec {
        crateName = "pretty-hex";
        version = "0.1.0";
        edition = "2015";
        sha256 = "1xxq2vdf45kykzczbpilq6v2iny1qdfinylgi0yvncdplfi2k68i";
        authors = [
          "Andrei Volnin <wolandr@gmail.com>"
        ];
        
      };
      "pretty_assertions" = rec {
        crateName = "pretty_assertions";
        version = "0.6.1";
        edition = "2018";
        sha256 = "09yl14gnmpygiqrdlsa64lcl4w6ydjl9m8jri6kgam0v9rjf309z";
        authors = [
          "Colin Kiegel <kiegel@gmx.de>"
          "Florent Fayolle <florent.fayolle69@gmail.com>"
        ];
        dependencies = [
          {
            name = "ansi_term";
            packageId = "ansi_term 0.11.0";
          }
          {
            name = "ctor";
            packageId = "ctor";
            target = { target, features }: target."windows";
          }
          {
            name = "difference";
            packageId = "difference";
          }
          {
            name = "output_vt100";
            packageId = "output_vt100";
            target = { target, features }: target."windows";
          }
        ];
        
      };
      "pretty_env_logger" = rec {
        crateName = "pretty_env_logger";
        version = "0.3.0";
        edition = "2015";
        sha256 = "0qgxmypqxs831lv7n40yfr4ri5062dd8xpp5qbczgpkm0i73z2yz";
        authors = [
          "Sean McArthur <sean@seanmonstar>"
        ];
        dependencies = [
          {
            name = "chrono";
            packageId = "chrono";
          }
          {
            name = "env_logger";
            packageId = "env_logger";
          }
          {
            name = "log";
            packageId = "log";
          }
        ];
        
      };
      "prettyprint" = rec {
        crateName = "prettyprint";
        version = "0.7.0";
        edition = "2018";
        sha256 = "1vfd7vi1mmhnvrym81jpagx7kc2lycp9nyiw2y1m47b5iwr04bzk";
        authors = [
          "Matthias Endler <matthias-endler@gmx.net>"
        ];
        dependencies = [
          {
            name = "ansi_colours";
            packageId = "ansi_colours";
          }
          {
            name = "ansi_term";
            packageId = "ansi_term 0.11.0";
          }
          {
            name = "atty";
            packageId = "atty";
          }
          {
            name = "clap";
            packageId = "clap";
          }
          {
            name = "console";
            packageId = "console";
          }
          {
            name = "content_inspector";
            packageId = "content_inspector";
          }
          {
            name = "derive_builder";
            packageId = "derive_builder";
          }
          {
            name = "directories";
            packageId = "directories";
          }
          {
            name = "encoding";
            packageId = "encoding";
          }
          {
            name = "error-chain";
            packageId = "error-chain";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
          }
          {
            name = "shell-words";
            packageId = "shell-words";
          }
          {
            name = "syntect";
            packageId = "syntect";
          }
        ];
        
      };
      "prettytable-rs" = rec {
        crateName = "prettytable-rs";
        version = "0.8.0";
        edition = "2015";
        crateBin = [];
        sha256 = "0bmcsxkcy94hi0jz5db0fz137w5aaf17z2j1ryn2vyh400blpl0g";
        libName = "prettytable";
        authors = [
          "Pierre-Henri Symoneaux"
        ];
        dependencies = [
          {
            name = "atty";
            packageId = "atty";
          }
          {
            name = "csv";
            packageId = "csv";
            optional = true;
          }
          {
            name = "encode_unicode";
            packageId = "encode_unicode";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
          }
          {
            name = "term";
            packageId = "term";
          }
          {
            name = "unicode-width";
            packageId = "unicode-width";
          }
        ];
        features = {
          "default" = [ "win_crlf" "csv" ];
        };
        resolvedDefaultFeatures = [ "csv" "default" "win_crlf" ];
      };
      "proc-macro2" = rec {
        crateName = "proc-macro2";
        version = "0.4.30";
        edition = "2015";
        sha256 = "0nd71fl24sys066jrha6j7i34nfkjv44yzw8yww9742wmc8j0gfg";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "unicode-xid";
            packageId = "unicode-xid";
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "ptree" = rec {
        crateName = "ptree";
        version = "0.2.1";
        edition = "2015";
        sha256 = "1m1qm478d9r713wkcssz6jbzckdblwiwbh9q6b9ppvhr1gh3n2kb";
        authors = [
          "Miha ƒåanƒçula <miha@noughmad.eu>"
        ];
        dependencies = [
          {
            name = "ansi_term";
            packageId = "ansi_term 0.11.0";
            optional = true;
          }
          {
            name = "config";
            packageId = "config";
          }
          {
            name = "directories";
            packageId = "directories";
          }
          {
            name = "isatty";
            packageId = "isatty";
            optional = true;
          }
          {
            name = "petgraph";
            packageId = "petgraph";
            optional = true;
          }
          {
            name = "serde";
            packageId = "serde 1.0.94";
          }
          {
            name = "serde-value";
            packageId = "serde-value";
            optional = true;
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "tint";
            packageId = "tint";
            optional = true;
          }
        ];
        features = {
          "ansi" = [ "ansi_term" "isatty" "tint" ];
          "default" = [ "petgraph" "ansi" "value" ];
          "value" = [ "serde-value" ];
        };
        resolvedDefaultFeatures = [ "ansi" "ansi_term" "default" "isatty" "petgraph" "serde-value" "tint" "value" ];
      };
      "publicsuffix" = rec {
        crateName = "publicsuffix";
        version = "1.5.2";
        edition = "2015";
        sha256 = "07ddqpri1xy7nxg5b7z8w49gw90rkn4qjvr423b4y7ngdnlcpzjs";
        authors = [
          "rushmorem <rushmore@webenchanter.com>"
        ];
        dependencies = [
          {
            name = "error-chain";
            packageId = "error-chain";
          }
          {
            name = "idna";
            packageId = "idna";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "url";
            packageId = "url";
          }
        ];
        features = {
          "default" = [ "remote_list" ];
          "remote_list" = [ "native-tls" ];
        };
      };
      "quick-error" = rec {
        crateName = "quick-error";
        version = "1.2.2";
        edition = "2015";
        sha256 = "1w6kgwwv7p7zr0yyg5rb315lkk24bimywklwx7fsvsbwi10bjx4j";
        authors = [
          "Paul Colomiets <paul@colomiets.name>"
          "Colin Kiegel <kiegel@gmx.de>"
        ];
        
      };
      "quote" = rec {
        crateName = "quote";
        version = "0.6.12";
        edition = "2015";
        sha256 = "1nw0klza45hf127kfyrpxsxd5jw2l6h21qxalil3hkr7bnf7kx7s";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
          "proc-macro" = [ "proc-macro2/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "rand 0.6.5" = rec {
        crateName = "rand";
        version = "0.6.5";
        edition = "2015";
        sha256 = "1jl4449jcl4wgmzld6ffwqj5gwxrp8zvx8w573g1z368qg6xlwbd";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: target."unix";
          }
          {
            name = "rand_chacha";
            packageId = "rand_chacha 0.1.1";
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.4.0";
          }
          {
            name = "rand_hc";
            packageId = "rand_hc 0.1.0";
          }
          {
            name = "rand_isaac";
            packageId = "rand_isaac";
          }
          {
            name = "rand_jitter";
            packageId = "rand_jitter";
          }
          {
            name = "rand_os";
            packageId = "rand_os";
            optional = true;
          }
          {
            name = "rand_pcg";
            packageId = "rand_pcg";
          }
          {
            name = "rand_xorshift";
            packageId = "rand_xorshift";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            target = { target, features }: target."windows";
            features = [ "minwindef" "ntsecapi" "profileapi" "winnt" ];
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
        ];
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "nightly" = [ "simd_support" ];
          "serde1" = [ "rand_core/serde1" "rand_isaac/serde1" "rand_xorshift/serde1" ];
          "simd_support" = [ "packed_simd" ];
          "std" = [ "rand_core/std" "alloc" "rand_os" "rand_jitter/std" ];
          "stdweb" = [ "rand_os/stdweb" ];
          "wasm-bindgen" = [ "rand_os/wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "rand_os" "std" ];
      };
      "rand 0.7.0" = rec {
        crateName = "rand";
        version = "0.7.0";
        edition = "2018";
        sha256 = "0b05gwx8nnxr9bydyjxd1rszdvqnm946ky15z103ssfrhc7anznl";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "getrandom";
            packageId = "getrandom";
            rename = "getrandom_package";
            optional = true;
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: target."unix";
          }
          {
            name = "rand_chacha";
            packageId = "rand_chacha 0.2.0";
            target = { target, features }: (!(target."os" == "emscripten"));
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.5.0";
          }
          {
            name = "rand_hc";
            packageId = "rand_hc 0.2.0";
            target = { target, features }: (target."os" == "emscripten");
          }
        ];
        devDependencies = [
          {
            name = "rand_hc";
            packageId = "rand_hc 0.2.0";
          }
        ];
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "getrandom" = [ "getrandom_package" "rand_core/getrandom" ];
          "nightly" = [ "simd_support" ];
          "simd_support" = [ "packed_simd" ];
          "small_rng" = [ "rand_pcg" ];
          "std" = [ "rand_core/std" "alloc" "getrandom" ];
          "stdweb" = [ "getrandom_package/stdweb" ];
          "wasm-bindgen" = [ "getrandom_package/wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "getrandom" "getrandom_package" "std" ];
      };
      "rand_chacha 0.1.1" = rec {
        crateName = "rand_chacha";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1vxwyzs4fy1ffjc8l00fsyygpiss135irjf7nyxgq2v0lqf3lvam";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
        ];
        
      };
      "rand_chacha 0.2.0" = rec {
        crateName = "rand_chacha";
        version = "0.2.0";
        edition = "2015";
        sha256 = "178d36jfkc4v95s25scc2vibj2hd2hlk64cs6id4hvzg89whd4z1";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
          "The CryptoCorrosion Contributors"
        ];
        dependencies = [
          {
            name = "c2-chacha";
            packageId = "c2-chacha";
            usesDefaultFeatures = false;
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.5.0";
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
        ];
        features = {
          "default" = [ "std" "simd" ];
          "simd" = [ "c2-chacha/simd" ];
          "std" = [ "c2-chacha/std" ];
        };
        resolvedDefaultFeatures = [ "default" "simd" "std" ];
      };
      "rand_core 0.3.1" = rec {
        crateName = "rand_core";
        version = "0.3.1";
        edition = "2015";
        sha256 = "0jzdgszfa4bliigiy4hi66k7fs3gfwi2qxn8vik84ph77fwdwvvs";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.4.0";
          }
        ];
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "serde1" = [ "rand_core/serde1" ];
          "std" = [ "rand_core/std" ];
        };
      };
      "rand_core 0.4.0" = rec {
        crateName = "rand_core";
        version = "0.4.0";
        edition = "2015";
        sha256 = "1h3dbrhi5qgflqnzzd86s48v1dn1l17bmdssi5q170whsm4sbryh";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        features = {
          "serde1" = [ "serde" "serde_derive" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
      "rand_core 0.5.0" = rec {
        crateName = "rand_core";
        version = "0.5.0";
        edition = "2015";
        sha256 = "1jis94x9ri8xlxki2w2w5k29sjpfwgzkjylg7paganp74hrnhpk1";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "getrandom";
            packageId = "getrandom";
            optional = true;
          }
        ];
        features = {
          "serde1" = [ "serde" "serde_derive" ];
          "std" = [ "alloc" "getrandom" "getrandom/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "getrandom" "std" ];
      };
      "rand_hc 0.1.0" = rec {
        crateName = "rand_hc";
        version = "0.1.0";
        edition = "2015";
        sha256 = "1i0vl8q5ddvvy0x8hf1zxny393miyzxkwqnw31ifg6p0gdy6fh3v";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1";
            usesDefaultFeatures = false;
          }
        ];
        
      };
      "rand_hc 0.2.0" = rec {
        crateName = "rand_hc";
        version = "0.2.0";
        edition = "2018";
        sha256 = "0g31sqwpmsirdlwr0svnacr4dbqyz339im4ssl9738cjgfpjjcfa";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.5.0";
          }
        ];
        
      };
      "rand_isaac" = rec {
        crateName = "rand_isaac";
        version = "0.1.1";
        edition = "2015";
        sha256 = "027flpjr4znx2csxk7gxb7vrf9c7y5mydmvg5az2afgisp4rgnfy";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "serde1" = [ "serde" "serde_derive" "rand_core/serde1" ];
        };
      };
      "rand_jitter" = rec {
        crateName = "rand_jitter";
        version = "0.1.4";
        edition = "2015";
        sha256 = "16z387y46bfz3csc42zxbjq89vcr1axqacncvv8qhyy93p4xarhi";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.4.0";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            target = { target, features }: (target."os" == "windows");
            features = [ "profileapi" ];
          }
        ];
        features = {
          "std" = [ "rand_core/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "rand_os" = rec {
        crateName = "rand_os";
        version = "0.1.3";
        edition = "2015";
        sha256 = "0wahppm0s64gkr2vmhcgwc0lij37in1lgfxg5rbgqlz0l5vgcxbv";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "cloudabi";
            packageId = "cloudabi";
            target = { target, features }: (target."os" == "cloudabi");
          }
          {
            name = "fuchsia-cprng";
            packageId = "fuchsia-cprng";
            target = { target, features }: (target."os" == "fuchsia");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.4.0";
            features = [ "std" ];
          }
          {
            name = "rdrand";
            packageId = "rdrand";
            target = { target, features }: (target."env" == "sgx");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            target = { target, features }: target."windows";
            features = [ "minwindef" "ntsecapi" "winnt" ];
          }
        ];
        
      };
      "rand_pcg" = rec {
        crateName = "rand_pcg";
        version = "0.1.2";
        edition = "2015";
        sha256 = "0i0bdla18a8x4jn1w0fxsbs3jg7ajllz6azmch1zw33r06dv1ydb";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.4.0";
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
        ];
        features = {
          "serde1" = [ "serde" "serde_derive" ];
        };
      };
      "rand_xorshift" = rec {
        crateName = "rand_xorshift";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0p2x8nr00hricpi2m6ca5vysiha7ybnghz79yqhhx6sl4gkfkxyb";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "serde1" = [ "serde" "serde_derive" ];
        };
      };
      "rawkey" = rec {
        crateName = "rawkey";
        version = "0.1.1";
        edition = "2018";
        sha256 = "06v8mwg0f197jnr6wmgpylwc622zlx7zl8kkl2dkzxcmmn4rdm0c";
        authors = [
          "Jonathan Turner <jonathan.d.turner@gmail.com>"
        ];
        dependencies = [
          {
            name = "readkey";
            packageId = "readkey";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "user32-sys";
            packageId = "user32-sys";
            target = { target, features }: (target."os" == "windows");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            target = { target, features }: (target."os" == "windows");
            features = [ "winuser" ];
          }
          {
            name = "x11";
            packageId = "x11";
            target = { target, features }: (target."os" == "linux");
            features = [ "xlib" ];
          }
        ];
        
      };
      "rayon" = rec {
        crateName = "rayon";
        version = "1.1.0";
        edition = "2015";
        sha256 = "190hkbcdfvcphyyzkdg52zdia2y9d9yanpm072bmnzbn49p1ic54";
        authors = [
          "Niko Matsakis <niko@alum.mit.edu>"
          "Josh Stone <cuviper@gmail.com>"
        ];
        dependencies = [
          {
            name = "crossbeam-deque";
            packageId = "crossbeam-deque 0.6.3";
          }
          {
            name = "either";
            packageId = "either";
            usesDefaultFeatures = false;
          }
          {
            name = "rayon-core";
            packageId = "rayon-core";
          }
        ];
        
      };
      "rayon-core" = rec {
        crateName = "rayon-core";
        version = "1.5.0";
        edition = "2015";
        sha256 = "1ljva6blaf1wmzvg77h1i9pd0hsmsbbcmdk7sjbw7h2s8gw0vgpb";
        authors = [
          "Niko Matsakis <niko@alum.mit.edu>"
          "Josh Stone <cuviper@gmail.com>"
        ];
        dependencies = [
          {
            name = "crossbeam-deque";
            packageId = "crossbeam-deque 0.6.3";
          }
          {
            name = "crossbeam-queue";
            packageId = "crossbeam-queue";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.6.5";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
        ];
        
      };
      "rdrand" = rec {
        crateName = "rdrand";
        version = "0.4.0";
        edition = "2015";
        sha256 = "1cjq0kwx1bk7jx3kzyciiish5gqsj7620dm43dc52sr8fzmm9037";
        authors = [
          "Simonas Kazlauskas <rdrand@kazlauskas.me>"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "readkey" = rec {
        crateName = "readkey";
        version = "0.1.5";
        edition = "2015";
        sha256 = "03wg9qhkhgfr2h981xdgagbminb6jg6lfr8qv342dsgkni5vk3fr";
        authors = [
          "Klas Segeljakt <klasseg@kth.se>"
        ];
        
      };
      "redox_syscall" = rec {
        crateName = "redox_syscall";
        version = "0.1.54";
        edition = "2015";
        sha256 = "0lp22pjvmj33a2fa7y1h9cgxmnfd8whbb8s6n0f4yp7nl0a9q8hj";
        libName = "syscall";
        authors = [
          "Jeremy Soller <jackpot51@gmail.com>"
        ];
        
      };
      "redox_termios" = rec {
        crateName = "redox_termios";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0xhgvdh62mymgdl3jqrngl8hr4i8xwpnbsxnldq0l47993z1r2by";
        authors = [
          "Jeremy Soller <jackpot51@gmail.com>"
        ];
        dependencies = [
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
          }
        ];
        
      };
      "redox_users" = rec {
        crateName = "redox_users";
        version = "0.3.0";
        edition = "2015";
        sha256 = "0a1q5jv76vj1mwmqf2mmhknmkpw5wndx91gjfgg7vs8p79621r9z";
        authors = [
          "Jose Narvaez <goyox86@gmail.com>"
          "Wesley Hershberger <mggmugginsmc@gmail.com>"
        ];
        dependencies = [
          {
            name = "argon2rs";
            packageId = "argon2rs";
            usesDefaultFeatures = false;
          }
          {
            name = "failure";
            packageId = "failure";
          }
          {
            name = "rand_os";
            packageId = "rand_os";
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
          }
        ];
        
      };
      "regex" = rec {
        crateName = "regex";
        version = "1.1.9";
        edition = "2015";
        sha256 = "1ba47ivq8l1yikiwikjnq5barag6iqfgcpxlz2263fqbq9y2kn6r";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "aho-corasick";
            packageId = "aho-corasick";
          }
          {
            name = "memchr";
            packageId = "memchr";
          }
          {
            name = "regex-syntax";
            packageId = "regex-syntax";
          }
          {
            name = "thread_local";
            packageId = "thread_local";
          }
          {
            name = "utf8-ranges";
            packageId = "utf8-ranges";
          }
        ];
        features = {
          "default" = [ "use_std" ];
          "unstable" = [ "pattern" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
      "regex-syntax" = rec {
        crateName = "regex-syntax";
        version = "0.6.7";
        edition = "2015";
        sha256 = "0j0x5vdz3xvs1j138349pdq5hxf5xkh6528j0rzs3qzrhq342xlx";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "ucd-util";
            packageId = "ucd-util";
          }
        ];
        
      };
      "remove_dir_all" = rec {
        crateName = "remove_dir_all";
        version = "0.5.2";
        edition = "2015";
        sha256 = "0bkrlyg26mgizpiy1yb2hhpgscxcag8r5fnckqsvk25608vzm0sa";
        authors = [
          "Aaronepower <theaaronepower@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            target = { target, features }: target."windows";
            features = [ "std" "errhandlingapi" "winerror" "fileapi" "winbase" ];
          }
        ];
        
      };
      "render-tree" = rec {
        crateName = "render-tree";
        version = "0.1.1";
        edition = "2018";
        sha256 = "0r0nwdkyqj5rpz62d4q45hi9y8fv4izggs3gpkhprywwy1ymivb8";
        authors = [
          "Yehuda Katz <wycats@gmail.com>"
        ];
        dependencies = [
          {
            name = "itertools";
            packageId = "itertools 0.7.11";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "termcolor";
            packageId = "termcolor";
          }
        ];
        
      };
      "reqwest" = rec {
        crateName = "reqwest";
        version = "0.9.18";
        edition = "2015";
        sha256 = "1r7jxwpwmjrb8anl5rhb8w5h3sma2fm403vz8a5ka3nz2br67sq0";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64";
          }
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "cookie";
            packageId = "cookie";
          }
          {
            name = "cookie_store";
            packageId = "cookie_store";
          }
          {
            name = "encoding_rs";
            packageId = "encoding_rs";
          }
          {
            name = "flate2";
            packageId = "flate2";
            usesDefaultFeatures = false;
            features = [ "rust_backend" ];
          }
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "http";
            packageId = "http";
          }
          {
            name = "hyper";
            packageId = "hyper";
          }
          {
            name = "hyper-tls";
            packageId = "hyper-tls";
            optional = true;
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "mime";
            packageId = "mime";
          }
          {
            name = "mime_guess";
            packageId = "mime_guess";
          }
          {
            name = "native-tls";
            packageId = "native-tls";
            optional = true;
          }
          {
            name = "serde";
            packageId = "serde 1.0.94";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "serde_urlencoded";
            packageId = "serde_urlencoded";
          }
          {
            name = "time";
            packageId = "time";
          }
          {
            name = "tokio";
            packageId = "tokio";
            usesDefaultFeatures = false;
            features = [ "rt-full" "tcp" ];
          }
          {
            name = "tokio-executor";
            packageId = "tokio-executor";
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
          }
          {
            name = "tokio-threadpool";
            packageId = "tokio-threadpool";
          }
          {
            name = "tokio-timer";
            packageId = "tokio-timer";
          }
          {
            name = "url";
            packageId = "url";
          }
          {
            name = "uuid";
            packageId = "uuid";
            features = [ "v4" ];
          }
        ];
        devDependencies = [
          {
            name = "serde";
            packageId = "serde 1.0.94";
            features = [ "derive" ];
          }
        ];
        features = {
          "default" = [ "default-tls" ];
          "default-tls" = [ "hyper-tls" "native-tls" "tls" ];
          "default-tls-vendored" = [ "default-tls" "native-tls/vendored" ];
          "hyper-011" = [ "hyper-old-types" ];
          "rustls-tls" = [ "hyper-rustls" "tokio-rustls" "webpki-roots" "rustls" "tls" ];
          "trust-dns" = [ "trust-dns-resolver" ];
        };
        resolvedDefaultFeatures = [ "default" "default-tls" "hyper-tls" "native-tls" "tls" ];
      };
      "result" = rec {
        crateName = "result";
        version = "1.0.0";
        edition = "2015";
        sha256 = "0q2mslk9mvpdrl5zr1yvlb8ikmynpq5786c8ybn1wpa03rcqwk8r";
        authors = [
          "arcnmx"
        ];
        
      };
      "roxmltree" = rec {
        crateName = "roxmltree";
        version = "0.6.1";
        edition = "2015";
        sha256 = "0747azn8njasc5lsvw87d6wj8zhfjx2y73lh12v3rg3lla08y39k";
        authors = [
          "Evgeniy Reizner <razrfalcon@gmail.com>"
        ];
        dependencies = [
          {
            name = "xmlparser";
            packageId = "xmlparser";
          }
        ];
        
      };
      "rust-ini" = rec {
        crateName = "rust-ini";
        version = "0.13.0";
        edition = "2015";
        sha256 = "1hifnbgaz01zja5995chy6vjacbif2m76nlxsisw7y1pxx4c2liy";
        libName = "ini";
        authors = [
          "Y. T. Chung <zonyitoo@gmail.com>"
        ];
        
      };
      "rustc-demangle" = rec {
        crateName = "rustc-demangle";
        version = "0.1.15";
        edition = "2015";
        sha256 = "1brqf2bknkxsdzn3kd3wfifvzfc33bmvdy9r1k6fp4a8dz7xrx57";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
      "rustc-hash" = rec {
        crateName = "rustc-hash";
        version = "1.0.1";
        edition = "2015";
        sha256 = "1f4cnbcmz2c3zjidqszc9c4fip37ch4xl74nkkp9dw291j5zqh3m";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
        ];
        
      };
      "rustc_version" = rec {
        crateName = "rustc_version";
        version = "0.2.3";
        edition = "2015";
        sha256 = "02h3x57lcr8l2pm0a645s9whdh33pn5cnrwvn5cb57vcrc53x3hk";
        authors = [
          "Marvin L√∂bel <loebel.marvin@gmail.com>"
        ];
        dependencies = [
          {
            name = "semver";
            packageId = "semver";
          }
        ];
        
      };
      "rustyline" = rec {
        crateName = "rustyline";
        version = "5.0.0";
        edition = "2018";
        sha256 = "1plscwfc8rhnm55ns0kpr56xf5fv3g84skxb1mzy0394w102xqb7";
        authors = [
          "Katsu Kawakami <kkawa1570@gmail.com>"
        ];
        dependencies = [
          {
            name = "dirs";
            packageId = "dirs 2.0.1";
            optional = true;
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "memchr";
            packageId = "memchr";
          }
          {
            name = "nix";
            packageId = "nix";
            target = { target, features }: target."unix";
          }
          {
            name = "unicode-segmentation";
            packageId = "unicode-segmentation";
          }
          {
            name = "unicode-width";
            packageId = "unicode-width";
          }
          {
            name = "utf8parse";
            packageId = "utf8parse";
            target = { target, features }: target."unix";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            target = { target, features }: target."windows";
            features = [ "consoleapi" "handleapi" "minwindef" "processenv" "winbase" "wincon" "winuser" ];
          }
        ];
        features = {
          "default" = [ "with-dirs" ];
          "with-dirs" = [ "dirs" ];
        };
        resolvedDefaultFeatures = [ "default" "dirs" "with-dirs" ];
      };
      "ryu 0.2.8" = rec {
        crateName = "ryu";
        version = "0.2.8";
        edition = "2015";
        sha256 = "13wsi4408qxi9w44pdf5zfds4ym7np2070wkhg1g4j4dvi4rasmr";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
        };
      };
      "ryu 1.0.0" = rec {
        crateName = "ryu";
        version = "1.0.0";
        edition = "2015";
        sha256 = "15r9z2wzgbj04pks4jz7y6wif5xqhf1wqkl2nd7qrvn08ys68969";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
        };
      };
      "safemem" = rec {
        crateName = "safemem";
        version = "0.3.0";
        edition = "2015";
        sha256 = "1n9xm7hbh7k2xjbzp2ggpxhlmrdln3idzk1nkrsb0v5990r4bjld";
        authors = [
          "Austin Bonander <austin.bonander@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "same-file" = rec {
        crateName = "same-file";
        version = "1.0.4";
        edition = "2015";
        sha256 = "0rsjk8zjppgc083jyx89hxi39xnjf12x2aqv3x6gz8d8afzc884g";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi-util";
            packageId = "winapi-util";
            target = { target, features }: target."windows";
          }
        ];
        
      };
      "schannel" = rec {
        crateName = "schannel";
        version = "0.1.15";
        edition = "2015";
        sha256 = "0f9k4pm8yc3z0n1n8hazvnrvg52f0sfxjc91bhf3r76rb3rapxpj";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
          "Steffen Butzer <steffen.butzer@outlook.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            features = [ "lmcons" "minschannel" "securitybaseapi" "schannel" "sspi" "sysinfoapi" "timezoneapi" "winbase" "wincrypt" "winerror" ];
          }
        ];
        
      };
      "scoped_threadpool" = rec {
        crateName = "scoped_threadpool";
        version = "0.1.9";
        edition = "2015";
        sha256 = "1a26d3lk40s9mrf4imhbik7caahmw2jryhhb6vqv6fplbbgzal8x";
        authors = [
          "Marvin L√∂bel <loebel.marvin@gmail.com>"
        ];
        features = {
        };
      };
      "scopeguard 0.3.3" = rec {
        crateName = "scopeguard";
        version = "0.3.3";
        edition = "2015";
        sha256 = "09sy9wbqp409pkwmqni40qmwa99ldqpl48pp95m1xw8sc19qy9cl";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
      };
      "scopeguard 1.0.0" = rec {
        crateName = "scopeguard";
        version = "1.0.0";
        edition = "2015";
        sha256 = "03aay84r1f6w87ckbpj6cc4rnsxkxcfs13n5ynxjia0qkgjiabml";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
      };
      "security-framework" = rec {
        crateName = "security-framework";
        version = "0.3.1";
        edition = "2015";
        sha256 = "1hmdsdj061wk76g3fajbfjnw74p0q45hy8hfngp7diwy987kvrpf";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
          "Kornel <kornel@geekhood.net>"
        ];
        dependencies = [
          {
            name = "core-foundation";
            packageId = "core-foundation";
          }
          {
            name = "core-foundation-sys";
            packageId = "core-foundation-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "security-framework-sys";
            packageId = "security-framework-sys";
          }
        ];
        features = {
          "OSX_10_10" = [ "OSX_10_9" "security-framework-sys/OSX_10_10" ];
          "OSX_10_11" = [ "OSX_10_10" "security-framework-sys/OSX_10_11" ];
          "OSX_10_12" = [ "OSX_10_11" "security-framework-sys/OSX_10_12" ];
          "OSX_10_13" = [ "OSX_10_12" "security-framework-sys/OSX_10_13" "alpn" ];
          "OSX_10_9" = [ "security-framework-sys/OSX_10_9" ];
        };
      };
      "security-framework-sys" = rec {
        crateName = "security-framework-sys";
        version = "0.3.1";
        edition = "2015";
        sha256 = "0mlsakq9kmqyc0fg2hcbgm6rjk55mb0rhjw2wid3hqdzkjcghdln";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
          "Kornel <kornel@geekhood.net>"
        ];
        dependencies = [
          {
            name = "core-foundation-sys";
            packageId = "core-foundation-sys";
          }
        ];
        features = {
          "OSX_10_10" = [ "OSX_10_9" ];
          "OSX_10_11" = [ "OSX_10_10" ];
          "OSX_10_12" = [ "OSX_10_11" ];
          "OSX_10_13" = [ "OSX_10_12" ];
        };
      };
      "semver" = rec {
        crateName = "semver";
        version = "0.9.0";
        edition = "2015";
        sha256 = "00q4lkcj0rrgbhviv9sd4p6qmdsipkwkbra7rh11jrhq5kpvjzhx";
        authors = [
          "Steve Klabnik <steve@steveklabnik.com>"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "semver-parser";
            packageId = "semver-parser";
          }
        ];
        features = {
          "ci" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "semver-parser" = rec {
        crateName = "semver-parser";
        version = "0.7.0";
        edition = "2015";
        sha256 = "18vhypw6zgccnrlm5ps1pwa0khz7ry927iznpr88b87cagr1v2iq";
        authors = [
          "Steve Klabnik <steve@steveklabnik.com>"
        ];
        
      };
      "serde 0.8.23" = rec {
        crateName = "serde";
        version = "0.8.23";
        edition = "2015";
        sha256 = "1j4ajipn0sf4ya0crgcb94s848qp7mfc35n6d0q2rf8rk5skzbcx";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
        ];
        features = {
          "alloc" = [ "unstable" ];
          "collections" = [ "alloc" ];
          "default" = [ "std" ];
          "unstable-testing" = [ "clippy" "unstable" "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "serde 1.0.94" = rec {
        crateName = "serde";
        version = "1.0.94";
        edition = "2015";
        sha256 = "0ns7k7mxza1dcj9wgd8l8h367mpnp1v2aipdpb9ik758vrpnjsh7";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde_derive";
            packageId = "serde_derive";
            optional = true;
          }
        ];
        devDependencies = [
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
        ];
        features = {
          "alloc" = [ "unstable" ];
          "default" = [ "std" ];
          "derive" = [ "serde_derive" ];
        };
        resolvedDefaultFeatures = [ "default" "derive" "serde_derive" "std" ];
      };
      "serde-hjson 0.8.2" = rec {
        crateName = "serde-hjson";
        version = "0.8.2";
        edition = "2015";
        sha256 = "0lv1qwis9rr767xv9w27y1g1r71ayf02k2wkypawwlkxsrd3r0qb";
        authors = [
          "Christian Zangl <laktak@cdak.net>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 0.2.11";
          }
          {
            name = "linked-hash-map";
            packageId = "linked-hash-map 0.3.0";
            optional = true;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.1.43";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "serde";
            packageId = "serde 0.8.23";
          }
        ];
        features = {
          "default" = [ "preserve_order" ];
          "preserve_order" = [ "linked-hash-map" "linked-hash-map/serde_impl" ];
          "unstable-testing" = [ "clippy" ];
        };
        resolvedDefaultFeatures = [ "default" "linked-hash-map" "preserve_order" ];
      };
      "serde-hjson 0.9.0" = rec {
        crateName = "serde-hjson";
        version = "0.9.0";
        edition = "2015";
        sha256 = "0affmcbzd5j3ga4ms78hxknkg37iq0vd86pzfk400374d0qwyh26";
        authors = [
          "Christian Zangl <laktak@cdak.net>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 0.2.11";
          }
          {
            name = "linked-hash-map";
            packageId = "linked-hash-map 0.3.0";
            optional = true;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.1.43";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "serde";
            packageId = "serde 0.8.23";
          }
        ];
        features = {
          "default" = [ "preserve_order" ];
          "preserve_order" = [ "linked-hash-map" "linked-hash-map/serde_impl" ];
          "unstable-testing" = [ "clippy" ];
        };
        resolvedDefaultFeatures = [ "default" "linked-hash-map" "preserve_order" ];
      };
      "serde-value" = rec {
        crateName = "serde-value";
        version = "0.5.3";
        edition = "2015";
        sha256 = "0kz4i4a2if0la082ww64bbf38b0b1nycdm2rlp0ymi7d7n3kyrks";
        authors = [
          "arcnmx"
        ];
        dependencies = [
          {
            name = "ordered-float";
            packageId = "ordered-float";
          }
          {
            name = "serde";
            packageId = "serde 1.0.94";
          }
        ];
        
      };
      "serde_bytes" = rec {
        crateName = "serde_bytes";
        version = "0.11.1";
        edition = "2018";
        sha256 = "0sc5n336i7q4fiij4l8f892zcirgybrbxzl8bp51qxzqdvdlgzxa";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde 1.0.94";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "serde/alloc" ];
          "default" = [ "std" ];
          "std" = [ "serde/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "serde_derive" = rec {
        crateName = "serde_derive";
        version = "1.0.94";
        edition = "2015";
        sha256 = "0yzy4wki4v4l39fc42q5lrdigh5pk0vjhvg1z7sj4fs6srwynigg";
        procMacro = true;
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "visit" ];
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "serde_derive_internals" = rec {
        crateName = "serde_derive_internals";
        version = "0.24.1";
        edition = "2015";
        sha256 = "1ywgn5917kczly5yrbzi2xfl4yhrzbly5sf7q97fmg7bn70cd04a";
        libPath = "lib.rs";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "syn";
            packageId = "syn";
            usesDefaultFeatures = false;
            features = [ "derive" "parsing" "clone-impls" ];
          }
        ];
        
      };
      "serde_ini" = rec {
        crateName = "serde_ini";
        version = "0.2.0";
        edition = "2015";
        sha256 = "0f8ir1bbcdyad50aj1c53dkiwr24x6dr88f045skl1xvwa3nc8zb";
        authors = [
          "arcnmx"
        ];
        dependencies = [
          {
            name = "result";
            packageId = "result";
          }
          {
            name = "serde";
            packageId = "serde 1.0.94";
          }
          {
            name = "void";
            packageId = "void";
          }
        ];
        
      };
      "serde_json" = rec {
        crateName = "serde_json";
        version = "1.0.40";
        edition = "2015";
        sha256 = "010pa89zx07aqx1cwgw2a603wcp3q5n2iy0k71ppqbr8kwi4j705";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "itoa";
            packageId = "itoa";
          }
          {
            name = "ryu";
            packageId = "ryu 1.0.0";
          }
          {
            name = "serde";
            packageId = "serde 1.0.94";
          }
        ];
        features = {
          "preserve_order" = [ "indexmap" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "serde_test" = rec {
        crateName = "serde_test";
        version = "0.8.23";
        edition = "2015";
        sha256 = "1m939j7cgs7i58r6vxf0ffp3nbr8advr8p9dqa9w8zk0z2yks2qi";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde 0.8.23";
          }
        ];
        
      };
      "serde_urlencoded" = rec {
        crateName = "serde_urlencoded";
        version = "0.5.5";
        edition = "2015";
        sha256 = "0nhnzllx5xrij4x17g351n14md691r95mxr7sbpz4sl80n8xcbb4";
        authors = [
          "Anthony Ramine <n.oxyde@gmail.com>"
        ];
        dependencies = [
          {
            name = "dtoa";
            packageId = "dtoa";
          }
          {
            name = "itoa";
            packageId = "itoa";
          }
          {
            name = "serde";
            packageId = "serde 1.0.94";
          }
          {
            name = "url";
            packageId = "url";
          }
        ];
        
      };
      "serde_yaml" = rec {
        crateName = "serde_yaml";
        version = "0.8.9";
        edition = "2015";
        sha256 = "10mmjpnshgrwij01a13679nxy1hnh5yfr0343kh0y9p5j2d8mc1q";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "dtoa";
            packageId = "dtoa";
          }
          {
            name = "linked-hash-map";
            packageId = "linked-hash-map 0.5.2";
          }
          {
            name = "serde";
            packageId = "serde 1.0.94";
          }
          {
            name = "yaml-rust";
            packageId = "yaml-rust";
          }
        ];
        
      };
      "shell-words" = rec {
        crateName = "shell-words";
        version = "0.1.0";
        edition = "2015";
        sha256 = "0jnrw3f174974fsi2hg48l0klpy24767ib28w0xcvi2ll5axxb1r";
        authors = [
          "Tomasz MiƒÖsko <tomasz.miasko@gmail.com>"
        ];
        
      };
      "shell32-sys" = rec {
        crateName = "shell32-sys";
        version = "0.1.2";
        edition = "2015";
        sha256 = "0b0jjnv8rr4flllvpx9lkfvvxdl3hac53cd2klf14mqz2134pq4y";
        libName = "shell32";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
          }
        ];
        buildDependencies = [
          {
            name = "winapi-build";
            packageId = "winapi-build";
          }
        ];
        
      };
      "siphasher" = rec {
        crateName = "siphasher";
        version = "0.2.3";
        edition = "2015";
        sha256 = "1b53m53l24lyhr505lwqzrpjyq5qfnic71mynrcfvm43rybf938b";
        authors = [
          "Frank Denis <github@pureftpd.org>"
        ];
        
      };
      "slab" = rec {
        crateName = "slab";
        version = "0.4.2";
        edition = "2015";
        sha256 = "1y59xsa27jk84sxzswjk60xcjf8b4fm5960jwpznrrcmasyva4f1";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        
      };
      "smallvec" = rec {
        crateName = "smallvec";
        version = "0.6.10";
        edition = "2015";
        sha256 = "1dyl43rgzny79jjpgzi07y0ly2ggx1xwsn64csxj0j91bsf6lq5b";
        libPath = "lib.rs";
        authors = [
          "Simon Sapin <simon.sapin@exyr.org>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "spin" = rec {
        crateName = "spin";
        version = "0.5.0";
        edition = "2015";
        sha256 = "0m9clchsj0rf13bggsgvbv9haiy0f6rhvnvkpvkk8720a5pkydj4";
        authors = [
          "Mathijs van de Nes <git@mathijs.vd-nes.nl>"
          "John Ericson <git@JohnEricson.me>"
        ];
        
      };
      "stable_deref_trait" = rec {
        crateName = "stable_deref_trait";
        version = "1.1.1";
        edition = "2015";
        sha256 = "1j2lkgakksmz4vc5hfawcch2ipiskrhjs1sih0f3br7s7rys58fv";
        authors = [
          "Robert Grosse <n210241048576@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "stackvector" = rec {
        crateName = "stackvector";
        version = "1.0.6";
        edition = "2015";
        sha256 = "1bv820fhdad16islwli1g3iksk39ivf0zaqz4j1m08vq15jjaiqw";
        authors = [
          "Alex Huszagh <ahuszagh@ahuszagh.localdomain>"
        ];
        dependencies = [
          {
            name = "unreachable";
            packageId = "unreachable";
          }
        ];
        buildDependencies = [
          {
            name = "rustc_version";
            packageId = "rustc_version";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "static_assertions" = rec {
        crateName = "static_assertions";
        version = "0.2.5";
        edition = "2015";
        sha256 = "1mcrj7kc4h89d4njbic346dpz3vh9b9h3r937b5n2n214qqy56y1";
        authors = [
          "Nikolai Vazquez"
        ];
        
      };
      "string" = rec {
        crateName = "string";
        version = "0.2.0";
        edition = "2015";
        sha256 = "158r3n6k1c0j9pb5lp7iajaiv0dh53xhmw2g8k1k93p36y4zpfyh";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes";
            optional = true;
          }
        ];
        features = {
          "default" = [ "bytes" ];
        };
        resolvedDefaultFeatures = [ "bytes" "default" ];
      };
      "strsim 0.7.0" = rec {
        crateName = "strsim";
        version = "0.7.0";
        edition = "2015";
        sha256 = "0l7mkwvdk4vgnml67b85mczk466074aj8yf25gjrjslj4l0khkxv";
        authors = [
          "Danny Guo <dannyguo91@gmail.com>"
        ];
        
      };
      "strsim 0.8.0" = rec {
        crateName = "strsim";
        version = "0.8.0";
        edition = "2015";
        sha256 = "0sjsm7hrvjdifz661pjxq5w4hf190hx53fra8dfvamacvff139cf";
        authors = [
          "Danny Guo <dannyguo91@gmail.com>"
        ];
        
      };
      "subprocess" = rec {
        crateName = "subprocess";
        version = "0.1.18";
        edition = "2015";
        crateBin = [];
        sha256 = "001wzxqyvssfphi7g943asll20xrsbbafyilklrp7nn0y100zz18";
        authors = [
          "Hrvoje Nik≈°iƒá <hniksic@gmail.com>"
        ];
        dependencies = [
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.5.0";
            target = { target, features }: target."windows";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            target = { target, features }: target."windows";
            features = [ "std" "handleapi" "namedpipeapi" "processenv" "synchapi" "winerror" "processthreadsapi" "winbase" ];
          }
        ];
        
      };
      "syn" = rec {
        crateName = "syn";
        version = "0.15.37";
        edition = "2015";
        sha256 = "1r66y5jmy3w8vx9zr3z025pwb40i05761110ryhnkkym7w1i0571";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
            usesDefaultFeatures = false;
          }
          {
            name = "quote";
            packageId = "quote";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "unicode-xid";
            packageId = "unicode-xid";
          }
        ];
        features = {
          "default" = [ "derive" "parsing" "printing" "clone-impls" "proc-macro" ];
          "printing" = [ "quote" ];
          "proc-macro" = [ "proc-macro2/proc-macro" "quote/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "clone-impls" "default" "derive" "extra-traits" "fold" "full" "parsing" "printing" "proc-macro" "quote" "visit" "visit-mut" ];
      };
      "synstructure" = rec {
        crateName = "synstructure";
        version = "0.10.2";
        edition = "2015";
        sha256 = "0grirdkgh2wl4hf9a3nbiazpgccxgq54kn52ms0xrr6njvgkwd82";
        authors = [
          "Nika Layzell <nika@thelayzells.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "visit" "extra-traits" ];
          }
          {
            name = "unicode-xid";
            packageId = "unicode-xid";
          }
        ];
        features = {
        };
      };
      "syntect" = rec {
        crateName = "syntect";
        version = "3.2.0";
        edition = "2015";
        sha256 = "0yqnja471ddz90q8wm8mmk37jxg5y0fg09rpzhpijhx5qlqqh2z8";
        authors = [
          "Tristan Hume <tristan@thume.ca>"
        ];
        dependencies = [
          {
            name = "bincode";
            packageId = "bincode";
            optional = true;
          }
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "flate2";
            packageId = "flate2";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "fnv";
            packageId = "fnv";
            optional = true;
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
          }
          {
            name = "lazycell";
            packageId = "lazycell";
          }
          {
            name = "onig";
            packageId = "onig";
            optional = true;
          }
          {
            name = "plist";
            packageId = "plist";
          }
          {
            name = "regex-syntax";
            packageId = "regex-syntax";
            optional = true;
          }
          {
            name = "serde";
            packageId = "serde 1.0.94";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "walkdir";
            packageId = "walkdir";
          }
          {
            name = "yaml-rust";
            packageId = "yaml-rust";
            optional = true;
          }
        ];
        features = {
          "default" = [ "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create" ];
          "dump-create" = [ "flate2/default" "bincode" ];
          "dump-create-rs" = [ "flate2/rust_backend" "bincode" ];
          "dump-load" = [ "flate2/default" "bincode" ];
          "dump-load-rs" = [ "flate2/rust_backend" "bincode" ];
          "html" = [ "parsing" "assets" ];
          "metadata" = [ "parsing" ];
          "parsing" = [ "onig" "regex-syntax" "fnv" ];
          "yaml-load" = [ "yaml-rust" "parsing" ];
        };
        resolvedDefaultFeatures = [ "assets" "bincode" "default" "dump-create" "dump-load" "flate2" "fnv" "html" "onig" "parsing" "regex-syntax" "yaml-load" "yaml-rust" ];
      };
      "sys-info" = rec {
        crateName = "sys-info";
        version = "0.5.7";
        edition = "2015";
        sha256 = "0hc5jhwv57wvwaksrq4qsf6qq47lw8kp4yd3yym6sslv6ixwzmkn";
        libName = "sys_info";
        libPath = "lib.rs";
        authors = [
          "Siyu Wang <FillZpp.pub@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];
        
      };
      "sysinfo" = rec {
        crateName = "sysinfo";
        version = "0.9.0";
        edition = "2015";
        sha256 = "1zf97r4g8fyzvhpnyclwk5f6q3xysphf3m9x1rqp57z5i6qwmqn3";type = [ "rlib" "cdylib" ];
        authors = [
          "Guillaume Gomez <guillaume1.gomez@gmail.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "doc-comment";
            packageId = "doc-comment";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (!(target."os" == "unknown"));
          }
          {
            name = "rayon";
            packageId = "rayon";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            target = { target, features }: target."windows";
            features = [ "fileapi" "handleapi" "ioapiset" "minwindef" "pdh" "psapi" "synchapi" "sysinfoapi" "tlhelp32" "winbase" "winerror" "winioctl" "winnt" ];
          }
        ];
        features = {
          "debug" = [ "libc/extra_traits" ];
        };
      };
      "tempfile" = rec {
        crateName = "tempfile";
        version = "3.1.0";
        edition = "2018";
        sha256 = "1a9cfdqw70n7bcnkx05aih9xdba8lqazmqlkjpkmn2la6gcj8vks";
        authors = [
          "Steven Allen <steven@stebalien.com>"
          "The Rust Project Developers"
          "Ashley Mannix <ashleymannix@live.com.au>"
          "Jason White <jasonaw0@gmail.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "rand";
            packageId = "rand 0.7.0";
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "remove_dir_all";
            packageId = "remove_dir_all";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            target = { target, features }: target."windows";
            features = [ "fileapi" "handleapi" "winbase" ];
          }
        ];
        
      };
      "term" = rec {
        crateName = "term";
        version = "0.5.2";
        edition = "2015";
        sha256 = "0hkgjrfisj6zjwz525639pmsvzhlc48a0h65nw87qrdp6jihdlgd";
        authors = [
          "The Rust Project Developers"
          "Steven Allen"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "dirs";
            packageId = "dirs 1.0.5";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            target = { target, features }: target."windows";
            features = [ "consoleapi" "wincon" "handleapi" "fileapi" ];
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "termcolor" = rec {
        crateName = "termcolor";
        version = "1.0.5";
        edition = "2015";
        sha256 = "0vjfsn1a8zvqhnrbygrz1id6yckwv1dncw3w4zj65qdx0f00kmln";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "wincolor";
            packageId = "wincolor";
            target = { target, features }: target."windows";
          }
        ];
        
      };
      "termion" = rec {
        crateName = "termion";
        version = "1.5.3";
        edition = "2015";
        sha256 = "0c634rg520zjjfhwnxrc2jbfjz7db0rcpsjs1qici0nyghpv53va";
        authors = [
          "ticki <Ticki@users.noreply.github.com>"
          "gycos <alexandre.bury@gmail.com>"
          "IGI-111 <igi-111@protonmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (!(target."os" == "redox"));
          }
          {
            name = "numtoa";
            packageId = "numtoa";
            features = [ "std" ];
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "redox_termios";
            packageId = "redox_termios";
            target = { target, features }: (target."os" == "redox");
          }
        ];
        
      };
      "termios" = rec {
        crateName = "termios";
        version = "0.3.1";
        edition = "2015";
        sha256 = "09any1p4jp4bphvb5ikagnvwjc3xn2djchy96nkpa782xb2j1dkj";
        authors = [
          "David Cuddeback <david.cuddeback@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        
      };
      "textwrap" = rec {
        crateName = "textwrap";
        version = "0.11.0";
        edition = "2015";
        sha256 = "0q5hky03ik3y50s9sz25r438bc4nwhqc6dqwynv4wylc807n29nk";
        authors = [
          "Martin Geisler <martin@geisler.net>"
        ];
        dependencies = [
          {
            name = "unicode-width";
            packageId = "unicode-width";
          }
        ];
        
      };
      "thread_local" = rec {
        crateName = "thread_local";
        version = "0.3.6";
        edition = "2015";
        sha256 = "06rzik99p8c5js8238yhc8rk6np543ylb1dy9nrw5v80j0r3xdf6";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
          }
        ];
        
      };
      "tiff" = rec {
        crateName = "tiff";
        version = "0.2.2";
        edition = "2015";
        sha256 = "1kn7psgpacns337vvqh272rkqwnakmjd51rc7ygwnc03ibr38j0y";
        authors = [
          "ccgn"
          "bvssvni <bvssvni@gmail.com>"
          "nwin"
          "TyOverby <ty@pre-alpha.com>"
          "HeroicKatora"
          "Calum"
          "CensoredUsername <cens.username@gmail.com>"
          "Robzz"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "lzw";
            packageId = "lzw";
          }
          {
            name = "num-derive";
            packageId = "num-derive";
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.8";
          }
        ];
        
      };
      "time" = rec {
        crateName = "time";
        version = "0.1.42";
        edition = "2015";
        sha256 = "0vsbvsz0ryxb35dy9j4anxvy8zlaplmjmi0a4z4l64bc135cz3fv";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            target = { target, features }: target."windows";
            features = [ "std" "minwinbase" "minwindef" "ntdef" "profileapi" "sysinfoapi" "timezoneapi" ];
          }
        ];
        devDependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            features = [ "std" "processthreadsapi" "winbase" ];
          }
        ];
        
      };
      "tint" = rec {
        crateName = "tint";
        version = "1.0.1";
        edition = "2015";
        sha256 = "15k89pp3ddxczfnv2j995yvy02mfpmjrmxmv7mkp8c2acrq4bwks";
        authors = [
          "Brian Savage <savage13@gmail.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 0.2.11";
          }
        ];
        
      };
      "tokio" = rec {
        crateName = "tokio";
        version = "0.1.21";
        edition = "2015";
        sha256 = "11ra8jp3fj70a2zrqmd6as7wgpwiiyzjf50gz89i8r7wpksgqbzc";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes";
            optional = true;
          }
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "mio";
            packageId = "mio";
            optional = true;
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
            optional = true;
          }
          {
            name = "tokio-current-thread";
            packageId = "tokio-current-thread";
            optional = true;
          }
          {
            name = "tokio-executor";
            packageId = "tokio-executor";
            optional = true;
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
            optional = true;
          }
          {
            name = "tokio-reactor";
            packageId = "tokio-reactor";
            optional = true;
          }
          {
            name = "tokio-tcp";
            packageId = "tokio-tcp";
            optional = true;
          }
          {
            name = "tokio-threadpool";
            packageId = "tokio-threadpool";
            optional = true;
          }
          {
            name = "tokio-timer";
            packageId = "tokio-timer";
            optional = true;
          }
          {
            name = "tokio-trace-core";
            packageId = "tokio-trace-core";
            optional = true;
          }
        ];
        devDependencies = [
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
        ];
        features = {
          "codec" = [ "io" "tokio-codec" ];
          "default" = [ "codec" "fs" "io" "reactor" "rt-full" "sync" "tcp" "timer" "udp" "uds" ];
          "fs" = [ "tokio-fs" ];
          "io" = [ "bytes" "tokio-io" ];
          "reactor" = [ "io" "mio" "tokio-reactor" ];
          "rt-full" = [ "num_cpus" "reactor" "timer" "tokio-current-thread" "tokio-executor" "tokio-threadpool" "tokio-trace-core" ];
          "sync" = [ "tokio-sync" ];
          "tcp" = [ "tokio-tcp" ];
          "timer" = [ "tokio-timer" ];
          "udp" = [ "tokio-udp" ];
          "uds" = [ "tokio-uds" ];
        };
        resolvedDefaultFeatures = [ "bytes" "io" "mio" "num_cpus" "reactor" "rt-full" "tcp" "timer" "tokio-current-thread" "tokio-executor" "tokio-io" "tokio-reactor" "tokio-tcp" "tokio-threadpool" "tokio-timer" "tokio-trace-core" ];
      };
      "tokio-buf" = rec {
        crateName = "tokio-buf";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0inwrkh8knqy44mr9h2i305zyy4pxhfy90y0gr5rm1akdks21clg";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "either";
            packageId = "either";
            optional = true;
          }
          {
            name = "futures";
            packageId = "futures";
          }
        ];
        features = {
          "default" = [ "util" ];
          "util" = [ "bytes/either" "either" ];
        };
        resolvedDefaultFeatures = [ "default" "either" "util" ];
      };
      "tokio-current-thread" = rec {
        crateName = "tokio-current-thread";
        version = "0.1.6";
        edition = "2015";
        sha256 = "0hx4c8v88kk0ih8x5s564gsgwwf8n11kryvxm72l1f7isz51fqni";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "tokio-executor";
            packageId = "tokio-executor";
          }
        ];
        
      };
      "tokio-executor" = rec {
        crateName = "tokio-executor";
        version = "0.1.7";
        edition = "2015";
        sha256 = "0pjmgpg58k3hf5q9w6xjljsv8xy66lf734qnfwsc0g3pq3349sl3";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.6.5";
          }
          {
            name = "futures";
            packageId = "futures";
          }
        ];
        
      };
      "tokio-io" = rec {
        crateName = "tokio-io";
        version = "0.1.12";
        edition = "2015";
        sha256 = "09jrz1hh4h1vj45qy09y7m7m8jsy1hl6g32clnky25mdim3dp42h";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "log";
            packageId = "log";
          }
        ];
        
      };
      "tokio-reactor" = rec {
        crateName = "tokio-reactor";
        version = "0.1.9";
        edition = "2015";
        sha256 = "1khip64cn63xvayq1db68kxcnhgw3cb449a4n2lbw4p1qzx6pwba";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.6.5";
          }
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "mio";
            packageId = "mio";
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.7.1";
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "tokio-executor";
            packageId = "tokio-executor";
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
          }
          {
            name = "tokio-sync";
            packageId = "tokio-sync";
          }
        ];
        devDependencies = [
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
        ];
        
      };
      "tokio-sync" = rec {
        crateName = "tokio-sync";
        version = "0.1.6";
        edition = "2015";
        sha256 = "1ryalh7dcmnz46xj1va8aaw3if6vd4mj87r67dqvrqhpyf7j8qi1";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "futures";
            packageId = "futures";
          }
        ];
        
      };
      "tokio-tcp" = rec {
        crateName = "tokio-tcp";
        version = "0.1.3";
        edition = "2015";
        sha256 = "06a15vg8bcd33ng3h9ldzlq7wl4jsw0p9qpy7v22ls5yah3b250x";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "iovec";
            packageId = "iovec";
          }
          {
            name = "mio";
            packageId = "mio";
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
          }
          {
            name = "tokio-reactor";
            packageId = "tokio-reactor";
          }
        ];
        
      };
      "tokio-threadpool" = rec {
        crateName = "tokio-threadpool";
        version = "0.1.14";
        edition = "2015";
        sha256 = "1wkj3wixicsqvllm8w74b24knw6mdn00zslm8l9fm1p81gr8lmbj";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "crossbeam-deque";
            packageId = "crossbeam-deque 0.7.1";
          }
          {
            name = "crossbeam-queue";
            packageId = "crossbeam-queue";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.6.5";
          }
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
          {
            name = "rand";
            packageId = "rand 0.6.5";
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "tokio-executor";
            packageId = "tokio-executor";
          }
        ];
        
      };
      "tokio-timer" = rec {
        crateName = "tokio-timer";
        version = "0.2.11";
        edition = "2015";
        sha256 = "03m68ainkdy3b5pf20rjyknhk2ppx35bjdc2yfj2bv80sl96h47j";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.6.5";
          }
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "tokio-executor";
            packageId = "tokio-executor";
          }
        ];
        
      };
      "tokio-trace-core" = rec {
        crateName = "tokio-trace-core";
        version = "0.2.0";
        edition = "2015";
        sha256 = "04y6c2r4ddzk02xb3hn60s9a1w92h0g8pzmxwaspqvwmsrba5j59";
        authors = [
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
          }
        ];
        
      };
      "toml 0.4.10" = rec {
        crateName = "toml";
        version = "0.4.10";
        edition = "2015";
        sha256 = "07qilkzinn8z13vq2sss65n2lza7wrmqpvkbclw919m3f7y691km";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde 1.0.94";
          }
        ];
        
      };
      "toml 0.5.1" = rec {
        crateName = "toml";
        version = "0.5.1";
        edition = "2018";
        sha256 = "0fdhfyv20qn29cxq1f9j9wav92c3qhxdm71sxfyzhzpsfdw6vjdq";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde 1.0.94";
          }
        ];
        features = {
          "preserve_order" = [ "linked-hash-map" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "toml-query" = rec {
        crateName = "toml-query";
        version = "0.9.2";
        edition = "2018";
        sha256 = "1nyfl4c3xwsn57qp7br76ha0vnbp65y2x0dnbyxlbi0nl7xmlkb5";
        authors = [
          "Matthias Beyer <mail@beyermatthias.de>"
        ];
        dependencies = [
          {
            name = "failure";
            packageId = "failure";
          }
          {
            name = "failure_derive";
            packageId = "failure_derive";
          }
          {
            name = "is-match";
            packageId = "is-match";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "toml";
            packageId = "toml 0.5.1";
          }
          {
            name = "toml-query_derive";
            packageId = "toml-query_derive";
          }
        ];
        features = {
          "logging" = [ "log" ];
          "typed" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "toml-query_derive" = rec {
        crateName = "toml-query_derive";
        version = "0.9.0";
        edition = "2015";
        sha256 = "0dakicg6gil2h0arb11c7ipi9l42p13qzrcfbkkwfwy2bqjcm69w";
        procMacro = true;
        authors = [
          "Matthias Beyer <mail@beyermatthias.de>"
        ];
        dependencies = [
          {
            name = "darling";
            packageId = "darling 0.8.6";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];
        
      };
      "try-lock" = rec {
        crateName = "try-lock";
        version = "0.2.2";
        edition = "2015";
        sha256 = "10p36rx6pqi9d0zr876xa8vksx2m66ha45myakl50rn08dxyn176";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        
      };
      "try_from" = rec {
        crateName = "try_from";
        version = "0.3.2";
        edition = "2015";
        sha256 = "12wdd4ja7047sd3rx70hv2056hyc8gcdllcx3a41g1rnw64kng98";
        authors = [
          "Derek Williams <derek@fyrie.net>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
        ];
        features = {
        };
      };
      "ucd-util" = rec {
        crateName = "ucd-util";
        version = "0.1.3";
        edition = "2015";
        sha256 = "11lgx380zgqsm265cg78w2mcjpmldbwbi01lb5w48hyqwi720p2k";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        
      };
      "unicase 1.4.2" = rec {
        crateName = "unicase";
        version = "1.4.2";
        edition = "2015";
        sha256 = "0cwazh4qsmm9msckjk86zc1z35xg7hjxjykrgjalzdv367w6aivz";
        authors = [
          "Sean McArthur <sean.monstar@gmail.com>"
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check";
          }
        ];
        features = {
          "heap_size" = [ "heapsize" "heapsize_plugin" ];
        };
      };
      "unicase 2.4.0" = rec {
        crateName = "unicase";
        version = "2.4.0";
        edition = "2015";
        sha256 = "1xmpmkakhhblq7dzab1kwyv925kv7fqjkjsxjspg6ix9n88makm8";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check";
          }
        ];
        features = {
        };
      };
      "unicode-bidi" = rec {
        crateName = "unicode-bidi";
        version = "0.3.4";
        edition = "2015";
        sha256 = "1malx8ljgm7v1gbaazkn7iicy5wj0bwcyadj3l727a38ch6bvwj9";
        libName = "unicode_bidi";
        authors = [
          "The Servo Project Developers"
        ];
        dependencies = [
          {
            name = "matches";
            packageId = "matches";
          }
        ];
        features = {
          "flame_it" = [ "flame" "flamer" ];
          "with_serde" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "unicode-normalization" = rec {
        crateName = "unicode-normalization";
        version = "0.1.8";
        edition = "2015";
        sha256 = "09i49va90rvia1agvgni4gicnqv50y5zy1naw8mr8bcqifh3j4ql";
        authors = [
          "kwantam <kwantam@gmail.com>"
        ];
        dependencies = [
          {
            name = "smallvec";
            packageId = "smallvec";
          }
        ];
        
      };
      "unicode-segmentation" = rec {
        crateName = "unicode-segmentation";
        version = "1.3.0";
        edition = "2015";
        sha256 = "1a9jqg7rb1yq6w2xc9jgxcs111yk5vxm9afjfvykfnrmzk6z8rqr";
        authors = [
          "kwantam <kwantam@gmail.com>"
        ];
        features = {
        };
      };
      "unicode-width" = rec {
        crateName = "unicode-width";
        version = "0.1.5";
        edition = "2015";
        sha256 = "09k5lipygardwy0660jhls08fsgknrazzivmn804gps53hiqc8w8";
        authors = [
          "kwantam <kwantam@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "unicode-xid" = rec {
        crateName = "unicode-xid";
        version = "0.1.0";
        edition = "2015";
        sha256 = "1z57lqh4s18rr4x0j4fw4fmp9hf9346h0kmdgqsqx0fhjr3k0wpw";
        authors = [
          "erick.tryzelaar <erick.tryzelaar@gmail.com>"
          "kwantam <kwantam@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "unreachable" = rec {
        crateName = "unreachable";
        version = "1.0.0";
        edition = "2015";
        sha256 = "0mps2il4xy2mjqc3appas27hhn2xmvixc3bzzhfrjj74gy3i0a1q";
        authors = [
          "Jonathan Reem <jonathan.reem@gmail.com>"
        ];
        dependencies = [
          {
            name = "void";
            packageId = "void";
            usesDefaultFeatures = false;
          }
        ];
        
      };
      "url" = rec {
        crateName = "url";
        version = "1.7.2";
        edition = "2015";
        sha256 = "0nim1c90mxpi9wgdw2xh8dqd72vlklwlzam436akcrhjac6pqknx";
        authors = [
          "The rust-url developers"
        ];
        dependencies = [
          {
            name = "idna";
            packageId = "idna";
          }
          {
            name = "matches";
            packageId = "matches";
          }
          {
            name = "percent-encoding";
            packageId = "percent-encoding";
          }
        ];
        features = {
          "heap_size" = [ "heapsize" ];
          "query_encoding" = [ "encoding" ];
        };
      };
      "user32-sys" = rec {
        crateName = "user32-sys";
        version = "0.2.0";
        edition = "2015";
        sha256 = "0ivxc7hmsxax9crdhxdd1nqwik4s9lhb2x59lc8b88bv20fp3x2f";
        libName = "user32";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
          }
        ];
        buildDependencies = [
          {
            name = "winapi-build";
            packageId = "winapi-build";
          }
        ];
        
      };
      "utf8-ranges" = rec {
        crateName = "utf8-ranges";
        version = "1.0.3";
        edition = "2015";
        sha256 = "1ppzjsxmv1p1xfid8wwn07ciikk84k30frl28bwsny6za1vall4x";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        
      };
      "utf8parse" = rec {
        crateName = "utf8parse";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0zamsj2986shm4x9zncjf2m5qy9scaw7qnxw4f89b2afpg6a8wl7";
        authors = [
          "Joe Wilm <joe@jwilm.com>"
        ];
        
      };
      "uuid" = rec {
        crateName = "uuid";
        version = "0.7.4";
        edition = "2015";
        sha256 = "0ank4xk20x3nrz926w8j9mz53bi3v8bykxmhlq2pffa8xc8wdnwh";
        authors = [
          "Ashley Mannix<ashleymannix@live.com.au>"
          "Christopher Armstrong"
          "Dylan DPC<dylan.dpc@gmail.com>"
          "Hunar Roop Kahlon<hunar.roop@gmail.com>"
        ];
        dependencies = [
          {
            name = "rand";
            packageId = "rand 0.6.5";
            optional = true;
          }
        ];
        features = {
          "const_fn" = [ "nightly" ];
          "default" = [ "std" ];
          "guid" = [ "winapi" ];
          "stdweb" = [ "rand/stdweb" ];
          "u128" = [ "byteorder" ];
          "v3" = [ "md5" ];
          "v4" = [ "rand" ];
          "v5" = [ "sha1" ];
          "wasm-bindgen" = [ "rand/wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "default" "rand" "std" "v4" ];
      };
      "vcpkg" = rec {
        crateName = "vcpkg";
        version = "0.2.6";
        edition = "2015";
        sha256 = "0g8l2gpc889bl4ja7fx0syr4sgj0w6zq63kx5hdkf4ivxg9rdwny";
        authors = [
          "Jim McGrath <jimmc2@gmail.com>"
        ];
        
      };
      "vec_map" = rec {
        crateName = "vec_map";
        version = "0.8.1";
        edition = "2015";
        sha256 = "06n8hw4hlbcz328a3gbpvmy0ma46vg1lc0r5wf55900szf3qdiq5";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Jorge Aparicio <japaricious@gmail.com>"
          "Alexis Beingessner <a.beingessner@gmail.com>"
          "Brian Anderson <>"
          "tbu- <>"
          "Manish Goregaokar <>"
          "Aaron Turon <aturon@mozilla.com>"
          "Adolfo Ochagav√≠a <>"
          "Niko Matsakis <>"
          "Steven Fackler <>"
          "Chase Southwood <csouth3@illinois.edu>"
          "Eduard Burtescu <>"
          "Florian Wilkens <>"
          "F√©lix Raimundo <>"
          "Tibor Benke <>"
          "Markus Siemens <markus@m-siemens.de>"
          "Josh Branchaud <jbranchaud@gmail.com>"
          "Huon Wilson <dbau.pp@gmail.com>"
          "Corey Farwell <coref@rwell.org>"
          "Aaron Liblong <>"
          "Nick Cameron <nrc@ncameron.org>"
          "Patrick Walton <pcwalton@mimiga.net>"
          "Felix S Klock II <>"
          "Andrew Paseltiner <apaseltiner@gmail.com>"
          "Sean McArthur <sean.monstar@gmail.com>"
          "Vadim Petrochenkov <>"
        ];
        features = {
          "eders" = [ "serde" ];
        };
      };
      "version_check" = rec {
        crateName = "version_check";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1pf91pvj8n6akh7w6j5ypka6aqz08b3qpzgs0ak2kjf4frkiljwi";
        authors = [
          "Sergio Benitez <sb@sergio.bz>"
        ];
        
      };
      "void" = rec {
        crateName = "void";
        version = "1.0.2";
        edition = "2015";
        sha256 = "0zc8f0ksxvmhvgx4fdg0zyn6vdnbxd2xv9hfx4nhzg6kbs4f80ka";
        authors = [
          "Jonathan Reem <jonathan.reem@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "walkdir" = rec {
        crateName = "walkdir";
        version = "2.2.8";
        edition = "2015";
        sha256 = "0icbm5chys06kwsglf0p2n9pm8w598h48gvqbv7z1kdk5dz4m467";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "same-file";
            packageId = "same-file";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            target = { target, features }: target."windows";
            features = [ "std" "winnt" ];
          }
          {
            name = "winapi-util";
            packageId = "winapi-util";
            target = { target, features }: target."windows";
          }
        ];
        
      };
      "want" = rec {
        crateName = "want";
        version = "0.0.6";
        edition = "2015";
        sha256 = "1cznvlky1zbxhwlajdi0kvwq3ma8wsmalaf51j1vip9hbx3n8x3r";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "try-lock";
            packageId = "try-lock";
          }
        ];
        
      };
      "wasm-bindgen" = rec {
        crateName = "wasm-bindgen";
        version = "0.2.47";
        edition = "2018";
        sha256 = "0xsqz39v8nnlmiflybjpy7hvjdhmdb01j3zi0p5p6135rjc9j0i2";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "wasm-bindgen-macro";
            packageId = "wasm-bindgen-macro";
          }
        ];
        features = {
          "default" = [ "spans" "std" ];
          "serde-serialize" = [ "serde" "serde_json" "std" ];
          "spans" = [ "wasm-bindgen-macro/spans" ];
          "strict-macro" = [ "wasm-bindgen-macro/strict-macro" ];
          "xxx_debug_only_print_generated_code" = [ "wasm-bindgen-macro/xxx_debug_only_print_generated_code" ];
        };
        resolvedDefaultFeatures = [ "default" "spans" "std" ];
      };
      "wasm-bindgen-backend" = rec {
        crateName = "wasm-bindgen-backend";
        version = "0.2.47";
        edition = "2018";
        sha256 = "0z2hw6m0f1bzc99w5xz4inaldaykl7xpajy2x01cg5j1rgrqz1bg";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "bumpalo";
            packageId = "bumpalo";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.3.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" ];
          }
          {
            name = "wasm-bindgen-shared";
            packageId = "wasm-bindgen-shared";
          }
        ];
        features = {
          "extra-traits" = [ "syn/extra-traits" ];
        };
        resolvedDefaultFeatures = [ "spans" ];
      };
      "wasm-bindgen-macro" = rec {
        crateName = "wasm-bindgen-macro";
        version = "0.2.47";
        edition = "2018";
        sha256 = "1nvixvsqn4lh31jrf5r9dxxdcqzfaf28f0kv3s9i4wqixc29zhhm";
        procMacro = true;
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "wasm-bindgen-macro-support";
            packageId = "wasm-bindgen-macro-support";
          }
        ];
        features = {
          "spans" = [ "wasm-bindgen-macro-support/spans" ];
          "strict-macro" = [ "wasm-bindgen-macro-support/strict-macro" ];
        };
        resolvedDefaultFeatures = [ "spans" ];
      };
      "wasm-bindgen-macro-support" = rec {
        crateName = "wasm-bindgen-macro-support";
        version = "0.2.47";
        edition = "2018";
        sha256 = "1vl2ivpfnf4q7mmgy1w9h13xc61n25z4nb0fzs6j85iqc9mkbccj";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "visit" ];
          }
          {
            name = "wasm-bindgen-backend";
            packageId = "wasm-bindgen-backend";
          }
          {
            name = "wasm-bindgen-shared";
            packageId = "wasm-bindgen-shared";
          }
        ];
        features = {
          "extra-traits" = [ "syn/extra-traits" ];
          "spans" = [ "wasm-bindgen-backend/spans" ];
        };
        resolvedDefaultFeatures = [ "spans" ];
      };
      "wasm-bindgen-shared" = rec {
        crateName = "wasm-bindgen-shared";
        version = "0.2.47";
        edition = "2018";
        sha256 = "1d0kg65wjrcqjxb21r9jgmhf3fli2h1312srhx545z8cngfidphm";
        authors = [
          "The wasm-bindgen Developers"
        ];
        
      };
      "winapi 0.2.8" = rec {
        crateName = "winapi";
        version = "0.2.8";
        edition = "2015";
        sha256 = "0yh816lh6lf56dpsgxy189c2ai1z3j8mw9si6izqb6wsjkbcjz8n";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        
      };
      "winapi 0.3.7" = rec {
        crateName = "winapi";
        version = "0.3.7";
        edition = "2015";
        sha256 = "0w7pbhcl087lkggxdflfp2i92rq89ahsfdkjkv44fgmiy9m3h3pi";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi-i686-pc-windows-gnu";
            packageId = "winapi-i686-pc-windows-gnu";
            target = { target, features }: (stdenv.hostPlatform.config == "i686-pc-windows-gnu");
          }
          {
            name = "winapi-x86_64-pc-windows-gnu";
            packageId = "winapi-x86_64-pc-windows-gnu";
            target = { target, features }: (stdenv.hostPlatform.config == "x86_64-pc-windows-gnu");
          }
        ];
        features = {
          "debug" = [ "impl-debug" ];
        };
        resolvedDefaultFeatures = [ "basetsd" "consoleapi" "errhandlingapi" "fileapi" "handleapi" "ioapiset" "knownfolders" "lmcons" "minschannel" "minwinbase" "minwindef" "namedpipeapi" "ntdef" "ntsecapi" "ntstatus" "objbase" "pdh" "processenv" "processthreadsapi" "profileapi" "psapi" "schannel" "securitybaseapi" "shellapi" "shlobj" "sspi" "std" "synchapi" "sysinfoapi" "timezoneapi" "tlhelp32" "winbase" "wincon" "wincrypt" "winerror" "winioctl" "winnt" "winsock2" "winuser" "ws2def" "ws2ipdef" "ws2tcpip" ];
      };
      "winapi-build" = rec {
        crateName = "winapi-build";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1g4rqsgjky0a7530qajn2bbfcrl2v0zb39idgdws9b1l7gp5wc9d";
        libName = "build";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        
      };
      "winapi-i686-pc-windows-gnu" = rec {
        crateName = "winapi-i686-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "1dmpa6mvcvzz16zg6d5vrfy4bxgg541wxrcip7cnshi06v38ffxc";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        
      };
      "winapi-util" = rec {
        crateName = "winapi-util";
        version = "0.1.2";
        edition = "2015";
        sha256 = "1j839dc6y8vszvrsb7yk0qvs0w6asnahxzbyans37vnsw6vbls3i";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            target = { target, features }: target."windows";
            features = [ "std" "consoleapi" "errhandlingapi" "fileapi" "minwindef" "processenv" "winbase" "wincon" "winerror" "winnt" ];
          }
        ];
        
      };
      "winapi-x86_64-pc-windows-gnu" = rec {
        crateName = "winapi-x86_64-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "0gqq64czqb64kskjryj8isp62m2sgvx25yyj3kpc2myh85w24bki";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        
      };
      "wincolor" = rec {
        crateName = "wincolor";
        version = "1.0.1";
        edition = "2015";
        sha256 = "1fp9sxq63kw3vjjcjrl3f7px082pplzxcr3qza2n2pa6mq0xj7jn";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.7";
            features = [ "minwindef" "wincon" ];
          }
          {
            name = "winapi-util";
            packageId = "winapi-util";
          }
        ];
        
      };
      "ws2_32-sys" = rec {
        crateName = "ws2_32-sys";
        version = "0.2.1";
        edition = "2015";
        sha256 = "0ppscg5qfqaw0gzwv2a4nhn5bn01ff9iwn6ysqnzm4n8s3myz76m";
        libName = "ws2_32";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
          }
        ];
        buildDependencies = [
          {
            name = "winapi-build";
            packageId = "winapi-build";
          }
        ];
        
      };
      "x11" = rec {
        crateName = "x11";
        version = "2.18.1";
        edition = "2015";
        sha256 = "0dg2d0yrqmwg6prpxkw3vpmwzwxnaki2cn0v64ylh5gp4cqpws9r";
        authors = [
          "daggerbot <daggerbot@gmail.com>"
          "Erle Pereira <erle@erlepereira.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
        ];
        features = {
          "xrecord" = [ "xtst" ];
          "xtest" = [ "xtst" ];
        };
        resolvedDefaultFeatures = [ "xlib" ];
      };
      "x11-clipboard" = rec {
        crateName = "x11-clipboard";
        version = "0.3.2";
        edition = "2015";
        sha256 = "1lw7jp184i6p0wa3hbmswnrzvly8l5gisz2sw5kq4fd16mikaxrs";
        authors = [
          "quininer kel <quininer@live.com>"
        ];
        dependencies = [
          {
            name = "xcb";
            packageId = "xcb";
            features = [ "thread" "xfixes" ];
          }
        ];
        
      };
      "xcb" = rec {
        crateName = "xcb";
        version = "0.8.2";
        edition = "2015";
        sha256 = "1ph27r9nxyfy3hh1c7x85g6dciwxcinf6514pvw9ybhl4hzpm4ay";
        authors = [
          "Remi Thebault <remi.thebault@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "log";
            packageId = "log";
          }
        ];
        buildDependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "composite" = [ "xfixes" ];
          "damage" = [ "xfixes" ];
          "debug_all" = [ "thread" "composite" "damage" "dpms" "dri2" "dri3" "glx" "randr" "record" "render" "res" "screensaver" "shape" "shm" "xevie" "xf86dri" "xfixes" "xinerama" "xkb" "xprint" "xselinux" "xtest" "xvmc" "xv" "xlib_xcb" ];
          "present" = [ "render" "xfixes" "sync" ];
          "randr" = [ "render" ];
          "xfixes" = [ "render" "shape" ];
          "xinput" = [ "xfixes" ];
          "xlib_xcb" = [ "x11/xlib" ];
          "xv" = [ "shm" ];
          "xvmc" = [ "xv" ];
        };
        resolvedDefaultFeatures = [ "render" "shape" "thread" "xfixes" ];
      };
      "xdg" = rec {
        crateName = "xdg";
        version = "2.2.0";
        edition = "2015";
        sha256 = "0mws8a0fr3cqk5nh7aq9lmkmhzghvasqy4mhw6nnza06l4d6i2fh";
        authors = [
          "Ben Longbons <b.r.longbons@gmail.com>"
          "whitequark <whitequark@whitequark.org>"
        ];
        
      };
      "xml-rs" = rec {
        crateName = "xml-rs";
        version = "0.8.0";
        edition = "2015";
        crateBin = [];
        sha256 = "1db4v716rbpgjiasaim2s17rmvsfcq1qzwg6nji6mdf5k34i46sl";
        libName = "xml";
        authors = [
          "Vladimir Matveev <vladimir.matweev@gmail.com>"
        ];
        
      };
      "xmlparser" = rec {
        crateName = "xmlparser";
        version = "0.9.0";
        edition = "2015";
        sha256 = "1vhw7s5672557vdz9s5kkmv0j53xz0haakp6af8h3zxh1zq9bv7c";
        authors = [
          "Evgeniy Reizner <razrfalcon@gmail.com>"
        ];
        
      };
      "yaml-rust" = rec {
        crateName = "yaml-rust";
        version = "0.4.3";
        edition = "2015";
        sha256 = "0ka3qhqc5lvk3hz14wmsj32jhmh44blcbfrx5hfxli2gg38kv4k5";
        authors = [
          "Yuheng Chen <yuhengchen@sensetime.com>"
        ];
        dependencies = [
          {
            name = "linked-hash-map";
            packageId = "linked-hash-map 0.5.2";
          }
        ];
        
      };
    };

    #
# crate2nix/default.nix (excerpt start)
#

  /* Target (platform) data for conditional dependencies.
     This corresponds roughly to what buildRustCrate is setting.
  */
  defaultTarget = {
    unix = true;
    windows = false;
    fuchsia = true;
    test = false;

    # This doesn't appear to be officially documented anywhere yet.
    # See https://github.com/rust-lang-nursery/rust-forge/issues/101.
    os = if stdenv.hostPlatform.isDarwin
    then "macos"
    else stdenv.hostPlatform.parsed.kernel.name;
    arch = stdenv.hostPlatform.parsed.cpu.name;
    family = "unix";
    env = "gnu";
    endian =
      if stdenv.hostPlatform.parsed.cpu.significantByte.name == "littleEndian"
      then "little" else "big";
    pointer_width = toString stdenv.hostPlatform.parsed.cpu.bits;
    vendor = stdenv.hostPlatform.parsed.vendor.name;
    debug_assertions = false;
  };

  /* Filters common temp files and build files. */
  # TODO(pkolloch): Substitute with gitignore filter
  sourceFilter = name: type:
    let
      baseName = builtins.baseNameOf (builtins.toString name);
    in
      ! (
        # Filter out git
        baseName == ".gitignore"
        || (type == "directory" && baseName == ".git")

        # Filter out build results
        || (
          type == "directory" && (
            baseName == "target"
            || baseName == "_site"
            || baseName == ".sass-cache"
            || baseName == ".jekyll-metadata"
            || baseName == "build-artifacts"
          )
        )

        # Filter out nix-build result symlinks
        || (
          type == "symlink" && lib.hasPrefix "result" baseName
        )

        # Filter out IDE config
        || (
          type == "directory" && (
            baseName == ".idea" || baseName == ".vscode"
          )
        ) || lib.hasSuffix ".iml" baseName

        # Filter out nix build files
        || baseName == "Cargo.nix"

        # Filter out editor backup / swap files.
        || lib.hasSuffix "~" baseName
        || builtins.match "^\\.sw[a-z]$$" baseName != null
        || builtins.match "^\\..*\\.sw[a-z]$$" baseName != null
        || lib.hasSuffix ".tmp" baseName
        || lib.hasSuffix ".bak" baseName
        || baseName == "tests.nix"
      );

  /* Returns a crate which depends on successful test execution
     of crate given as the second argument.

     testCrateFlags: list of flags to pass to the test exectuable
     testInputs: list of packages that should be available during test execution
  */
  crateWithTest = { crate, testCrate, testCrateFlags, testInputs }:
    assert builtins.typeOf testCrateFlags == "list";
    assert builtins.typeOf testInputs == "list";
    let
      # override the `crate` so that it will build and execute tests instead of
      # building the actual lib and bin targets We just have to pass `--test`
      # to rustc and it will do the right thing.  We execute the tests and copy
      # their log and the test executables to $out for later inspection.
      test = let
        drv = testCrate.override (
          _: {
            buildTests = true;
          }
        );
      in
        pkgs.runCommand "run-tests-${testCrate.name}" {
          inherit testCrateFlags;
          buildInputs = testInputs;
        } ''
          set -ex

          export RUST_BACKTRACE=1

          # recreate a file hierarchy as when running tests with cargo

          # the source for test data
          ${pkgs.xorg.lndir}/bin/lndir ${crate.src}

          # build outputs
          testRoot=target/debug
          mkdir -p $testRoot

          # executables of the crate
          # we copy to prevent std::env::current_exe() to resolve to a store location
          for i in ${crate}/bin/*; do
            cp "$i" "$testRoot"
          done
          chmod +w -R .

          # test harness executables are suffixed with a hash, like cargo does
          # this allows to prevent name collision with the main
          # executables of the crate
          hash=$(basename $out)
          for file in ${drv}/tests/*; do
            f=$testRoot/$(basename $file)-$hash
            cp $file $f
            $f $testCrateFlags 2>&1 | tee -a $out
          done
        '';
    in
      crate.overrideAttrs (
        old: {
          checkPhase = ''
            test -e ${test}
          '';
          passthru = (old.passthru or {}) // {
            inherit test;
          };
        }
      );

  /* A restricted overridable version of builtRustCratesWithFeatures. */
  buildRustCrateWithFeatures =
    { packageId
    , features ? rootFeatures
    , crateOverrides ? defaultCrateOverrides
    , buildRustCrateFunc ? null
    , runTests ? false
    , testCrateFlags ? []
    , testInputs ? []
    }:
      lib.makeOverridable
        (
          { features
          , crateOverrides
          , runTests
          , testCrateFlags
          , testInputs
          }:
            let
              buildRustCrateFuncOverriden = if buildRustCrateFunc != null
              then buildRustCrateFunc
              else (
                if crateOverrides == pkgs.defaultCrateOverrides
                then buildRustCrate
                else buildRustCrate.override {
                  defaultCrateOverrides = crateOverrides;
                }
              );
              builtRustCrates = builtRustCratesWithFeatures {
                inherit packageId features;
                buildRustCrateFunc = buildRustCrateFuncOverriden;
                runTests = false;
              };
              builtTestRustCrates = builtRustCratesWithFeatures {
                inherit packageId features;
                buildRustCrateFunc = buildRustCrateFuncOverriden;
                runTests = true;
              };
              drv = builtRustCrates.${packageId};
              testDrv = builtTestRustCrates.${packageId};
              derivation = if runTests then
                crateWithTest {
                  crate = drv;
                  testCrate = testDrv;
                  inherit testCrateFlags testInputs;
                }
              else drv;
            in
              derivation
        )
        { inherit features crateOverrides runTests testCrateFlags testInputs; };

  /* Returns an attr set with packageId mapped to the result of buildRustCrateFunc
     for the corresponding crate.
  */
  builtRustCratesWithFeatures =
    { packageId
    , features
    , crateConfigs ? crates
    , buildRustCrateFunc
    , runTests
    , target ? defaultTarget
    } @ args:
      assert (builtins.isAttrs crateConfigs);
      assert (builtins.isString packageId);
      assert (builtins.isList features);
      assert (builtins.isAttrs target);
      assert (builtins.isBool runTests);
      let
        rootPackageId = packageId;
        mergedFeatures = mergePackageFeatures (
          args // {
            inherit rootPackageId;
            target = target // { test = runTests; };
          }
        );

        buildByPackageId = packageId: buildByPackageIdImpl packageId;

        # Memoize built packages so that reappearing packages are only built once.
        builtByPackageId =
          lib.mapAttrs (packageId: value: buildByPackageId packageId) crateConfigs;

        buildByPackageIdImpl = packageId:
          let
            features = mergedFeatures."${packageId}" or [];
            crateConfig' = crateConfigs."${packageId}";
            crateConfig =
              builtins.removeAttrs crateConfig' [ "resolvedDefaultFeatures" "devDependencies" ];
            devDependencies =
              lib.optionals
                (runTests && packageId == rootPackageId)
                (crateConfig'.devDependencies or []);
            dependencies =
              dependencyDerivations {
                inherit builtByPackageId features target;
                dependencies =
                  (crateConfig.dependencies or [])
                  ++ devDependencies;
              };
            buildDependencies =
              dependencyDerivations {
                inherit builtByPackageId features target;
                dependencies = crateConfig.buildDependencies or [];
              };

            filterEnabledDependenciesForThis = dependencies: filterEnabledDependencies {
              inherit dependencies features target;
            };

            dependenciesWithRenames =
              lib.filter (d: d ? "rename") (
                filterEnabledDependenciesForThis
                  (
                    (crateConfig.buildDependencies or [])
                    ++ (crateConfig.dependencies or [])
                    ++ devDependencies
                  )
              );

            crateRenames =
              builtins.listToAttrs
                (map (d: { name = d.name; value = d.rename; }) dependenciesWithRenames);
          in
            buildRustCrateFunc (
              crateConfig // {
                src = crateConfig.src or (
                  pkgs.fetchurl {
                    name = "${crateConfig.crateName}-${crateConfig.version}.tar.gz";
                    # https://www.pietroalbini.org/blog/downloading-crates-io/
                    # Not rate-limited, CDN URL.
                    url = "https://static.crates.io/crates/${crateConfig.crateName}/${crateConfig.crateName}-${crateConfig.version}.crate";
                    sha256 = crateConfig.sha256;
                  }
                );
                inherit features dependencies buildDependencies crateRenames release;
              }
            );
      in
        builtByPackageId;

  /* Returns the actual derivations for the given dependencies. */
  dependencyDerivations =
    { builtByPackageId
    , features
    , dependencies
    , target
    }:
      assert (builtins.isAttrs builtByPackageId);
      assert (builtins.isList features);
      assert (builtins.isList dependencies);
      assert (builtins.isAttrs target);
      let
        enabledDependencies = filterEnabledDependencies {
          inherit dependencies features target;
        };
        depDerivation = dependency: builtByPackageId.${dependency.packageId};
      in
        map depDerivation enabledDependencies;

  /* Returns a sanitized version of val with all values substituted that cannot
     be serialized as JSON.
  */
  sanitizeForJson = val:
    if builtins.isAttrs val
    then lib.mapAttrs (n: v: sanitizeForJson v) val
    else if builtins.isList val
    then builtins.map sanitizeForJson val
    else if builtins.isFunction val
    then "function"
    else val;

  /* Returns various tools to debug a crate. */
  debugCrate = { packageId, target ? defaultTarget }:
    assert (builtins.isString packageId);
    let
      debug = rec {
        # The built tree as passed to buildRustCrate.
        buildTree = buildRustCrateWithFeatures {
          buildRustCrateFunc = lib.id;
          inherit packageId;
        };
        sanitizedBuildTree = sanitizeForJson buildTree;
        dependencyTree = sanitizeForJson (
          buildRustCrateWithFeatures {
            buildRustCrateFunc = crate: {
              "01_crateName" = crate.crateName or false;
              "02_features" = crate.features or [];
              "03_dependencies" = crate.dependencies or [];
            };
            inherit packageId;
          }
        );
        mergedPackageFeatures = mergePackageFeatures {
          features = rootFeatures;
          inherit packageId target;
        };
        diffedDefaultPackageFeatures = diffDefaultPackageFeatures {
          inherit packageId target;
        };
      };
    in
      { internal = debug; };

  /* Returns differences between cargo default features and crate2nix default
     features.

     This is useful for verifying the feature resolution in crate2nix.
  */
  diffDefaultPackageFeatures =
    { crateConfigs ? crates
    , packageId
    , target
    }:
      assert (builtins.isAttrs crateConfigs);
      let
        prefixValues = prefix: lib.mapAttrs (n: v: { "${prefix}" = v; });
        mergedFeatures =
          prefixValues
            "crate2nix"
            (mergePackageFeatures { inherit crateConfigs packageId target; features = [ "default" ]; });
        configs = prefixValues "cargo" crateConfigs;
        combined = lib.foldAttrs (a: b: a // b) {} [ mergedFeatures configs ];
        onlyInCargo =
          builtins.attrNames
            (lib.filterAttrs (n: v: !(v ? "crate2nix") && (v ? "cargo")) combined);
        onlyInCrate2Nix =
          builtins.attrNames
            (lib.filterAttrs (n: v: (v ? "crate2nix") && !(v ? "cargo")) combined);
        differentFeatures = lib.filterAttrs
          (
            n: v:
              (v ? "crate2nix")
              && (v ? "cargo")
              && (v.crate2nix.features or []) != (v."cargo".resolved_default_features or [])
          )
          combined;
      in
        builtins.toJSON {
          inherit onlyInCargo onlyInCrate2Nix differentFeatures;
        };

  /* Returns an attrset mapping packageId to the list of enabled features.

     If multiple paths to a dependency enable different features, the
     corresponding feature sets are merged. Features in rust are additive.
  */
  mergePackageFeatures =
    { crateConfigs ? crates
    , packageId
    , rootPackageId ? packageId
    , features ? rootFeatures
    , dependencyPath ? [ crates.${packageId}.crateName ]
    , featuresByPackageId ? {}
    , target
      # Adds devDependencies to the crate with rootPackageId.
    , runTests ? false
    , ...
    } @ args:
      assert (builtins.isAttrs crateConfigs);
      assert (builtins.isString packageId);
      assert (builtins.isString rootPackageId);
      assert (builtins.isList features);
      assert (builtins.isList dependencyPath);
      assert (builtins.isAttrs featuresByPackageId);
      assert (builtins.isAttrs target);
      assert (builtins.isBool runTests);
      let
        crateConfig = crateConfigs."${packageId}" or (builtins.throw "Package not found: ${packageId}");
        expandedFeatures = expandFeatures (crateConfig.features or {}) features;

        depWithResolvedFeatures = dependency:
          let
            packageId = dependency.packageId;
            features = dependencyFeatures expandedFeatures dependency;
          in
            { inherit packageId features; };

        resolveDependencies = cache: path: dependencies:
          assert (builtins.isAttrs cache);
          assert (builtins.isList dependencies);
          let
            enabledDependencies = filterEnabledDependencies {
              inherit dependencies target;
              features = expandedFeatures;
            };
            directDependencies = map depWithResolvedFeatures enabledDependencies;
            foldOverCache = op: lib.foldl op cache directDependencies;
          in
            foldOverCache
              (
                cache: { packageId, features }:
                  let
                    cacheFeatures = cache.${packageId} or [];
                    combinedFeatures = sortedUnique (cacheFeatures ++ features);
                  in
                    if cache ? ${packageId} && cache.${packageId} == combinedFeatures
                    then cache
                    else mergePackageFeatures {
                      features = combinedFeatures;
                      featuresByPackageId = cache;
                      inherit crateConfigs packageId target runTests rootPackageId;
                    }
              );

        cacheWithSelf =
          let
            cacheFeatures = featuresByPackageId.${packageId} or [];
            combinedFeatures = sortedUnique (cacheFeatures ++ expandedFeatures);
          in
            featuresByPackageId // {
              "${packageId}" = combinedFeatures;
            };

        cacheWithDependencies =
          resolveDependencies cacheWithSelf "dep" (
            crateConfig.dependencies or []
            ++ lib.optionals
              (runTests && packageId == rootPackageId)
              (crateConfig.devDependencies or [])
          );

        cacheWithAll =
          resolveDependencies
            cacheWithDependencies "build"
            (crateConfig.buildDependencies or []);
      in
        cacheWithAll;

  /* Returns the enabled dependencies given the enabled features. */
  filterEnabledDependencies = { dependencies, features, target }:
    assert (builtins.isList dependencies);
    assert (builtins.isList features);
    assert (builtins.isAttrs target);

    lib.filter
      (
        dep:
          let
            targetFunc = dep.target or (features: true);
          in
            targetFunc { inherit features target; }
            && (
              !(dep.optional or false)
              || builtins.any (doesFeatureEnableDependency dep) features
            )
      )
      dependencies;

  /* Returns whether the given feature should enable the given dependency. */
  doesFeatureEnableDependency = { name, rename ? null, ... }: feature:
    let
      prefix = "${name}/";
      len = builtins.stringLength prefix;
      startsWithPrefix = builtins.substring 0 len feature == prefix;
    in
      (rename == null && feature == name)
      || (rename != null && rename == feature)
      || startsWithPrefix;

  /* Returns the expanded features for the given inputFeatures by applying the
     rules in featureMap.

     featureMap is an attribute set which maps feature names to lists of further
     feature names to enable in case this feature is selected.
  */
  expandFeatures = featureMap: inputFeatures:
    assert (builtins.isAttrs featureMap);
    assert (builtins.isList inputFeatures);
    let
      expandFeature = feature:
        assert (builtins.isString feature);
        [ feature ] ++ (expandFeatures featureMap (featureMap."${feature}" or []));
      outFeatures = lib.concatMap expandFeature inputFeatures;
    in
      sortedUnique outFeatures;

  /*
     Returns the actual features for the given dependency.

     features: The features of the crate that refers this dependency.
  */
  dependencyFeatures = features: dependency:
    assert (builtins.isList features);
    assert (builtins.isAttrs dependency);
    let
      defaultOrNil = if dependency.usesDefaultFeatures or true
      then [ "default" ]
      else [];
      explicitFeatures = dependency.features or [];
      additionalDependencyFeatures =
        let
          dependencyPrefix = (dependency.rename or dependency.name) + "/";
          dependencyFeatures =
            builtins.filter (f: lib.hasPrefix dependencyPrefix f) features;
        in
          builtins.map (lib.removePrefix dependencyPrefix) dependencyFeatures;
    in
      defaultOrNil ++ explicitFeatures ++ additionalDependencyFeatures;

  /* Sorts and removes duplicates from a list of strings. */
  sortedUnique = features:
    assert (builtins.isList features);
    assert (builtins.all builtins.isString features);
    let
      outFeaturesSet = lib.foldl (set: feature: set // { "${feature}" = 1; }) {} features;
      outFeaturesUnique = builtins.attrNames outFeaturesSet;
    in
      builtins.sort (a: b: a < b) outFeaturesUnique;

  deprecationWarning = message: value:
    if strictDeprecation
    then builtins.throw "strictDeprecation enabled, aborting: ${message}"
    else builtins.trace message value;

  #
  # crate2nix/default.nix (excerpt end)
  #

  };
}
