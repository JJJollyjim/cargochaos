
# This file was @generated by crate2nix 0.9.0-alpha.1 with the command:
#   "generate" "-o" "/home/jamie/Misc/cratesioout/solana-cli/v1.1.3.nix.tmp"
# See https://github.com/kolloch/crate2nix for more info.

{ nixpkgs ? <nixpkgs>
, pkgs ? import nixpkgs { config = {}; }
, lib ? pkgs.lib
, stdenv ? pkgs.stdenv
, buildRustCrate ? pkgs.buildRustCrate
  # This is used as the `crateOverrides` argument for `buildRustCrate`.
, defaultCrateOverrides ? pkgs.defaultCrateOverrides
  # The features to enable for the root_crate or the workspace_members.
, rootFeatures ? [ "default" ]
  # If true, throw errors instead of issueing deprecation warnings.
, strictDeprecation ? false
  # Whether to perform release builds: longer compile times, faster binaries.
, release ? true
  # Additional crate2nix configuration if it exists.
, crateConfig
  ? if builtins.pathExists ./crate-config.nix
    then pkgs.callPackage ./crate-config.nix {}
    else {}
}:

rec {
  #
  # "public" attributes that we attempt to keep stable with new versions of crate2nix.
  #

  rootCrate = rec {
    packageId = "solana-cli";

    # Use this attribute to refer to the derivation building your root crate package.
    # You can override the features with rootCrate.build.override { features = [ "default" "feature1" ... ]; }.
    build = internal.buildRustCrateWithFeatures {
      inherit packageId;
    };

    # Debug support which might change between releases.
    # File a bug if you depend on any for non-debug work!
    debug = internal.debugCrate { inherit packageId; };
  };
  # Refer your crate build derivation by name here.
  # You can override the features with
  # workspaceMembers."${crateName}".build.override { features = [ "default" "feature1" ... ]; }.
  workspaceMembers = {
    "solana-cli" = rec {
      packageId = "solana-cli";
      build = internal.buildRustCrateWithFeatures {
        packageId = "solana-cli";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
  };

  #
  # "internal" ("private") attributes that may change in every new version of crate2nix.
  #

  internal = rec {
    # Build and dependency information for crates.
    # Many of the fields are passed one-to-one to buildRustCrate.
    #
    # Noteworthy:
    # * `dependencies`/`buildDependencies`: similar to the corresponding fields for buildRustCrate.
    #   but with additional information which is used during dependency/feature resolution.
    # * `resolvedDependencies`: the selected default features reported by cargo - only included for debugging.
    # * `devDependencies` as of now not used by `buildRustCrate` but used to
    #   inject test dependencies into the build

    crates = {
      "adler32" = rec {
        crateName = "adler32";
        version = "1.0.4";
        edition = "2015";
        sha256 = "1hnan4fgmnidgn2k84hh2i67c3wp2c5iwd5hs61yi7gwwx1p6bjx";
        authors = [
          "Remi Rampin <remirampin@gmail.com>"
        ];
        
      };
      "aho-corasick" = rec {
        crateName = "aho-corasick";
        version = "0.7.10";
        edition = "2015";
        sha256 = "1nka9509afjgal6lpymn8w2lq11dmjwxs8yjcmzys966if5l05l7";
        libName = "aho_corasick";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "memchr";
            packageId = "memchr";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "memchr/use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "ansi_term" = rec {
        crateName = "ansi_term";
        version = "0.11.0";
        edition = "2015";
        sha256 = "16wpvrghvd0353584i1idnsgm0r3vchg8fyrm0x8ayv1rgvbljgf";
        authors = [
          "ogham@bsago.me"
          "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>"
          "Josh Triplett <josh@joshtriplett.org>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: (target."os" == "windows");
            features = [ "errhandlingapi" "consoleapi" "processenv" ];
          }
        ];
        
      };
      "ar" = rec {
        crateName = "ar";
        version = "0.6.2";
        edition = "2015";
        sha256 = "1i3vb75aarhipsazbnpdjvr17fgyz42rx5p6bimrs7ndzsrq35jp";
        authors = [
          "Matthew D. Steele <mdsteele@alum.mit.edu>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
        ];
        
      };
      "arrayref" = rec {
        crateName = "arrayref";
        version = "0.3.6";
        edition = "2015";
        sha256 = "0i6m1l3f73i0lf0cjdf5rh3xpvxydyhfbakq7xx7bkrp5qajgid4";
        authors = [
          "David Roundy <roundyd@physics.oregonstate.edu>"
        ];
        
      };
      "arrayvec" = rec {
        crateName = "arrayvec";
        version = "0.5.1";
        edition = "2018";
        sha256 = "1f5mca8kiiwhvhxd1mbnq68j6v6rk139sch567zwwzl6hs37vxyg";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "std" ];
        };
      };
      "ascii" = rec {
        crateName = "ascii";
        version = "0.7.1";
        edition = "2015";
        sha256 = "0l5d2cwfx4cm7fxhxmaqkhm0bbifpcwhmkv88hfrq64ck58xgrrs";
        authors = [
          "Thomas Bahn <thomas@thomas-bahn.net>"
          "Torbj√∏rn Birch Moltu <t.b.moltu@lyse.net>"
          "Simon Sapin <simon.sapin@exyr.org>"
        ];
        features = {
        };
      };
      "assert_matches" = rec {
        crateName = "assert_matches";
        version = "1.3.0";
        edition = "2015";
        sha256 = "1rar61v00gz2aniid0mylxcr4q98s6l77c3hvbszmg57kj10msvx";
        authors = [
          "Murarth <murarth@gmail.com>"
        ];
        
      };
      "atty" = rec {
        crateName = "atty";
        version = "0.2.14";
        edition = "2015";
        sha256 = "1s7yslcs6a28c5vz7jwj63lkfgyx8mx99fdirlhi9lbhhzhrpcyr";
        authors = [
          "softprops <d.tangren@gmail.com>"
        ];
        dependencies = [
          {
            name = "hermit-abi";
            packageId = "hermit-abi";
            target = { target, features }: (target."os" == "hermit");
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: target."unix";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "consoleapi" "processenv" "minwinbase" "minwindef" "winbase" ];
          }
        ];
        
      };
      "autocfg 0.1.7" = rec {
        crateName = "autocfg";
        version = "0.1.7";
        edition = "2015";
        sha256 = "1chwgimpx5z7xbag7krr9d8asxfqbh683qhgl9kn3hxk2l0djj8x";
        authors = [
          "Josh Stone <cuviper@gmail.com>"
        ];
        
      };
      "autocfg 1.0.0" = rec {
        crateName = "autocfg";
        version = "1.0.0";
        edition = "2015";
        sha256 = "17cv6pwb4q08s0ynpr4n8hv5299hcmhdgvdchzixfpw8y5qcgapq";
        authors = [
          "Josh Stone <cuviper@gmail.com>"
        ];
        
      };
      "backtrace" = rec {
        crateName = "backtrace";
        version = "0.3.46";
        edition = "2018";
        sha256 = "17hh1vrhfd01qpjilrdpy7q0lf2j2qv36achpg37q92rff4r5rmi";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "backtrace-sys";
            packageId = "backtrace-sys";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
          }
          {
            name = "rustc-demangle";
            packageId = "rustc-demangle";
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
        ];
        features = {
          "default" = [ "std" "libunwind" "libbacktrace" "dladdr" "dbghelp" ];
          "gimli-symbolize" = [ "addr2line" "findshlibs" "memmap" "goblin" ];
          "libbacktrace" = [ "backtrace-sys/backtrace-sys" ];
          "rustc-dep-of-std" = [ "backtrace-sys/rustc-dep-of-std" "cfg-if/rustc-dep-of-std" "core" "compiler_builtins" "libc/rustc-dep-of-std" "rustc-demangle/rustc-dep-of-std" ];
          "serialize-rustc" = [ "rustc-serialize" ];
          "serialize-serde" = [ "serde" ];
          "verify-winapi" = [ "winapi/dbghelp" "winapi/handleapi" "winapi/libloaderapi" "winapi/minwindef" "winapi/processthreadsapi" "winapi/synchapi" "winapi/winbase" "winapi/winnt" ];
        };
        resolvedDefaultFeatures = [ "backtrace-sys" "dbghelp" "default" "dladdr" "libbacktrace" "libunwind" "serde" "serialize-serde" "std" ];
      };
      "backtrace-sys" = rec {
        crateName = "backtrace-sys";
        version = "0.1.35";
        edition = "2015";
        sha256 = "066iviphi72mx9hd3njzsplk5v45jhi10mrccbbyij391ahsps3x";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];
        features = {
          "default" = [ "backtrace-sys" ];
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
        resolvedDefaultFeatures = [ "backtrace-sys" ];
      };
      "base32" = rec {
        crateName = "base32";
        version = "0.4.0";
        edition = "2015";
        sha256 = "1ykwx8jhksqxghfgyw2pzikzjf4n9wqm1x2ww5wqyn68ssf6dki3";
        authors = [
          "Andreas Ots <qrpth@qrpth.eu>"
          "Tim Dumol <tim@timdumol.com>"
        ];
        
      };
      "base64 0.10.1" = rec {
        crateName = "base64";
        version = "0.10.1";
        edition = "2015";
        sha256 = "13k6bvd3n6dm7jqn9x918w65dd9xhx454bqphbnv0bkd6n9dj98b";
        authors = [
          "Alice Maz <alice@alicemaz.com>"
          "Marshall Pierce <marshall@mpierce.org>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
        ];
        
      };
      "base64 0.11.0" = rec {
        crateName = "base64";
        version = "0.11.0";
        edition = "2018";
        sha256 = "1iqmims6yvr6vwzyy54qd672zw29ipjj17p8klcr578c9ajpw6xl";
        authors = [
          "Alice Maz <alice@alicemaz.com>"
          "Marshall Pierce <marshall@mpierce.org>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "base64 0.9.3" = rec {
        crateName = "base64";
        version = "0.9.3";
        edition = "2015";
        sha256 = "0hs62r35bgxslawyrn1vp9rmvrkkm76fqv0vqcwd048vs876r7a8";
        authors = [
          "Alice Maz <alice@alicemaz.com>"
          "Marshall Pierce <marshall@mpierce.org>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "safemem";
            packageId = "safemem";
          }
        ];
        
      };
      "bincode" = rec {
        crateName = "bincode";
        version = "1.2.1";
        edition = "2015";
        sha256 = "1gvxm3n67xv1874fwxmnlircdlphlk1hcw75ykrrnw9l2nky4lsp";
        authors = [
          "Ty Overby <ty@pre-alpha.com>"
          "Francesco Mazzoli <f@mazzo.li>"
          "David Tolnay <dtolnay@gmail.com>"
          "Daniel Griffen"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "serde";
            packageId = "serde";
          }
        ];
        features = {
        };
      };
      "bindgen" = rec {
        crateName = "bindgen";
        version = "0.53.2";
        edition = "2015";
        crateBin = [];
        sha256 = "1j78830czv9c7xy1fdqaqlfn2rjnrmsrfzkw1v5vhdd3d5m6vckb";
        authors = [
          "Jyun-Yan You <jyyou.tw@gmail.com>"
          "Emilio Cobos √Ålvarez <emilio@crisal.io>"
          "Nick Fitzgerald <fitzgen@gmail.com>"
          "The Servo project developers"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "cexpr";
            packageId = "cexpr";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "clang-sys";
            packageId = "clang-sys";
            features = [ "clang_6_0" ];
          }
          {
            name = "clap";
            packageId = "clap";
            optional = true;
          }
          {
            name = "env_logger";
            packageId = "env_logger 0.7.1";
            optional = true;
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "lazycell";
            packageId = "lazycell";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
            optional = true;
          }
          {
            name = "peeking_take_while";
            packageId = "peeking_take_while";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.10";
            usesDefaultFeatures = false;
          }
          {
            name = "quote";
            packageId = "quote 1.0.3";
            usesDefaultFeatures = false;
          }
          {
            name = "regex";
            packageId = "regex";
            usesDefaultFeatures = false;
            features = [ "std" "unicode" ];
          }
          {
            name = "rustc-hash";
            packageId = "rustc-hash";
          }
          {
            name = "shlex";
            packageId = "shlex";
          }
          {
            name = "which";
            packageId = "which";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "clap";
            packageId = "clap";
          }
          {
            name = "shlex";
            packageId = "shlex";
          }
        ];
        features = {
          "default" = [ "logging" "clap" "runtime" "which-rustfmt" ];
          "logging" = [ "env_logger" "log" ];
          "runtime" = [ "clang-sys/runtime" ];
          "static" = [ "clang-sys/static" ];
          "which-rustfmt" = [ "which" ];
        };
        resolvedDefaultFeatures = [ "clap" "default" "env_logger" "log" "logging" "runtime" "which" "which-rustfmt" ];
      };
      "bit-vec 0.4.4" = rec {
        crateName = "bit-vec";
        version = "0.4.4";
        edition = "2015";
        sha256 = "0pw902a8ail0k64a7092a8vngfzsq7xkj2r22hz6q1z62s5zzd02";
        authors = [
          "Alexis Beingessner <a.beingessner@gmail.com>"
        ];
        features = {
        };
      };
      "bit-vec 0.5.1" = rec {
        crateName = "bit-vec";
        version = "0.5.1";
        edition = "2015";
        sha256 = "1fyh8221s6cxlmng01v8v2ljhavzawqqs8r1xjc66ap5sjavx6zm";
        authors = [
          "Alexis Beingessner <a.beingessner@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "bitflags" = rec {
        crateName = "bitflags";
        version = "1.2.1";
        edition = "2015";
        sha256 = "14qnd5nq8p2almk79m4m8ydqhd413yaxsyjp5xd19g3mikzf47fg";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "blake2b_simd" = rec {
        crateName = "blake2b_simd";
        version = "0.5.10";
        edition = "2018";
        sha256 = "12icvk8ixlivv3jv5nyrg01sajp4s279zb1kmif0nfja4ms2vyyq";
        authors = [
          "Jack O'Connor"
        ];
        dependencies = [
          {
            name = "arrayref";
            packageId = "arrayref";
          }
          {
            name = "arrayvec";
            packageId = "arrayvec";
            usesDefaultFeatures = false;
          }
          {
            name = "constant_time_eq";
            packageId = "constant_time_eq";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "block-buffer 0.3.3" = rec {
        crateName = "block-buffer";
        version = "0.3.3";
        edition = "2015";
        sha256 = "1axki8f4rhnxvk6hlli4i53sgmi7c15ffryrv4757nzcp6cc4xm0";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "arrayref";
            packageId = "arrayref";
          }
          {
            name = "byte-tools";
            packageId = "byte-tools 0.2.0";
          }
        ];
        
      };
      "block-buffer 0.7.3" = rec {
        crateName = "block-buffer";
        version = "0.7.3";
        edition = "2015";
        sha256 = "12v8wizynqin0hqf140kmp9s38q223mp1b0hkqk8j5pk8720v560";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "block-padding";
            packageId = "block-padding";
          }
          {
            name = "byte-tools";
            packageId = "byte-tools 0.3.1";
          }
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
          }
          {
            name = "generic-array";
            packageId = "generic-array 0.12.3";
          }
        ];
        
      };
      "block-padding" = rec {
        crateName = "block-padding";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1xbkmysiz23vimd17rnsjpw9bgjxipwfslwyygqlkx4in3dxwygs";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "byte-tools";
            packageId = "byte-tools 0.3.1";
          }
        ];
        
      };
      "bloom" = rec {
        crateName = "bloom";
        version = "0.3.2";
        edition = "2015";
        sha256 = "1s3g7pmm98jkd4kg05yfkaadcl28qg3sa6iwd8vnavbd0pjwh2nh";
        authors = [
          "Nick Lanham <nick@afternight.org>"
        ];
        dependencies = [
          {
            name = "bit-vec";
            packageId = "bit-vec 0.4.4";
          }
        ];
        features = {
        };
      };
      "bs58" = rec {
        crateName = "bs58";
        version = "0.3.0";
        edition = "2018";
        sha256 = "1bkd77ic7ybm5mhy5hyv4j0pxiyzvykl8gmfxnwsd7rzd8jwsw5i";
        authors = [
          "Wim Looman <wim@nemo157.com>"
        ];
        features = {
          "check" = [ "sha2" ];
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "bstr" = rec {
        crateName = "bstr";
        version = "0.2.12";
        edition = "2015";
        sha256 = "0hazfback6i2k3vhhwyj8h46id3y58zxqh22pz46hj9r1zayd298";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "memchr";
            packageId = "memchr";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" "unicode" ];
          "serde1" = [ "std" "serde1-nostd" "serde/std" ];
          "serde1-nostd" = [ "serde" ];
          "std" = [ "memchr/use_std" ];
          "unicode" = [ "lazy_static" "regex-automata" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "bumpalo" = rec {
        crateName = "bumpalo";
        version = "3.2.1";
        edition = "2018";
        sha256 = "11silgpsnfv6ir7j2nh7a69564f92vq20k9ha7zcbynpiav9vbhj";
        authors = [
          "Nick Fitzgerald <fitzgen@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "bv" = rec {
        crateName = "bv";
        version = "0.11.1";
        edition = "2015";
        sha256 = "0h5kbl54fsccznfixw83xndbripw39y2qkqjwf709p75iqfvnd48";
        authors = [
          "Jesse A. Tov <jesse.tov@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
        ];
        buildDependencies = [
          {
            name = "feature-probe";
            packageId = "feature-probe";
          }
        ];
        
        resolvedDefaultFeatures = [ "serde" ];
      };
      "byte-tools 0.2.0" = rec {
        crateName = "byte-tools";
        version = "0.2.0";
        edition = "2015";
        sha256 = "0h2zxygfnn46akmgh8cdp4x6xy4kb0b45rzmj76rxa0j99bk432n";
        authors = [
          "The Rust-Crypto Project Developers"
        ];
        
      };
      "byte-tools 0.3.1" = rec {
        crateName = "byte-tools";
        version = "0.3.1";
        edition = "2015";
        sha256 = "1mqi29wsm8njpl51pfwr31wmpzs5ahlcb40wsjyd92l90ixcmdg3";
        authors = [
          "RustCrypto Developers"
        ];
        
      };
      "byteorder" = rec {
        crateName = "byteorder";
        version = "1.3.4";
        edition = "2015";
        sha256 = "1pkjfhgjnq898g1d38ygcfi0msg3m6756cwv0sgysj1d26p8mi08";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "i128" "std" ];
      };
      "bytes 0.4.12" = rec {
        crateName = "bytes";
        version = "0.4.12";
        edition = "2015";
        sha256 = "0768a55q2fsqdjsvcv98ndg9dq7w2g44dvq1avhwpxrdzbydyvr0";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "either";
            packageId = "either";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "iovec";
            packageId = "iovec";
          }
        ];
        features = {
          "i128" = [ "byteorder/i128" ];
        };
        resolvedDefaultFeatures = [ "either" ];
      };
      "bytes 0.5.4" = rec {
        crateName = "bytes";
        version = "0.5.4";
        edition = "2018";
        sha256 = "1q9r7si1l8vndg4n2ny2nv833ghp5vyqzk5indb9rmhd5ibaq2hk";
        authors = [
          "Carl Lerche <me@carllerche.com>"
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "bzip2" = rec {
        crateName = "bzip2";
        version = "0.3.3";
        edition = "2015";
        sha256 = "0fvfwanp42j1zpig880jhb5mc0na50bijmwd6211p77sy35w7ds2";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "bzip2-sys";
            packageId = "bzip2-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "tokio" = [ "tokio-io" "futures" ];
        };
      };
      "bzip2-sys" = rec {
        crateName = "bzip2-sys";
        version = "0.1.8+1.0.8";
        edition = "2015";
        sha256 = "0f1hv0b6ig30jxgc8khic0k5m6qh7l9n9b1p77lz0kq3qm0mnc05";
        libName = "bzip2_sys";
        libPath = "lib.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];
        
      };
      "cast" = rec {
        crateName = "cast";
        version = "0.2.3";
        edition = "2015";
        sha256 = "1c5z7zryj0zwnhdgs6rw5dfvnlwc1vm19jzrlgx5055alnwk952b";
        authors = [
          "Jorge Aparicio <jorge@japaric.io>"
        ];
        buildDependencies = [
          {
            name = "rustc_version";
            packageId = "rustc_version";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "cc" = rec {
        crateName = "cc";
        version = "1.0.49";
        edition = "2018";
        crateBin = [];
        sha256 = "03n2lj4kyyw9hz7wzfkkzc0xgrickwpnjdv4gi72fvxajbdbhl74";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "jobserver";
            packageId = "jobserver";
            optional = true;
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
            optional = true;
          }
        ];
        features = {
          "parallel" = [ "num_cpus" "jobserver" ];
        };
        resolvedDefaultFeatures = [ "jobserver" "num_cpus" "parallel" ];
      };
      "cexpr" = rec {
        crateName = "cexpr";
        version = "0.4.0";
        edition = "2018";
        sha256 = "09qd1k1mrhcqfhqmsz4y1bya9gcs29si7y3w96pqkgid4y2dpbpl";
        authors = [
          "Jethro Beekman <jethro@jbeekman.nl>"
        ];
        dependencies = [
          {
            name = "nom";
            packageId = "nom";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
        ];
        
      };
      "cfg-if" = rec {
        crateName = "cfg-if";
        version = "0.1.10";
        edition = "2018";
        sha256 = "08h80ihs74jcyp24cd75wwabygbbdgl05k6p5dmq8akbr78vv1a7";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
      "chrono" = rec {
        crateName = "chrono";
        version = "0.4.11";
        edition = "2015";
        sha256 = "1cmmxamkzzs36zncqjjr7qm7xkb6zyrkjslnlj3axdgqki84y2c0";
        authors = [
          "Kang Seonghoon <public+rust@mearie.org>"
          "Brandon W Maister <quodlibetor@gmail.com>"
        ];
        dependencies = [
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "time";
            packageId = "time";
            optional = true;
          }
        ];
        features = {
          "clock" = [ "time" "std" ];
          "default" = [ "clock" "std" ];
          "wasmbind" = [ "wasm-bindgen" "js-sys" ];
        };
        resolvedDefaultFeatures = [ "clock" "default" "serde" "std" "time" ];
      };
      "clang-sys" = rec {
        crateName = "clang-sys";
        version = "0.29.3";
        edition = "2015";
        sha256 = "02nibl74zbz5x693iy5vdbhnfckja47m7j1mp2bj7fjw3pgkfs7y";
        authors = [
          "Kyle Mayes <kyle@mayeses.com>"
        ];
        dependencies = [
          {
            name = "glob";
            packageId = "glob 0.3.0";
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
          }
          {
            name = "libloading";
            packageId = "libloading";
            optional = true;
          }
        ];
        buildDependencies = [
          {
            name = "glob";
            packageId = "glob 0.3.0";
          }
        ];
        features = {
          "clang_3_6" = [ "gte_clang_3_6" ];
          "clang_3_7" = [ "gte_clang_3_6" "gte_clang_3_7" ];
          "clang_3_8" = [ "gte_clang_3_6" "gte_clang_3_7" "gte_clang_3_8" ];
          "clang_3_9" = [ "gte_clang_3_6" "gte_clang_3_7" "gte_clang_3_8" "gte_clang_3_9" ];
          "clang_4_0" = [ "gte_clang_3_6" "gte_clang_3_7" "gte_clang_3_8" "gte_clang_3_9" "gte_clang_4_0" ];
          "clang_5_0" = [ "gte_clang_3_6" "gte_clang_3_7" "gte_clang_3_8" "gte_clang_3_9" "gte_clang_4_0" "gte_clang_5_0" ];
          "clang_6_0" = [ "gte_clang_3_6" "gte_clang_3_7" "gte_clang_3_8" "gte_clang_3_9" "gte_clang_4_0" "gte_clang_5_0" "gte_clang_6_0" ];
          "clang_7_0" = [ "gte_clang_3_6" "gte_clang_3_7" "gte_clang_3_8" "gte_clang_3_9" "gte_clang_4_0" "gte_clang_5_0" "gte_clang_6_0" "gte_clang_7_0" ];
          "clang_8_0" = [ "gte_clang_3_6" "gte_clang_3_7" "gte_clang_3_8" "gte_clang_3_9" "gte_clang_4_0" "gte_clang_5_0" "gte_clang_6_0" "gte_clang_7_0" "gte_clang_8_0" ];
          "clang_9_0" = [ "gte_clang_3_6" "gte_clang_3_7" "gte_clang_3_8" "gte_clang_3_9" "gte_clang_4_0" "gte_clang_5_0" "gte_clang_6_0" "gte_clang_7_0" "gte_clang_8_0" "gte_clang_9_0" ];
          "runtime" = [ "libloading" ];
        };
        resolvedDefaultFeatures = [ "clang_6_0" "gte_clang_3_6" "gte_clang_3_7" "gte_clang_3_8" "gte_clang_3_9" "gte_clang_4_0" "gte_clang_5_0" "gte_clang_6_0" "libloading" "runtime" ];
      };
      "clap" = rec {
        crateName = "clap";
        version = "2.33.0";
        edition = "2015";
        sha256 = "1nf6ld3bims1n5vfzhkvcb55pdzh04bbhzf8nil5vvw05nxzarsh";
        authors = [
          "Kevin K. <kbknapp@gmail.com>"
        ];
        dependencies = [
          {
            name = "ansi_term";
            packageId = "ansi_term";
            optional = true;
            target = { target, features }: (!target."windows");
          }
          {
            name = "atty";
            packageId = "atty";
            optional = true;
          }
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "strsim";
            packageId = "strsim";
            optional = true;
          }
          {
            name = "textwrap";
            packageId = "textwrap";
          }
          {
            name = "unicode-width";
            packageId = "unicode-width";
          }
          {
            name = "vec_map";
            packageId = "vec_map";
            optional = true;
          }
        ];
        features = {
          "color" = [ "ansi_term" "atty" ];
          "default" = [ "suggestions" "color" "vec_map" ];
          "doc" = [ "yaml" ];
          "lints" = [ "clippy" ];
          "suggestions" = [ "strsim" ];
          "wrap_help" = [ "term_size" "textwrap/term_size" ];
          "yaml" = [ "yaml-rust" ];
        };
        resolvedDefaultFeatures = [ "ansi_term" "atty" "color" "default" "strsim" "suggestions" "vec_map" ];
      };
      "clear_on_drop" = rec {
        crateName = "clear_on_drop";
        version = "0.2.3";
        edition = "2015";
        sha256 = "05qxifm7pkms9gnvr50j67x59m3br5fg68yfcrmv9zr7w40nh9wp";
        authors = [
          "Cesar Eduardo Barros <cesarb@cesarb.eti.br>"
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];
        features = {
          "nightly" = [ "no_cc" ];
        };
      };
      "clicolors-control" = rec {
        crateName = "clicolors-control";
        version = "1.0.1";
        edition = "2015";
        sha256 = "07klix8nbpwk0cg1k4h0kkiijm1jxvrzndqdkr7dqr6xvkjjw24h";
        authors = [
          "Armin Ronacher <armin.ronacher@active-4.com>"
        ];
        dependencies = [
          {
            name = "atty";
            packageId = "atty";
            target = { target, features }: target."windows";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "winbase" "handleapi" "consoleapi" "processenv" ];
          }
        ];
        features = {
          "default" = [ "terminal_autoconfig" ];
        };
        resolvedDefaultFeatures = [ "default" "terminal_autoconfig" ];
      };
      "cloudabi" = rec {
        crateName = "cloudabi";
        version = "0.0.3";
        edition = "2015";
        sha256 = "0kxcg83jlihy0phnd2g8c2c303px3l2p3pkjz357ll6llnd5pz6x";
        libPath = "cloudabi.rs";
        authors = [
          "Nuxi (https://nuxi.nl/) and contributors"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
            optional = true;
          }
        ];
        features = {
          "default" = [ "bitflags" ];
        };
        resolvedDefaultFeatures = [ "bitflags" "default" ];
      };
      "colored" = rec {
        crateName = "colored";
        version = "1.9.3";
        edition = "2015";
        sha256 = "0nbc1czs512h1k696y7glv1kjrb2b914zpxraic6q5fgv80wizzl";
        authors = [
          "Thomas Wickham <mackwic@gmail.com>"
        ];
        dependencies = [
          {
            name = "atty";
            packageId = "atty";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            usesDefaultFeatures = false;
            target = { target, features }: target."windows";
            features = [ "consoleapi" "processenv" "winbase" ];
          }
        ];
        features = {
        };
      };
      "combine" = rec {
        crateName = "combine";
        version = "2.5.2";
        edition = "2015";
        sha256 = "0z79dfx50l6czhqyfgm94wxkpgp5zyk7ajqzfr2x7j67k5daci8n";
        authors = [
          "Markus Westerlind <marwes91@gmail.com>"
        ];
        dependencies = [
          {
            name = "ascii";
            packageId = "ascii";
          }
          {
            name = "byteorder";
            packageId = "byteorder";
          }
        ];
        features = {
          "doc" = [ "regex" ];
        };
      };
      "console" = rec {
        crateName = "console";
        version = "0.10.0";
        edition = "2018";
        sha256 = "1378xzw7wq1n0wfwffyir5yg9fmz088p2qij34dih1zj4f0a4a37";
        authors = [
          "Armin Ronacher <armin.ronacher@active-4.com>"
        ];
        dependencies = [
          {
            name = "clicolors-control";
            packageId = "clicolors-control";
          }
          {
            name = "encode_unicode";
            packageId = "encode_unicode";
            target = { target, features }: target."windows";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "regex";
            packageId = "regex";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "termios";
            packageId = "termios";
            target = { target, features }: target."unix";
          }
          {
            name = "unicode-width";
            packageId = "unicode-width";
            optional = true;
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "winbase" "winuser" "consoleapi" "processenv" "wincon" ];
          }
        ];
        features = {
          "ansi-parsing" = [ "regex" ];
          "default" = [ "unicode-width" "ansi-parsing" ];
        };
        resolvedDefaultFeatures = [ "ansi-parsing" "default" "regex" "unicode-width" ];
      };
      "constant_time_eq" = rec {
        crateName = "constant_time_eq";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1g3vp04qzmk6cpzrd19yci6a95m7ap6wy7wkwgiy2pjklklrfl14";
        authors = [
          "Cesar Eduardo Barros <cesarb@cesarb.eti.br>"
        ];
        
      };
      "core-foundation" = rec {
        crateName = "core-foundation";
        version = "0.7.0";
        edition = "2015";
        sha256 = "0wbias8f0m5kyn2pcksi0h58fdslams6nmf16w78fgn42dx4rljp";
        authors = [
          "The Servo Project Developers"
        ];
        dependencies = [
          {
            name = "core-foundation-sys";
            packageId = "core-foundation-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "mac_os_10_7_support" = [ "core-foundation-sys/mac_os_10_7_support" ];
          "mac_os_10_8_features" = [ "core-foundation-sys/mac_os_10_8_features" ];
          "with-chrono" = [ "chrono" ];
          "with-uuid" = [ "uuid" ];
        };
      };
      "core-foundation-sys" = rec {
        crateName = "core-foundation-sys";
        version = "0.7.0";
        edition = "2015";
        sha256 = "1b5qfnnmg49sawwfsb0c0wbj81bqi7h7lh68pmhbidf0jjs1m9xk";
        authors = [
          "The Servo Project Developers"
        ];
        features = {
        };
      };
      "core_affinity" = rec {
        crateName = "core_affinity";
        version = "0.5.10";
        edition = "2015";
        sha256 = "07qpwyxps4gp3gci2p6c5h4cmcql7551bp91qgbv0ky3bh8h72kz";
        authors = [
          "Philip Woods <elzairthesorcerer@gmail.com>"
        ];
        dependencies = [
          {
            name = "kernel32-sys";
            packageId = "kernel32-sys";
            target = { target, features }: (target."os" == "windows");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: ((target."os" == "linux") || (target."os" == "macos"));
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
            target = { target, features }: (target."os" == "windows");
          }
        ];
        
      };
      "crc32fast" = rec {
        crateName = "crc32fast";
        version = "1.2.0";
        edition = "2015";
        sha256 = "1c9dhkvf3brrzzplcijaywxi2w8wv5578i0ryhcm7x8dmzi5s4ms";
        authors = [
          "Sam Rijs <srijs@airpost.net>"
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "criterion-stats" = rec {
        crateName = "criterion-stats";
        version = "0.3.0";
        edition = "2015";
        sha256 = "1ln9w47a8821gmykw1mmxmrwqq4k1nxk9q0cw4ripnjanx6gjz9q";
        authors = [
          "Jorge Aparicio <japaricious@gmail.com>"
          "Brook Heisler <brookheisler@gmail.com>"
        ];
        dependencies = [
          {
            name = "cast";
            packageId = "cast";
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
          {
            name = "rand";
            packageId = "rand 0.4.6";
          }
          {
            name = "thread-scoped";
            packageId = "thread-scoped";
          }
        ];
        
      };
      "crossbeam-channel" = rec {
        crateName = "crossbeam-channel";
        version = "0.4.2";
        edition = "2015";
        sha256 = "0qd05n5bcwafkmbzq1lspwrfi29xnzlw46qarg1sl0lwj68qdvfc";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils";
          }
          {
            name = "maybe-uninit";
            packageId = "maybe-uninit";
          }
        ];
        
      };
      "crossbeam-deque" = rec {
        crateName = "crossbeam-deque";
        version = "0.7.3";
        edition = "2015";
        sha256 = "11c2c0x5grdba3ah3g94yn6b8s47xi8qwm85h8hq5vmf9nbsy0lz";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "crossbeam-epoch";
            packageId = "crossbeam-epoch";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils";
          }
          {
            name = "maybe-uninit";
            packageId = "maybe-uninit";
          }
        ];
        
      };
      "crossbeam-epoch" = rec {
        crateName = "crossbeam-epoch";
        version = "0.8.2";
        edition = "2015";
        sha256 = "1knsf0zz7rgzxn0nwz5gajjcrivxpw3zrdcp946gdhdgr9sd53h5";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils";
            usesDefaultFeatures = false;
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
            optional = true;
          }
          {
            name = "maybe-uninit";
            packageId = "maybe-uninit";
          }
          {
            name = "memoffset";
            packageId = "memoffset";
          }
          {
            name = "scopeguard";
            packageId = "scopeguard";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.0";
          }
        ];
        features = {
          "alloc" = [ "crossbeam-utils/alloc" ];
          "default" = [ "std" ];
          "nightly" = [ "crossbeam-utils/nightly" ];
          "std" = [ "crossbeam-utils/std" "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" ];
      };
      "crossbeam-queue" = rec {
        crateName = "crossbeam-queue";
        version = "0.2.1";
        edition = "2015";
        sha256 = "1nwkjh185bdwjrv1zj2g7an9lglv8sp4459268m4fwvi3v5fx5f6";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "crossbeam-utils/alloc" ];
          "default" = [ "std" ];
          "std" = [ "crossbeam-utils/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "crossbeam-utils" = rec {
        crateName = "crossbeam-utils";
        version = "0.7.2";
        edition = "2015";
        sha256 = "1a31wbrda1320gj2a6az1lin2d34xfc3xf88da4c17qy5lxcgiy3";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
            optional = true;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.0";
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" ];
      };
      "crypto-mac" = rec {
        crateName = "crypto-mac";
        version = "0.7.0";
        edition = "2015";
        sha256 = "1rbrq6qy9dl0pj4ym2zy33miaaa8vpzdss60p9bdb58xy46l0d24";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "generic-array";
            packageId = "generic-array 0.12.3";
          }
          {
            name = "subtle";
            packageId = "subtle 1.0.0";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "dev" = [ "blobby" ];
        };
      };
      "ct-logs" = rec {
        crateName = "ct-logs";
        version = "0.6.0";
        edition = "2018";
        sha256 = "04wiwiv4ghni3x2vni3z711mlz0ndqvh04vmdkbw3nr7zbsqcdjd";
        authors = [
          "Joseph Birr-Pixton <jpixton@gmail.com>"
        ];
        dependencies = [
          {
            name = "sct";
            packageId = "sct";
          }
        ];
        
      };
      "ctrlc" = rec {
        crateName = "ctrlc";
        version = "3.1.4";
        edition = "2015";
        sha256 = "19qps8xw9vpsssrhn6rn46scx66gn0811kinjqf4ryprvy3acjvs";
        authors = [
          "Antti Ker√§nen <detegr@gmail.com>"
        ];
        dependencies = [
          {
            name = "nix";
            packageId = "nix";
            target = { target, features }: target."unix";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "consoleapi" "handleapi" "synchapi" "winbase" ];
          }
        ];
        devDependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = {target, features}: target."windows";
            features = [ "fileapi" "processenv" "winnt" ];
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "termination" ];
      };
      "curve25519-dalek" = rec {
        crateName = "curve25519-dalek";
        version = "1.2.3";
        edition = "2015";
        sha256 = "0vf69kr71wvr3cpdhdn4zm5arh5p71hlacxhan5zikahp8qcszcb";
        authors = [
          "Isis Lovecruft <isis@patternsinthevoid.net>"
          "Henry de Valence <hdevalence@hdevalence.ca>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
          {
            name = "clear_on_drop";
            packageId = "clear_on_drop";
          }
          {
            name = "digest";
            packageId = "digest 0.8.1";
            usesDefaultFeatures = false;
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1";
            usesDefaultFeatures = false;
          }
          {
            name = "subtle";
            packageId = "subtle 2.2.2";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
          {
            name = "clear_on_drop";
            packageId = "clear_on_drop";
          }
          {
            name = "digest";
            packageId = "digest 0.8.1";
            usesDefaultFeatures = false;
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1";
            usesDefaultFeatures = false;
          }
          {
            name = "subtle";
            packageId = "subtle 2.2.2";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "avx2_backend" = [ "simd_backend" ];
          "default" = [ "std" "u64_backend" ];
          "nightly" = [ "subtle/nightly" "clear_on_drop/nightly" ];
          "simd_backend" = [ "nightly" "u64_backend" "packed_simd" ];
          "std" = [ "alloc" "subtle/std" "rand_core/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" "u64_backend" ];
      };
      "dialoguer" = rec {
        crateName = "dialoguer";
        version = "0.5.0";
        edition = "2015";
        sha256 = "1dh3z5brmiqwc970riwd4n2ab15d6g5gcifiadrcjky0s8jnwqcl";
        authors = [
          "Armin Ronacher <armin.ronacher@active-4.com>"
        ];
        dependencies = [
          {
            name = "console";
            packageId = "console";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "tempfile";
            packageId = "tempfile";
          }
        ];
        
      };
      "digest 0.7.6" = rec {
        crateName = "digest";
        version = "0.7.6";
        edition = "2015";
        sha256 = "142vdpvkqlqk9s1dcgpqb2wz76n5a39gjnk68p0zkflc58j75c03";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "generic-array";
            packageId = "generic-array 0.9.0";
          }
        ];
        features = {
        };
      };
      "digest 0.8.1" = rec {
        crateName = "digest";
        version = "0.8.1";
        edition = "2015";
        sha256 = "1madjl27f3kj5ql7kwgvb9c8b7yb7bv7yfgx7rqzj4i3fp4cil7k";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "generic-array";
            packageId = "generic-array 0.12.3";
          }
        ];
        features = {
          "dev" = [ "blobby" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "dir-diff" = rec {
        crateName = "dir-diff";
        version = "0.3.2";
        edition = "2015";
        sha256 = "02saicdxgdbpg5bcyp00z9v9wrldksni118jn95h0bkygmyl0q18";
        authors = [
          "steveklabnik <steve@steveklabnik.com>"
        ];
        dependencies = [
          {
            name = "walkdir";
            packageId = "walkdir";
          }
        ];
        
      };
      "dirs" = rec {
        crateName = "dirs";
        version = "2.0.2";
        edition = "2015";
        sha256 = "1qymhyq7w7wlf1dirq6gsnabdyzg6yi2yyxkx6c4ldlkbjdaibhk";
        authors = [
          "Simon Ochsenreither <simon@ochsenreither.de>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "dirs-sys";
            packageId = "dirs-sys";
          }
        ];
        
      };
      "dirs-sys" = rec {
        crateName = "dirs-sys";
        version = "0.3.4";
        edition = "2015";
        sha256 = "0yyykdcmbc476z1v9m4z5jb8y91dw6kgzpkiqi2ig07xx0yv585g";
        authors = [
          "Simon Ochsenreither <simon@ochsenreither.de>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "redox_users";
            packageId = "redox_users";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "knownfolders" "objbase" "shlobj" "winbase" "winerror" ];
          }
        ];
        
      };
      "dlopen" = rec {
        crateName = "dlopen";
        version = "0.1.8";
        edition = "2015";
        sha256 = "0dq9m3fqf194vaw1ldn3c5ssdj255l5dag2qd2z9ljl1kz9hms3i";
        authors = [
          "Szymon Wieloch <szymon.wieloch@gmail.com>"
        ];
        dependencies = [
          {
            name = "dlopen_derive";
            packageId = "dlopen_derive";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "winnt" "minwindef" "winerror" "libloaderapi" "errhandlingapi" "dbghelp" "processthreadsapi" "basetsd" ];
          }
        ];
        devDependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        
      };
      "dlopen_derive" = rec {
        crateName = "dlopen_derive";
        version = "0.1.4";
        edition = "2015";
        sha256 = "10f58rcw1xnm5b5xg735ws0cvsz8qzfcigcw1zm1rn7vn7hxjdpj";
        procMacro = true;
        authors = [
          "Szymon Wieloch <szymon.wieloch@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "quote";
            packageId = "quote 0.6.13";
          }
          {
            name = "syn";
            packageId = "syn 0.15.44";
          }
        ];
        
      };
      "dtoa" = rec {
        crateName = "dtoa";
        version = "0.4.5";
        edition = "2015";
        sha256 = "18qycvcp0vaqzw0j784ansbxgs39l54ini9v719cy2cs3ghsjn23";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        
      };
      "ed25519-dalek" = rec {
        crateName = "ed25519-dalek";
        version = "1.0.0-pre.1";
        edition = "2015";
        sha256 = "11jbh8cr33x0hysmb5ybrck0v2imh6hkzpl83m7gnqgpgv7np5c1";
        authors = [
          "isis lovecruft <isis@patternsinthevoid.net>"
        ];
        dependencies = [
          {
            name = "clear_on_drop";
            packageId = "clear_on_drop";
          }
          {
            name = "curve25519-dalek";
            packageId = "curve25519-dalek";
            usesDefaultFeatures = false;
          }
          {
            name = "failure";
            packageId = "failure";
            usesDefaultFeatures = false;
          }
          {
            name = "rand";
            packageId = "rand 0.6.5";
            features = [ "i128_support" ];
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
          }
          {
            name = "sha2";
            packageId = "sha2 0.8.1";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "curve25519-dalek/alloc" ];
          "asm" = [ "sha2/asm" ];
          "avx2_backend" = [ "curve25519-dalek/avx2_backend" ];
          "default" = [ "std" "u64_backend" ];
          "nightly" = [ "curve25519-dalek/nightly" "rand/nightly" "clear_on_drop/nightly" ];
          "std" = [ "curve25519-dalek/std" "rand/std" "sha2/std" ];
          "u32_backend" = [ "curve25519-dalek/u32_backend" ];
          "u64_backend" = [ "curve25519-dalek/u64_backend" ];
          "yolocrypto" = [ "curve25519-dalek/yolocrypto" ];
        };
        resolvedDefaultFeatures = [ "default" "serde" "std" "u64_backend" ];
      };
      "either" = rec {
        crateName = "either";
        version = "1.5.3";
        edition = "2015";
        sha256 = "1qyz1b1acad6w0k5928jw5zaq900zhsk7p8dlcp4hh61w4f6n7xv";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
      "elfkit" = rec {
        crateName = "elfkit";
        version = "0.0.6";
        edition = "2015";
        crateBin = [];
        sha256 = "1lpccsk6qls2bi8g2n1h2xw597bffb83i1ig1b460wval7nq5w82";
        authors = [
          "Arvid E. Picciani <aep@exys.org>"
        ];
        dependencies = [
          {
            name = "ar";
            packageId = "ar";
          }
          {
            name = "bit-vec";
            packageId = "bit-vec 0.5.1";
          }
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "bloom";
            packageId = "bloom";
          }
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "clap";
            packageId = "clap";
          }
          {
            name = "colored";
            packageId = "colored";
          }
          {
            name = "enum-primitive-derive";
            packageId = "enum-primitive-derive";
          }
          {
            name = "env_logger";
            packageId = "env_logger 0.5.13";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "glob";
            packageId = "glob 0.2.11";
          }
          {
            name = "indexmap";
            packageId = "indexmap";
          }
          {
            name = "itertools";
            packageId = "itertools 0.7.11";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
          }
          {
            name = "pretty_env_logger";
            packageId = "pretty_env_logger";
          }
          {
            name = "rayon";
            packageId = "rayon";
          }
          {
            name = "sha2";
            packageId = "sha2 0.7.1";
          }
          {
            name = "tempfile";
            packageId = "tempfile";
          }
        ];
        
      };
      "encode_unicode" = rec {
        crateName = "encode_unicode";
        version = "0.3.6";
        edition = "2015";
        sha256 = "07w3vzrhxh9lpjgsg2y5bwzfar2aq35mdznvcp3zjl0ssj7d4mx3";
        authors = [
          "Torbj√∏rn Birch Moltu <t.b.moltu@lyse.net>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "encoding_rs" = rec {
        crateName = "encoding_rs";
        version = "0.8.22";
        edition = "2015";
        sha256 = "0a5wckbnpjjgxvvycahy5vw31br7x2xxgylxc0qi837ylzx073fd";
        authors = [
          "Henri Sivonen <hsivonen@hsivonen.fi>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
        ];
        features = {
          "fast-legacy-encode" = [ "fast-hangul-encode" "fast-hanja-encode" "fast-kanji-encode" "fast-gb-hanzi-encode" "fast-big5-hanzi-encode" ];
          "simd-accel" = [ "packed_simd" "packed_simd/into_bits" ];
        };
      };
      "enum-primitive-derive" = rec {
        crateName = "enum-primitive-derive";
        version = "0.1.2";
        edition = "2015";
        sha256 = "1p8jg302b0sv2sw2y3r4cdgsz2zyrdx673f7r1j1hb661r90xfg2";
        procMacro = true;
        authors = [
          "Doug Goldstein <cardoe@cardoe.com>"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits 0.1.43";
          }
          {
            name = "quote";
            packageId = "quote 0.3.15";
          }
          {
            name = "syn";
            packageId = "syn 0.11.11";
          }
        ];
        
      };
      "env_logger 0.5.13" = rec {
        crateName = "env_logger";
        version = "0.5.13";
        edition = "2015";
        sha256 = "0f0c4i4c65jh8lci0afl5yg74ac0lbnpxcp81chj114zwg9a9c0m";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "atty";
            packageId = "atty";
          }
          {
            name = "humantime";
            packageId = "humantime 1.3.0";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
            features = [ "std" ];
          }
          {
            name = "regex";
            packageId = "regex";
            optional = true;
          }
          {
            name = "termcolor";
            packageId = "termcolor";
          }
        ];
        features = {
          "default" = [ "regex" ];
        };
        resolvedDefaultFeatures = [ "default" "regex" ];
      };
      "env_logger 0.7.1" = rec {
        crateName = "env_logger";
        version = "0.7.1";
        edition = "2018";
        sha256 = "0djx8h8xfib43g5w94r1m1mkky5spcw4wblzgnhiyg5vnfxknls4";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "atty";
            packageId = "atty";
            optional = true;
          }
          {
            name = "humantime";
            packageId = "humantime 1.3.0";
            optional = true;
          }
          {
            name = "log";
            packageId = "log 0.4.8";
            features = [ "std" ];
          }
          {
            name = "regex";
            packageId = "regex";
            optional = true;
          }
          {
            name = "termcolor";
            packageId = "termcolor";
            optional = true;
          }
        ];
        features = {
          "default" = [ "termcolor" "atty" "humantime" "regex" ];
        };
        resolvedDefaultFeatures = [ "atty" "default" "humantime" "regex" "termcolor" ];
      };
      "failure" = rec {
        crateName = "failure";
        version = "0.1.7";
        edition = "2015";
        sha256 = "0js6i6mb42q1g6q3csfbmi6q40s64k96705xbim0d8zg44j9qlmq";
        authors = [
          "Without Boats <boats@mozilla.com>"
        ];
        dependencies = [
          {
            name = "backtrace";
            packageId = "backtrace";
            optional = true;
          }
          {
            name = "failure_derive";
            packageId = "failure_derive";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" "derive" ];
          "derive" = [ "failure_derive" ];
          "std" = [ "backtrace" ];
        };
        resolvedDefaultFeatures = [ "backtrace" "default" "derive" "failure_derive" "std" ];
      };
      "failure_derive" = rec {
        crateName = "failure_derive";
        version = "0.1.7";
        edition = "2015";
        sha256 = "0cfjz0c9szqpxn43b2r722p6m3swzxj7aj6xhqw23ml7h8y762h3";
        procMacro = true;
        authors = [
          "Without Boats <woboats@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.10";
          }
          {
            name = "quote";
            packageId = "quote 1.0.3";
          }
          {
            name = "syn";
            packageId = "syn 1.0.17";
          }
          {
            name = "synstructure";
            packageId = "synstructure";
          }
        ];
        features = {
        };
      };
      "fake-simd" = rec {
        crateName = "fake-simd";
        version = "0.1.2";
        edition = "2015";
        sha256 = "1vfylvk4va2ivqx85603lyqqp0zk52cgbs4n5nfbbbqx577qm2p8";
        authors = [
          "The Rust-Crypto Project Developers"
        ];
        
      };
      "fast-math" = rec {
        crateName = "fast-math";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0rldjkc2wcqwp9ik9czdmq7wz0xc2v3b3qqg6l8j1z6d8qhjjr94";
        authors = [
          "Huon Wilson <dbau.pp@gmail.com>"
        ];
        dependencies = [
          {
            name = "ieee754";
            packageId = "ieee754";
          }
        ];
        features = {
        };
      };
      "feature-probe" = rec {
        crateName = "feature-probe";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1nhif9zpr2f17gagf0qb0v914wc3jr9sfjzvnpi7b7pcs73ksnl3";
        authors = [
          "Jesse A. Tov <jesse.tov@gmail.com>"
        ];
        
      };
      "filetime" = rec {
        crateName = "filetime";
        version = "0.2.9";
        edition = "2018";
        sha256 = "0pjaa1qz4crlfxqvpgf0gqp9mx3ih4xjc7fi0518x62c00wgr7pm";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "fileapi" "minwindef" "winbase" ];
          }
        ];
        
      };
      "flate2" = rec {
        crateName = "flate2";
        version = "1.0.14";
        edition = "2018";
        sha256 = "0hlb2zmn5ixrgr0i1qvrd3a7j4fpp002d0kddn2hm7hjj49z9zrc";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "crc32fast";
            packageId = "crc32fast";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "miniz_oxide";
            packageId = "miniz_oxide";
            optional = true;
          }
          {
            name = "miniz_oxide";
            packageId = "miniz_oxide";
            target = { target, features }: ((target."arch" == "wasm32") && (!(target."os" == "emscripten")));
          }
        ];
        features = {
          "cloudflare_zlib" = [ "any_zlib" "cloudflare-zlib-sys" ];
          "default" = [ "rust_backend" ];
          "rust_backend" = [ "miniz_oxide" ];
          "tokio" = [ "tokio-io" "futures" ];
          "zlib" = [ "any_zlib" "libz-sys" ];
        };
        resolvedDefaultFeatures = [ "default" "miniz_oxide" "rust_backend" ];
      };
      "fnv" = rec {
        crateName = "fnv";
        version = "1.0.6";
        edition = "2015";
        sha256 = "1ww56bi1r5b8id3ns9j3qxbi7w5h005rzhiryy0zi9h97raqbb9g";
        libPath = "lib.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        
      };
      "foreign-types" = rec {
        crateName = "foreign-types";
        version = "0.3.2";
        edition = "2015";
        sha256 = "1cgk0vyd7r45cj769jym4a6s7vwshvd0z4bqrb92q1fwibmkkwzn";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = [
          {
            name = "foreign-types-shared";
            packageId = "foreign-types-shared";
          }
        ];
        
      };
      "foreign-types-shared" = rec {
        crateName = "foreign-types-shared";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0jxgzd04ra4imjv8jgkmdq59kj8fsz6w4zxsbmlai34h26225c00";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        
      };
      "fs_extra" = rec {
        crateName = "fs_extra";
        version = "1.1.0";
        edition = "2015";
        sha256 = "0x6675wdhsx277k1k1235jwcv38naf20d8kwrk948ds26hh4lajz";
        authors = [
          "Denis Kurilenko <webdesus@gmail.com>"
        ];
        
      };
      "fuchsia-cprng" = rec {
        crateName = "fuchsia-cprng";
        version = "0.1.1";
        edition = "2018";
        sha256 = "1fnkqrbz7ixxzsb04bsz9p0zzazanma8znfdqjvh39n14vapfvx0";
        authors = [
          "Erick Tryzelaar <etryzelaar@google.com>"
        ];
        
      };
      "fuchsia-zircon" = rec {
        crateName = "fuchsia-zircon";
        version = "0.3.3";
        edition = "2015";
        sha256 = "10jxc5ks1x06gpd0xg51kcjrxr35nj6qhx2zlc5n7bmskv3675rf";
        authors = [
          "Raph Levien <raph@google.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "fuchsia-zircon-sys";
            packageId = "fuchsia-zircon-sys";
          }
        ];
        
      };
      "fuchsia-zircon-sys" = rec {
        crateName = "fuchsia-zircon-sys";
        version = "0.3.3";
        edition = "2015";
        sha256 = "19zp2085qsyq2bh1gvcxq1lb8w6v6jj9kbdkhpdjrl95fypakjix";
        authors = [
          "Raph Levien <raph@google.com>"
        ];
        
      };
      "futures" = rec {
        crateName = "futures";
        version = "0.1.29";
        edition = "2015";
        sha256 = "1vq3cw37knnd0afw3rcjzh71i2l01v5m4ysinrrqdvnn2ql0z60v";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "use_std" "with-deprecated" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" "with-deprecated" ];
      };
      "futures-channel" = rec {
        crateName = "futures-channel";
        version = "0.3.4";
        edition = "2018";
        sha256 = "1a7iq7m4ggq2njrm7h1x2v2gxzxkd2160awk0fwrrpcfrq27vizh";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "futures-core/alloc" ];
          "cfg-target-has-atomic" = [ "futures-core/cfg-target-has-atomic" ];
          "default" = [ "std" ];
          "sink" = [ "futures-sink" ];
          "std" = [ "alloc" "futures-core/std" ];
          "unstable" = [ "futures-core/unstable" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "futures-core" = rec {
        crateName = "futures-core";
        version = "0.3.4";
        edition = "2018";
        sha256 = "0jj6mjvjbvv36r6w86lmjkh62mwndz901nsq4fwqjpl2d7vr4mgj";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "futures-cpupool" = rec {
        crateName = "futures-cpupool";
        version = "0.1.8";
        edition = "2015";
        sha256 = "1r32456gpblzfvnkf60545v8acqk7gh5zhyhi1jn669k9gicv45b";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures";
            usesDefaultFeatures = false;
            features = [ "use_std" ];
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
        ];
        features = {
          "default" = [ "with-deprecated" ];
          "with-deprecated" = [ "futures/with-deprecated" ];
        };
        resolvedDefaultFeatures = [ "default" "with-deprecated" ];
      };
      "futures-io" = rec {
        crateName = "futures-io";
        version = "0.3.4";
        edition = "2018";
        sha256 = "1ihd1429kyfncxpc4mvina1hbppywfqzql6zrnjcflk1m6d9af56";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "futures-macro" = rec {
        crateName = "futures-macro";
        version = "0.3.4";
        edition = "2018";
        sha256 = "19r3akc8y0br6jbx0lh1cfq07n8f23g7qfaag4m59xz17nm82l4s";
        procMacro = true;
        authors = [
          "Taylor Cramer <cramertj@google.com>"
          "Taiki Endo <te316e89@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro-hack";
            packageId = "proc-macro-hack";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.10";
          }
          {
            name = "quote";
            packageId = "quote 1.0.3";
          }
          {
            name = "syn";
            packageId = "syn 1.0.17";
            features = [ "full" ];
          }
        ];
        
      };
      "futures-sink" = rec {
        crateName = "futures-sink";
        version = "0.3.4";
        edition = "2018";
        sha256 = "19n88jlh8cwam4gqzj4vj9g130vg9ir0m1bv11dxj5619cdq4ril";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "futures-task" = rec {
        crateName = "futures-task";
        version = "0.3.4";
        edition = "2018";
        sha256 = "09ss6zg7w36s3y2715bnvfrnwr3b8vnklmxag00wvkgn7kjk82kv";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
      "futures-util" = rec {
        crateName = "futures-util";
        version = "0.3.4";
        edition = "2018";
        sha256 = "1i84h30q2q93y4l4bk2g22mp96aws02a0k9qy3nnnc34bpr6qxi2";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-io";
            packageId = "futures-io";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "futures-macro";
            packageId = "futures-macro";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "futures-task";
            packageId = "futures-task";
            usesDefaultFeatures = false;
          }
          {
            name = "memchr";
            packageId = "memchr";
            optional = true;
          }
          {
            name = "pin-utils";
            packageId = "pin-utils";
          }
          {
            name = "proc-macro-hack";
            packageId = "proc-macro-hack";
            optional = true;
          }
          {
            name = "proc-macro-nested";
            packageId = "proc-macro-nested";
            optional = true;
          }
          {
            name = "slab";
            packageId = "slab";
            optional = true;
          }
        ];
        features = {
          "alloc" = [ "futures-core/alloc" "futures-task/alloc" ];
          "async-await-macro" = [ "async-await" "futures-macro" "proc-macro-hack" "proc-macro-nested" ];
          "cfg-target-has-atomic" = [ "futures-core/cfg-target-has-atomic" "futures-task/cfg-target-has-atomic" ];
          "channel" = [ "std" "futures-channel" ];
          "compat" = [ "std" "futures_01" ];
          "default" = [ "std" "async-await" "async-await-macro" ];
          "io" = [ "std" "futures-io" "memchr" ];
          "io-compat" = [ "io" "compat" "tokio-io" ];
          "read-initializer" = [ "io" "futures-io/read-initializer" "futures-io/unstable" ];
          "sink" = [ "futures-sink" ];
          "std" = [ "alloc" "futures-core/std" "futures-task/std" "slab" ];
          "unstable" = [ "futures-core/unstable" "futures-task/unstable" ];
        };
        resolvedDefaultFeatures = [ "alloc" "async-await" "async-await-macro" "default" "futures-io" "futures-macro" "io" "memchr" "proc-macro-hack" "proc-macro-nested" "slab" "std" ];
      };
      "generic-array 0.12.3" = rec {
        crateName = "generic-array";
        version = "0.12.3";
        edition = "2015";
        sha256 = "1v5jg7djicq34nbiv1dwaki71gkny002wyy9qfn3y0hfmrs053y6";
        libName = "generic_array";
        authors = [
          "Bart≈Çomiej Kami≈Ñski <fizyk20@gmail.com>"
          "Aaron Trent <novacrazy@gmail.com>"
        ];
        dependencies = [
          {
            name = "typenum";
            packageId = "typenum";
          }
        ];
        
      };
      "generic-array 0.13.2" = rec {
        crateName = "generic-array";
        version = "0.13.2";
        edition = "2015";
        sha256 = "1kddwxpd58y807y1r3lijg7sw3gxm6nczl6wp57gamhv6mhygl8f";
        libName = "generic_array";
        authors = [
          "Bart≈Çomiej Kami≈Ñski <fizyk20@gmail.com>"
          "Aaron Trent <novacrazy@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "typenum";
            packageId = "typenum";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "more_lengths" "serde" ];
      };
      "generic-array 0.9.0" = rec {
        crateName = "generic-array";
        version = "0.9.0";
        edition = "2015";
        sha256 = "17avshwh41d1w9p75mw2k6pflmbaj9ra7svxplmhqmv76xlca9gg";
        libName = "generic_array";
        authors = [
          "Bart≈Çomiej Kami≈Ñski <fizyk20@gmail.com>"
        ];
        dependencies = [
          {
            name = "typenum";
            packageId = "typenum";
          }
        ];
        
      };
      "gethostname" = rec {
        crateName = "gethostname";
        version = "0.2.1";
        edition = "2018";
        sha256 = "0a609j9dhk816il2f2a01avvi5sqzxh0p38nxwrja7dcpybf54p6";
        authors = [
          "Sebastian Wiesner <sebastian@swsnr.de>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (!target."windows");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "sysinfoapi" ];
          }
        ];
        
      };
      "getrandom" = rec {
        crateName = "getrandom";
        version = "0.1.14";
        edition = "2018";
        sha256 = "1sq30li71h19rhnhs1h6576ja68insajx8wvh1nn088r8pc8vg3s";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: target."unix";
          }
          {
            name = "wasi";
            packageId = "wasi";
            target = { target, features }: (target."os" == "wasi");
          }
        ];
        features = {
          "rustc-dep-of-std" = [ "compiler_builtins" "core" ];
          "test-in-browser" = [ "wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "glob 0.2.11" = rec {
        crateName = "glob";
        version = "0.2.11";
        edition = "2015";
        sha256 = "1ysvi72slkw784fcsymgj4308c3y03gwjjzqxp80xdjnkbh8vqcb";
        authors = [
          "The Rust Project Developers"
        ];
        
      };
      "glob 0.3.0" = rec {
        crateName = "glob";
        version = "0.3.0";
        edition = "2015";
        sha256 = "0x25wfr7vg3mzxc9x05dcphvd3nwlcmbnxrvwcvrrdwplcrrk4cv";
        authors = [
          "The Rust Project Developers"
        ];
        
      };
      "globset" = rec {
        crateName = "globset";
        version = "0.4.5";
        edition = "2015";
        sha256 = "0841ihdg1ps2618cs0kjbr3pn3rzrj24rx3n4pg1sa6p1d1xmlbs";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "aho-corasick";
            packageId = "aho-corasick";
          }
          {
            name = "bstr";
            packageId = "bstr";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "regex";
            packageId = "regex";
          }
        ];
        features = {
          "serde1" = [ "serde" ];
        };
      };
      "h2 0.1.26" = rec {
        crateName = "h2";
        version = "0.1.26";
        edition = "2015";
        sha256 = "0qn457y8xh03p7c7cpk76r22gqpyqxc58g5022j3iya7d0j4rcx5";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "bytes";
            packageId = "bytes 0.4.12";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "http";
            packageId = "http 0.1.21";
          }
          {
            name = "indexmap";
            packageId = "indexmap";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "string";
            packageId = "string";
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
          }
        ];
        features = {
        };
      };
      "h2 0.2.4" = rec {
        crateName = "h2";
        version = "0.2.4";
        edition = "2018";
        sha256 = "0hjg2j75xpky92wr41d19irbskqr4x87l7j3l5n8vlc97jzkhw1p";
        authors = [
          "Carl Lerche <me@carllerche.com>"
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.5.4";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
          }
          {
            name = "http";
            packageId = "http 0.2.1";
          }
          {
            name = "indexmap";
            packageId = "indexmap";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "tokio";
            packageId = "tokio 0.2.17";
            features = [ "io-util" "sync" ];
          }
          {
            name = "tokio-util";
            packageId = "tokio-util";
            features = [ "codec" ];
          }
        ];
        devDependencies = [
          {
            name = "tokio";
            packageId = "tokio 0.2.17";
            features = [ "dns" "macros" "rt-core" "tcp" ];
          }
        ];
        features = {
        };
      };
      "hash32" = rec {
        crateName = "hash32";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1k7lv7hsbzv14pz90cxay6v7avh6d6kcrra0rsc45b33dvw1l16l";
        authors = [
          "Jorge Aparicio <jorge@japaric.io>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
          }
        ];
        features = {
        };
      };
      "hermit-abi" = rec {
        crateName = "hermit-abi";
        version = "0.1.10";
        edition = "2015";
        sha256 = "0blmmzik5cs79ivq70s9gal8ypgzj50wnl2hwsaam46gjjbz2p3j";
        authors = [
          "Stefan Lankes"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins/rustc-dep-of-std" "libc/rustc-dep-of-std" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "hex" = rec {
        crateName = "hex";
        version = "0.4.2";
        edition = "2018";
        sha256 = "0dbf00j3h3pz0lw8jp245rwypna6i23l4cpvym8gsczin9c92kv4";
        authors = [
          "KokaKiwi <kokakiwi@kokakiwi.net>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "hidapi" = rec {
        crateName = "hidapi";
        version = "1.2.1";
        edition = "2015";
        sha256 = "0m0ffv0zka21dp8swxnqn2mjrrjk5z9v6fjmkil9hzfd2209hiz3";
        authors = [
          "Roland Ruckerbauer <roland.rucky@gmail.com>"
          "Osspial <osspial@gmail.com>"
          "Artyom Pavlov <newpavlov@gmail.com>"
          "mberndt123"
          "niklasad1"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
        ];
        features = {
          "default" = [ "linux-static-libusb" ];
        };
        resolvedDefaultFeatures = [ "linux-static-hidraw" ];
      };
      "hmac" = rec {
        crateName = "hmac";
        version = "0.7.1";
        edition = "2015";
        sha256 = "15cnwpssp2n1kdm9x7abir67f2hp3q6rdfj1mcck3hm4rmj5xjsx";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "crypto-mac";
            packageId = "crypto-mac";
          }
          {
            name = "digest";
            packageId = "digest 0.8.1";
          }
        ];
        devDependencies = [
          {
            name = "crypto-mac";
            packageId = "crypto-mac";
            features = [ "dev" ];
          }
        ];
        
      };
      "http 0.1.21" = rec {
        crateName = "http";
        version = "0.1.21";
        edition = "2015";
        sha256 = "1w21xnhd8f48zvbmm5njg2y1nb4p08ppn8r0cs2xi5d8wgnzbk6n";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Carl Lerche <me@carllerche.com>"
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.4.12";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "itoa";
            packageId = "itoa";
          }
        ];
        
      };
      "http 0.2.1" = rec {
        crateName = "http";
        version = "0.2.1";
        edition = "2018";
        sha256 = "1y827q7j0gvs8z2x12biaik9db6nb902lpqv889cbcj84sbnkm98";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Carl Lerche <me@carllerche.com>"
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.5.4";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "itoa";
            packageId = "itoa";
          }
        ];
        
      };
      "http-body 0.1.0" = rec {
        crateName = "http-body";
        version = "0.1.0";
        edition = "2015";
        sha256 = "0b99404k4mw6a92hvyr0qwzkqv4f866ykg0x7913limjq5cwhhb7";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.4.12";
          }
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "http";
            packageId = "http 0.1.21";
          }
          {
            name = "tokio-buf";
            packageId = "tokio-buf";
            usesDefaultFeatures = false;
          }
        ];
        
      };
      "http-body 0.3.1" = rec {
        crateName = "http-body";
        version = "0.3.1";
        edition = "2018";
        sha256 = "06qi0ni45lb92w3ml260c0bxbq5zd4snjmz0a9k69xq6021zzm8k";
        authors = [
          "Carl Lerche <me@carllerche.com>"
          "Lucio Franco <luciofranco14@gmail.com>"
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.5.4";
          }
          {
            name = "http";
            packageId = "http 0.2.1";
          }
        ];
        
      };
      "httparse" = rec {
        crateName = "httparse";
        version = "1.3.4";
        edition = "2015";
        sha256 = "1yf23ldnjwfkkhkca7f4w15mky9961gjz28dlwyybhphc7l9l5yd";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "humantime 1.3.0" = rec {
        crateName = "humantime";
        version = "1.3.0";
        edition = "2015";
        sha256 = "0krwgbf35pd46xvkqg14j070vircsndabahahlv3rwhflpy4q06z";
        authors = [
          "Paul Colomiets <paul@colomiets.name>"
        ];
        dependencies = [
          {
            name = "quick-error";
            packageId = "quick-error";
          }
        ];
        
      };
      "humantime 2.0.0" = rec {
        crateName = "humantime";
        version = "2.0.0";
        edition = "2018";
        sha256 = "1nljdc33ib52rqrv9y9w08dba3g1h1jlxd47h273qbak0qrwbdmr";
        authors = [
          "Paul Colomiets <paul@colomiets.name>"
        ];
        
      };
      "hyper 0.10.16" = rec {
        crateName = "hyper";
        version = "0.10.16";
        edition = "2015";
        sha256 = "0wwjh9p3mzvg3fss2lqz5r7ddcgl1fh9w6my2j69d6k0lbcm41ha";
        authors = [
          "Sean McArthur <sean.monstar@gmail.com>"
          "Jonathan Reem <jonathan.reem@gmail.com>"
        ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64 0.9.3";
          }
          {
            name = "httparse";
            packageId = "httparse";
          }
          {
            name = "language-tags";
            packageId = "language-tags";
          }
          {
            name = "log";
            packageId = "log 0.3.9";
          }
          {
            name = "mime";
            packageId = "mime 0.2.6";
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
          {
            name = "time";
            packageId = "time";
          }
          {
            name = "traitobject";
            packageId = "traitobject";
          }
          {
            name = "typeable";
            packageId = "typeable";
          }
          {
            name = "unicase";
            packageId = "unicase 1.4.2";
          }
          {
            name = "url";
            packageId = "url 1.7.2";
          }
        ];
        features = {
        };
      };
      "hyper 0.12.35" = rec {
        crateName = "hyper";
        version = "0.12.35";
        edition = "2015";
        sha256 = "1xnm8zi4bdjqhlnx3238kx8yjf29jjd1ww54apcql7wf8g8nxglx";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.4.12";
          }
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "futures-cpupool";
            packageId = "futures-cpupool";
            optional = true;
          }
          {
            name = "h2";
            packageId = "h2 0.1.26";
          }
          {
            name = "http";
            packageId = "http 0.1.21";
          }
          {
            name = "http-body";
            packageId = "http-body 0.1.0";
          }
          {
            name = "httparse";
            packageId = "httparse";
          }
          {
            name = "iovec";
            packageId = "iovec";
          }
          {
            name = "itoa";
            packageId = "itoa";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "net2";
            packageId = "net2";
            optional = true;
          }
          {
            name = "time";
            packageId = "time";
          }
          {
            name = "tokio";
            packageId = "tokio 0.1.22";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "rt-full" ];
          }
          {
            name = "tokio-buf";
            packageId = "tokio-buf";
          }
          {
            name = "tokio-executor";
            packageId = "tokio-executor";
            optional = true;
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
          }
          {
            name = "tokio-reactor";
            packageId = "tokio-reactor";
            optional = true;
          }
          {
            name = "tokio-tcp";
            packageId = "tokio-tcp";
            optional = true;
          }
          {
            name = "tokio-threadpool";
            packageId = "tokio-threadpool";
            optional = true;
          }
          {
            name = "tokio-timer";
            packageId = "tokio-timer";
            optional = true;
          }
          {
            name = "want";
            packageId = "want 0.2.0";
          }
        ];
        buildDependencies = [
          {
            name = "rustc_version";
            packageId = "rustc_version";
          }
        ];
        features = {
          "default" = [ "__internal_flaky_tests" "runtime" ];
          "runtime" = [ "futures-cpupool" "net2" "tokio" "tokio-executor" "tokio-reactor" "tokio-tcp" "tokio-threadpool" "tokio-timer" ];
        };
        resolvedDefaultFeatures = [ "__internal_flaky_tests" "default" "futures-cpupool" "net2" "runtime" "tokio" "tokio-executor" "tokio-reactor" "tokio-tcp" "tokio-threadpool" "tokio-timer" ];
      };
      "hyper 0.13.4" = rec {
        crateName = "hyper";
        version = "0.13.4";
        edition = "2018";
        sha256 = "0bkg0kss7qafm7mbikkszk0g3nlirk4zyna6fds9s3cn1q882q7d";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.5.4";
          }
          {
            name = "futures-channel";
            packageId = "futures-channel";
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
          }
          {
            name = "h2";
            packageId = "h2 0.2.4";
          }
          {
            name = "http";
            packageId = "http 0.2.1";
          }
          {
            name = "http-body";
            packageId = "http-body 0.3.1";
          }
          {
            name = "httparse";
            packageId = "httparse";
          }
          {
            name = "itoa";
            packageId = "itoa";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "net2";
            packageId = "net2";
            optional = true;
          }
          {
            name = "pin-project";
            packageId = "pin-project";
          }
          {
            name = "time";
            packageId = "time";
          }
          {
            name = "tokio";
            packageId = "tokio 0.2.17";
            features = [ "sync" ];
          }
          {
            name = "tower-service";
            packageId = "tower-service";
          }
          {
            name = "want";
            packageId = "want 0.3.0";
          }
        ];
        devDependencies = [
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
            features = [ "alloc" ];
          }
          {
            name = "tokio";
            packageId = "tokio 0.2.17";
            features = [ "fs" "macros" "io-std" "rt-util" "sync" "time" "test-util" ];
          }
        ];
        features = {
          "default" = [ "runtime" "stream" ];
          "runtime" = [ "tcp" "tokio/rt-core" ];
          "tcp" = [ "net2" "tokio/blocking" "tokio/tcp" "tokio/time" ];
        };
        resolvedDefaultFeatures = [ "net2" "runtime" "tcp" ];
      };
      "hyper-rustls" = rec {
        crateName = "hyper-rustls";
        version = "0.20.0";
        edition = "2018";
        sha256 = "022bn7k7k6xjbvgqv180r9f34fcg9gyszf0kgnn2afpck6imx5mc";
        authors = [
          "Joseph Birr-Pixton <jpixton@gmail.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.5.4";
          }
          {
            name = "ct-logs";
            packageId = "ct-logs";
            optional = true;
          }
          {
            name = "futures-util";
            packageId = "futures-util";
          }
          {
            name = "hyper";
            packageId = "hyper 0.13.4";
            usesDefaultFeatures = false;
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "rustls";
            packageId = "rustls";
          }
          {
            name = "rustls-native-certs";
            packageId = "rustls-native-certs";
            optional = true;
          }
          {
            name = "tokio";
            packageId = "tokio 0.2.17";
          }
          {
            name = "tokio-rustls";
            packageId = "tokio-rustls";
          }
          {
            name = "webpki";
            packageId = "webpki";
          }
        ];
        devDependencies = [
          {
            name = "tokio";
            packageId = "tokio 0.2.17";
            features = [ "io-std" "macros" "dns" "stream" ];
          }
        ];
        features = {
          "default" = [ "native-tokio" ];
          "native-tokio" = [ "tokio-runtime" "rustls-native-certs" ];
          "tokio-runtime" = [ "hyper/runtime" "ct-logs" ];
          "webpki-tokio" = [ "tokio-runtime" "webpki-roots" ];
        };
        resolvedDefaultFeatures = [ "ct-logs" "default" "native-tokio" "rustls-native-certs" "tokio-runtime" ];
      };
      "idna 0.1.5" = rec {
        crateName = "idna";
        version = "0.1.5";
        edition = "2015";
        sha256 = "0kl4gs5kaydn4v07c6ka33spm9qdh2np0x7iw7g5zd8z1c7rxw1q";
        authors = [
          "The rust-url developers"
        ];
        dependencies = [
          {
            name = "matches";
            packageId = "matches";
          }
          {
            name = "unicode-bidi";
            packageId = "unicode-bidi";
          }
          {
            name = "unicode-normalization";
            packageId = "unicode-normalization";
          }
        ];
        
      };
      "idna 0.2.0" = rec {
        crateName = "idna";
        version = "0.2.0";
        edition = "2015";
        sha256 = "1a9066imqpdrm1aavfasdyb1zahqaz8jmdcwdawvb1pf60y6gqh2";
        authors = [
          "The rust-url developers"
        ];
        dependencies = [
          {
            name = "matches";
            packageId = "matches";
          }
          {
            name = "unicode-bidi";
            packageId = "unicode-bidi";
          }
          {
            name = "unicode-normalization";
            packageId = "unicode-normalization";
          }
        ];
        
      };
      "ieee754" = rec {
        crateName = "ieee754";
        version = "0.2.6";
        edition = "2015";
        sha256 = "1771d2kvw1wga65yrg9m7maky0fzsaq9hvhkv91n6gmxmjfdl1wh";
        authors = [
          "Huon Wilson <dbau.pp@gmail.com>"
        ];
        features = {
        };
      };
      "indexed" = rec {
        crateName = "indexed";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0jvrff7wqwhjcxvy5b8yds83mjkgkphrmdnsb5p6l39lrxd1506l";
        authors = [
          "oooutlk <oooutlk@outlook.com>"
        ];
        features = {
        };
      };
      "indexmap" = rec {
        crateName = "indexmap";
        version = "1.3.2";
        edition = "2015";
        sha256 = "14i2gmq9pwaafvlxmsc12j6539hjgqk4j4jz40fz763vbcn08vq7";
        authors = [
          "bluss"
          "Josh Stone <cuviper@gmail.com>"
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.0";
          }
        ];
        features = {
          "serde-1" = [ "serde" ];
        };
      };
      "indicatif" = rec {
        crateName = "indicatif";
        version = "0.14.0";
        edition = "2018";
        sha256 = "0h3ysblmny7a7lpx5jwvqm7wb9rf22vkb0prsz4qjy21rxqq79j9";
        authors = [
          "Armin Ronacher <armin.ronacher@active-4.com>"
        ];
        dependencies = [
          {
            name = "console";
            packageId = "console";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "number_prefix";
            packageId = "number_prefix";
          }
          {
            name = "regex";
            packageId = "regex";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
        ];
        features = {
          "with_rayon" = [ "rayon" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "input_buffer" = rec {
        crateName = "input_buffer";
        version = "0.3.1";
        edition = "2015";
        sha256 = "0m4pamqvr00z90cmrgjj25iwpqy6fyac53k1ms63k86m8d9aka0r";
        authors = [
          "Alexey Galakhov <agalakhov@snapview.de>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.5.4";
          }
        ];
        
      };
      "iovec" = rec {
        crateName = "iovec";
        version = "0.1.4";
        edition = "2015";
        sha256 = "0ph73qygwx8i0mblrf110cj59l00gkmsgrpzz1rm85syz5pymcxj";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
        ];
        
      };
      "itertools 0.7.11" = rec {
        crateName = "itertools";
        version = "0.7.11";
        edition = "2015";
        sha256 = "03cpsj26xmyamcalclqzr1i700vwx8hnbgxbpjvs354f8mnr8iqd";
        authors = [
          "bluss"
        ];
        dependencies = [
          {
            name = "either";
            packageId = "either";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
      "itertools 0.9.0" = rec {
        crateName = "itertools";
        version = "0.9.0";
        edition = "2018";
        sha256 = "0jyml7ygr7kijkcjdl3fk5f34y5h5jsavclim7l13zjiavw1hkr8";
        authors = [
          "bluss"
        ];
        dependencies = [
          {
            name = "either";
            packageId = "either";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
      "itoa" = rec {
        crateName = "itoa";
        version = "0.4.5";
        edition = "2015";
        sha256 = "13nxqrfnh83a7x5rw4wq2ilp8nxvwy74dxzysdg59dbxqk0agdxq";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "jemalloc-ctl" = rec {
        crateName = "jemalloc-ctl";
        version = "0.3.3";
        edition = "2015";
        sha256 = "1dx4mik2ww5ic4qqv5zx9dxq6pbkclxnxa9bscg4z4njkpzsa0n5";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
          "Gonzalo Brito Gadeschi <gonzalobg88@gmail.com>"
        ];
        dependencies = [
          {
            name = "jemalloc-sys";
            packageId = "jemalloc-sys";
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
          }
          {
            name = "paste";
            packageId = "paste";
          }
        ];
        features = {
          "use_std" = [ "libc/use_std" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "jemalloc-sys" = rec {
        crateName = "jemalloc-sys";
        version = "0.3.2";
        edition = "2015";
        sha256 = "0ify9vlql01qhfxlj7d4p9jvcp90mj2h69nkbq7slccvbhzryfqd";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Gonzalo Brito Gadeschi <gonzalobg88@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
          {
            name = "fs_extra";
            packageId = "fs_extra";
          }
        ];
        features = {
          "background_threads" = [ "background_threads_runtime_support" ];
          "default" = [ "background_threads_runtime_support" ];
        };
        resolvedDefaultFeatures = [ "background_threads_runtime_support" "default" ];
      };
      "jemallocator" = rec {
        crateName = "jemallocator";
        version = "0.3.2";
        edition = "2015";
        sha256 = "0sabfa5118b7l4ars5n36s2fjyfn59w4d6mjs6rrmsa5zky67bj3";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Gonzalo Brito Gadeschi <gonzalobg88@gmail.com>"
          "Simon Sapin <simon.sapin@exyr.org>"
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = [
          {
            name = "jemalloc-sys";
            packageId = "jemalloc-sys";
            usesDefaultFeatures = false;
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "background_threads" = [ "jemalloc-sys/background_threads" ];
          "background_threads_runtime_support" = [ "jemalloc-sys/background_threads_runtime_support" ];
          "debug" = [ "jemalloc-sys/debug" ];
          "default" = [ "background_threads_runtime_support" ];
          "disable_initial_exec_tls" = [ "jemalloc-sys/disable_initial_exec_tls" ];
          "profiling" = [ "jemalloc-sys/profiling" ];
          "stats" = [ "jemalloc-sys/stats" ];
          "unprefixed_malloc_on_supported_platforms" = [ "jemalloc-sys/unprefixed_malloc_on_supported_platforms" ];
        };
        resolvedDefaultFeatures = [ "background_threads_runtime_support" "default" ];
      };
      "jobserver" = rec {
        crateName = "jobserver";
        version = "0.1.21";
        edition = "2018";
        sha256 = "1wm7h76xf7a4d0q6583agbsyl2s46vndrlnr015zffclpcz32waw";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
        ];
        
      };
      "js-sys" = rec {
        crateName = "js-sys";
        version = "0.3.37";
        edition = "2018";
        sha256 = "0mbhpbw3zjjl51m24qx3ilq4y8xipm5sfa5hsavaabqs6wsx89va";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
          }
        ];
        
      };
      "jsonrpc-client-transports" = rec {
        crateName = "jsonrpc-client-transports";
        version = "14.0.5";
        edition = "2018";
        sha256 = "02z41n0vzhgx76qxpipzf81fib2qaysx8xndjz905xyiqikf36ha";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "failure";
            packageId = "failure";
          }
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "jsonrpc-core";
            packageId = "jsonrpc-core";
          }
          {
            name = "jsonrpc-pubsub";
            packageId = "jsonrpc-pubsub";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "tokio";
            packageId = "tokio 0.1.22";
            optional = true;
          }
          {
            name = "url";
            packageId = "url 1.7.2";
          }
          {
            name = "websocket";
            packageId = "websocket";
            optional = true;
          }
        ];
        devDependencies = [
          {
            name = "tokio";
            packageId = "tokio 0.1.22";
          }
        ];
        features = {
          "arbitrary_precision" = [ "serde_json/arbitrary_precision" "jsonrpc-core/arbitrary_precision" ];
          "default" = [ "http" "tls" "ws" ];
          "http" = [ "hyper" ];
          "ipc" = [ "parity-tokio-ipc" "jsonrpc-server-utils" "tokio" ];
          "tls" = [ "hyper-tls" "http" ];
          "ws" = [ "websocket" "tokio" ];
        };
        resolvedDefaultFeatures = [ "tokio" "websocket" "ws" ];
      };
      "jsonrpc-core" = rec {
        crateName = "jsonrpc-core";
        version = "14.0.5";
        edition = "2018";
        sha256 = "0w09vzrz762qzprvqy8wgpzwp4nb5rkjv7i2f985vvzi9236hfzy";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
        ];
        features = {
          "arbitrary_precision" = [ "serde_json/arbitrary_precision" ];
        };
      };
      "jsonrpc-core-client" = rec {
        crateName = "jsonrpc-core-client";
        version = "14.0.5";
        edition = "2018";
        sha256 = "013kxi0dsmw9xkwbrpwr3254fjkdh4yav3r3vybi0w0ppq8c2388";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "jsonrpc-client-transports";
            packageId = "jsonrpc-client-transports";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "arbitrary_precision" = [ "jsonrpc-client-transports/arbitrary_precision" ];
          "http" = [ "jsonrpc-client-transports/http" ];
          "ipc" = [ "jsonrpc-client-transports/ipc" ];
          "tls" = [ "jsonrpc-client-transports/tls" ];
          "ws" = [ "jsonrpc-client-transports/ws" ];
        };
        resolvedDefaultFeatures = [ "ws" ];
      };
      "jsonrpc-derive" = rec {
        crateName = "jsonrpc-derive";
        version = "14.0.5";
        edition = "2018";
        sha256 = "0n00lbw9pbl9bh6v21k68hd4zibfvgy4297m27ifh9mncf7sy2c6";
        procMacro = true;
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "proc-macro-crate";
            packageId = "proc-macro-crate";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.10";
          }
          {
            name = "quote";
            packageId = "quote 1.0.3";
          }
          {
            name = "syn";
            packageId = "syn 1.0.17";
            features = [ "full" "extra-traits" "visit" "fold" ];
          }
        ];
        
      };
      "jsonrpc-http-server" = rec {
        crateName = "jsonrpc-http-server";
        version = "14.0.6";
        edition = "2018";
        sha256 = "01wq1qgk4zi35yvva9qbghgncpmkvn1yznwfc0s3cpd4gscn6vc1";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "hyper";
            packageId = "hyper 0.12.35";
          }
          {
            name = "jsonrpc-core";
            packageId = "jsonrpc-core";
          }
          {
            name = "jsonrpc-server-utils";
            packageId = "jsonrpc-server-utils";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "net2";
            packageId = "net2";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.10.2";
          }
          {
            name = "unicase";
            packageId = "unicase 2.6.0";
          }
        ];
        
      };
      "jsonrpc-pubsub" = rec {
        crateName = "jsonrpc-pubsub";
        version = "14.0.6";
        edition = "2018";
        sha256 = "0ffr8dk1h8qix153ccqp2pjz5v0an4dz75nq4kfny9ri0ywwjcav";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "jsonrpc-core";
            packageId = "jsonrpc-core";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.10.2";
          }
          {
            name = "serde";
            packageId = "serde";
          }
        ];
        
      };
      "jsonrpc-server-utils" = rec {
        crateName = "jsonrpc-server-utils";
        version = "14.0.5";
        edition = "2018";
        sha256 = "08kxa7xiqj8l0hy6rkrz714pq9vlk33bnara1nzdn3lac5g67dwm";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.4.12";
          }
          {
            name = "globset";
            packageId = "globset";
          }
          {
            name = "jsonrpc-core";
            packageId = "jsonrpc-core";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "tokio";
            packageId = "tokio 0.1.22";
          }
          {
            name = "tokio-codec";
            packageId = "tokio-codec";
          }
          {
            name = "unicase";
            packageId = "unicase 2.6.0";
          }
        ];
        
      };
      "jsonrpc-ws-server" = rec {
        crateName = "jsonrpc-ws-server";
        version = "14.0.6";
        edition = "2018";
        sha256 = "0lgqim7zkz1ndb1lxha7pgaiavxspgk5qxw05khf0rmfn9rmfkmr";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "jsonrpc-core";
            packageId = "jsonrpc-core";
          }
          {
            name = "jsonrpc-server-utils";
            packageId = "jsonrpc-server-utils";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.10.2";
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "ws";
            packageId = "ws";
          }
        ];
        
      };
      "kernel32-sys" = rec {
        crateName = "kernel32-sys";
        version = "0.2.2";
        edition = "2015";
        sha256 = "1389av0601a9yz8dvx5zha9vmkd6ik7ax0idpb032d28555n41vm";
        libName = "kernel32";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
          }
        ];
        buildDependencies = [
          {
            name = "winapi-build";
            packageId = "winapi-build";
          }
        ];
        
      };
      "language-tags" = rec {
        crateName = "language-tags";
        version = "0.2.2";
        edition = "2015";
        sha256 = "16hrjdpa827carq5x4b8zhas24d8kg4s16m6nmmn1kb7cr5qh7d9";
        authors = [
          "Pyfisch <pyfisch@gmail.com>"
        ];
        features = {
          "heap_size" = [ "heapsize" "heapsize_plugin" ];
        };
      };
      "lazy_static" = rec {
        crateName = "lazy_static";
        version = "1.4.0";
        edition = "2015";
        sha256 = "0in6ikhw8mgl33wjv6q6xfrb5b9jr16q8ygjy803fay4zcisvaz2";
        authors = [
          "Marvin L√∂bel <loebel.marvin@gmail.com>"
        ];
        dependencies = [
          {
            name = "spin";
            packageId = "spin";
            optional = true;
          }
        ];
        features = {
          "spin_no_std" = [ "spin" ];
        };
        resolvedDefaultFeatures = [ "spin" "spin_no_std" ];
      };
      "lazycell" = rec {
        crateName = "lazycell";
        version = "1.2.1";
        edition = "2015";
        sha256 = "0gvqycmpv7parc98i6y64ai7rvxrn1947z2a6maa02g4kvxdd55j";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Nikita Pekin <contact@nikitapek.in>"
        ];
        features = {
          "nightly-testing" = [ "clippy" "nightly" ];
        };
      };
      "libc" = rec {
        crateName = "libc";
        version = "0.2.68";
        edition = "2015";
        sha256 = "1w6z9krcqn7p200sb80dxx76iyvw3jdz949zxr1sgfr3a50c186y";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "std" ];
          "rustc-dep-of-std" = [ "align" "rustc-std-workspace-core" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "extra_traits" "std" ];
      };
      "libloading" = rec {
        crateName = "libloading";
        version = "0.5.2";
        edition = "2015";
        sha256 = "0lyply8rcqc8agajzxs7bq6ivba9dnn1i68kgb9z2flnfjh13cgj";
        authors = [
          "Simonas Kazlauskas <libloading@kazlauskas.me>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "winerror" "errhandlingapi" "libloaderapi" ];
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];
        
      };
      "librocksdb-sys" = rec {
        crateName = "librocksdb-sys";
        version = "6.6.4";
        edition = "2018";
        sha256 = "1r177ryv81zhmyymwj45263s0a2kzpcj6gyrgvxw43nj5mz74fsf";
        authors = [
          "Karl Hobley <karlhobley10@gmail.com>"
          "Arkadiy Paronyan <arkadiy@ethcore.io>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "bindgen";
            packageId = "bindgen";
          }
          {
            name = "cc";
            packageId = "cc";
            features = [ "parallel" ];
          }
          {
            name = "glob";
            packageId = "glob 0.3.0";
          }
        ];
        features = {
          "default" = [ "static" ];
        };
        resolvedDefaultFeatures = [ "default" "lz4" "static" ];
      };
      "linked-hash-map" = rec {
        crateName = "linked-hash-map";
        version = "0.5.2";
        edition = "2015";
        sha256 = "10qgbvh00q36ql0jh00rxh2jlq6qvl11n6mig0cvkpf4xf5bd4df";
        authors = [
          "Stepan Koltsov <stepan.koltsov@gmail.com>"
          "Andrew Paseltiner <apaseltiner@gmail.com>"
        ];
        features = {
          "heapsize_impl" = [ "heapsize" ];
          "serde_impl" = [ "serde" "serde_test" ];
        };
      };
      "lock_api" = rec {
        crateName = "lock_api";
        version = "0.3.4";
        edition = "2018";
        sha256 = "0xgc5dzmajh0akbh5d6d7rj9mh5rzpk74pyrc946v2ixgakj9nn4";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "scopeguard";
            packageId = "scopeguard";
            usesDefaultFeatures = false;
          }
        ];
        features = {
        };
      };
      "log 0.3.9" = rec {
        crateName = "log";
        version = "0.3.9";
        edition = "2015";
        sha256 = "0jq23hhn5h35k7pa8r7wqnsywji6x3wn1q5q7lif5q536if8v7p1";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "log";
            packageId = "log 0.4.8";
          }
        ];
        features = {
          "default" = [ "use_std" ];
          "max_level_debug" = [ "log/max_level_debug" ];
          "max_level_error" = [ "log/max_level_error" ];
          "max_level_info" = [ "log/max_level_info" ];
          "max_level_off" = [ "log/max_level_off" ];
          "max_level_trace" = [ "log/max_level_trace" ];
          "max_level_warn" = [ "log/max_level_warn" ];
          "release_max_level_debug" = [ "log/release_max_level_debug" ];
          "release_max_level_error" = [ "log/release_max_level_error" ];
          "release_max_level_info" = [ "log/release_max_level_info" ];
          "release_max_level_off" = [ "log/release_max_level_off" ];
          "release_max_level_trace" = [ "log/release_max_level_trace" ];
          "release_max_level_warn" = [ "log/release_max_level_warn" ];
          "use_std" = [ "log/std" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
      "log 0.4.8" = rec {
        crateName = "log";
        version = "0.4.8";
        edition = "2015";
        sha256 = "1xz18ixccl5c6np4linv3ypc7hpmmgpc5zzd2ymp2ssfx0mhbdhl";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
        ];
        features = {
          "kv_unstable_sval" = [ "kv_unstable" "sval/fmt" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "matches" = rec {
        crateName = "matches";
        version = "0.1.8";
        edition = "2015";
        sha256 = "020axl4q7rk9vz90phs7f8jas4imxal9y9kxl4z4v7a6719mrz3z";
        libPath = "lib.rs";
        authors = [
          "Simon Sapin <simon.sapin@exyr.org>"
        ];
        
      };
      "maybe-uninit" = rec {
        crateName = "maybe-uninit";
        version = "2.0.0";
        edition = "2015";
        sha256 = "004y0nzmpfdrhz251278341z6ql34iv1k6dp1h6af7d6nd6jwc30";
        authors = [
          "est31 <MTest31@outlook.com>"
          "The Rust Project Developers"
        ];
        
      };
      "memchr" = rec {
        crateName = "memchr";
        version = "2.3.3";
        edition = "2015";
        sha256 = "0074pvsfl938ndl5js14ibc7i9q0k3zp390z843w8nlyv4bxha1p";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
          "bluss"
        ];
        features = {
          "default" = [ "std" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" "use_std" ];
      };
      "memmap" = rec {
        crateName = "memmap";
        version = "0.7.0";
        edition = "2015";
        sha256 = "0ns7kkd1h4pijdkwfvw4qlbbmqmlmzwlq3g2676dcl5vwyazv1b5";
        authors = [
          "Dan Burkert <dan@danburkert.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "basetsd" "handleapi" "memoryapi" "minwindef" "std" "sysinfoapi" ];
          }
        ];
        
      };
      "memoffset" = rec {
        crateName = "memoffset";
        version = "0.5.4";
        edition = "2015";
        sha256 = "1n236rn8yxbi4ckh1qkz34822bgp24qijnp99sfhjx73lw12rz5l";
        authors = [
          "Gilad Naaman <gilad.naaman@gmail.com>"
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.0";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "mime 0.2.6" = rec {
        crateName = "mime";
        version = "0.2.6";
        edition = "2015";
        sha256 = "1q1s1ax1gaz8ld3513nvhidfwnik5asbs1ma3hp6inp5dn56nqms";
        authors = [
          "Sean McArthur <sean.monstar@gmail.com>"
        ];
        dependencies = [
          {
            name = "log";
            packageId = "log 0.3.9";
          }
        ];
        features = {
          "heap_size" = [ "heapsize" ];
        };
      };
      "mime 0.3.16" = rec {
        crateName = "mime";
        version = "0.3.16";
        edition = "2015";
        sha256 = "13dcm9lh01hdwfjcg74ppljyjfj1c6w3a3cwkhxf0w8wa37cfq1a";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        
      };
      "mime_guess" = rec {
        crateName = "mime_guess";
        version = "2.0.3";
        edition = "2015";
        sha256 = "04pjpbl90z4yn0cmifvwgf4mqznciw6b095k626q96bxx71d9116";
        authors = [
          "Austin Bonander <austin.bonander@gmail.com>"
        ];
        dependencies = [
          {
            name = "mime";
            packageId = "mime 0.3.16";
          }
          {
            name = "unicase";
            packageId = "unicase 2.6.0";
          }
        ];
        buildDependencies = [
          {
            name = "unicase";
            packageId = "unicase 2.6.0";
          }
        ];
        features = {
          "default" = [ "rev-mappings" ];
        };
        resolvedDefaultFeatures = [ "default" "rev-mappings" ];
      };
      "miniz_oxide" = rec {
        crateName = "miniz_oxide";
        version = "0.3.6";
        edition = "2018";
        sha256 = "198n4hfpq0qcxf275l6fpzh7b9cl7ck2xs6pjgpds74bazv9yrxa";
        authors = [
          "Frommi <daniil.liferenko@gmail.com>"
          "oyvindln <oyvindln@users.noreply.github.com>"
        ];
        dependencies = [
          {
            name = "adler32";
            packageId = "adler32";
          }
        ];
        
      };
      "mio" = rec {
        crateName = "mio";
        version = "0.6.21";
        edition = "2015";
        sha256 = "13q02a7cwc140aygf8amadpzpl5lyj3p2r4wnvgydfpnphifqb9h";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "fuchsia-zircon";
            packageId = "fuchsia-zircon";
            target = { target, features }: (target."os" == "fuchsia");
          }
          {
            name = "fuchsia-zircon-sys";
            packageId = "fuchsia-zircon-sys";
            target = { target, features }: (target."os" == "fuchsia");
          }
          {
            name = "iovec";
            packageId = "iovec";
          }
          {
            name = "kernel32-sys";
            packageId = "kernel32-sys";
            target = { target, features }: target."windows";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "miow";
            packageId = "miow";
            target = { target, features }: target."windows";
          }
          {
            name = "net2";
            packageId = "net2";
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
            target = { target, features }: target."windows";
          }
        ];
        features = {
          "default" = [ "with-deprecated" ];
        };
        resolvedDefaultFeatures = [ "default" "with-deprecated" ];
      };
      "mio-extras" = rec {
        crateName = "mio-extras";
        version = "2.0.6";
        edition = "2018";
        sha256 = "069gfhlv0wlwfx1k2sriwfws490kjp490rv2qivyfb01j3i3yh2j";
        authors = [
          "Carl Lerche <me@carllerche.com>"
          "David Hotham"
        ];
        dependencies = [
          {
            name = "lazycell";
            packageId = "lazycell";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "mio";
            packageId = "mio";
          }
          {
            name = "slab";
            packageId = "slab";
          }
        ];
        
      };
      "mio-uds" = rec {
        crateName = "mio-uds";
        version = "0.6.7";
        edition = "2015";
        sha256 = "09gimdbnj7b9yca99pk8lxh9jhl79msj795c8fxi2sqr9slmfqln";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "iovec";
            packageId = "iovec";
            target = { target, features }: target."unix";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "mio";
            packageId = "mio";
            target = { target, features }: target."unix";
          }
        ];
        
      };
      "miow" = rec {
        crateName = "miow";
        version = "0.2.1";
        edition = "2015";
        sha256 = "06g9b8sqlh5gxakwqq4rrib07afwanfnxgxajrldwcgk3hxjy7wc";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "kernel32-sys";
            packageId = "kernel32-sys";
          }
          {
            name = "net2";
            packageId = "net2";
            usesDefaultFeatures = false;
          }
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
          }
          {
            name = "ws2_32-sys";
            packageId = "ws2_32-sys";
          }
        ];
        
      };
      "native-tls" = rec {
        crateName = "native-tls";
        version = "0.2.4";
        edition = "2015";
        sha256 = "0bcbqm8gpm5azlp8rwznhrfk3ngikr041fj883lmw3g9dz08h39b";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static";
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
          {
            name = "log";
            packageId = "log 0.4.8";
            target = { target, features }: (!((target."os" == "windows") || (target."os" == "macos") || (target."os" == "ios")));
          }
          {
            name = "openssl";
            packageId = "openssl";
            target = { target, features }: (!((target."os" == "windows") || (target."os" == "macos") || (target."os" == "ios")));
          }
          {
            name = "openssl-probe";
            packageId = "openssl-probe";
            target = { target, features }: (!((target."os" == "windows") || (target."os" == "macos") || (target."os" == "ios")));
          }
          {
            name = "openssl-sys";
            packageId = "openssl-sys";
            target = { target, features }: (!((target."os" == "windows") || (target."os" == "macos") || (target."os" == "ios")));
          }
          {
            name = "schannel";
            packageId = "schannel";
            target = { target, features }: (target."os" == "windows");
          }
          {
            name = "security-framework";
            packageId = "security-framework";
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
          {
            name = "security-framework-sys";
            packageId = "security-framework-sys";
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
          {
            name = "tempfile";
            packageId = "tempfile";
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
        ];
        features = {
          "vendored" = [ "openssl/vendored" ];
        };
      };
      "net2" = rec {
        crateName = "net2";
        version = "0.2.33";
        edition = "2015";
        sha256 = "126g3fgfxp06zimc1l9iyxnn9cif1hjsg7sd81nlls5nnyghsma2";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: ((target."os" == "redox") || target."unix");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "handleapi" "winsock2" "ws2def" "ws2ipdef" "ws2tcpip" ];
          }
        ];
        features = {
          "default" = [ "duration" ];
        };
        resolvedDefaultFeatures = [ "default" "duration" ];
      };
      "nix" = rec {
        crateName = "nix";
        version = "0.17.0";
        edition = "2015";
        sha256 = "0qvk09kib3jpvpbaps0682nav20ibql61pf1s2h8jx9v5igpir2h";
        authors = [
          "The nix-rust Project Developers"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
            features = [ "extra_traits" ];
          }
          {
            name = "void";
            packageId = "void";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
            target = {target, features}: (target."os" == "dragonfly");
          }
        ];
        
      };
      "nom" = rec {
        crateName = "nom";
        version = "5.1.1";
        edition = "2018";
        sha256 = "1mma0q5bzgzbyyjc2w8z0wvff08yaaf28lhmnsj2slwpv99i4iqb";
        authors = [
          "contact@geoffroycouprie.com"
        ];
        dependencies = [
          {
            name = "memchr";
            packageId = "memchr";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check 0.9.1";
          }
        ];
        features = {
          "default" = [ "std" "lexical" ];
          "lexical" = [ "lexical-core" ];
          "regexp" = [ "regex" ];
          "regexp_macros" = [ "regexp" "lazy_static" ];
          "std" = [ "alloc" "memchr/use_std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
      "num-derive 0.2.5" = rec {
        crateName = "num-derive";
        version = "0.2.5";
        edition = "2015";
        sha256 = "1wnv7776fh4i40r3zfxcxcmm0dh029skx7gp4sjknz2kqm2hpzga";
        procMacro = true;
        libName = "num_derive";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 0.4.30";
          }
          {
            name = "quote";
            packageId = "quote 0.6.13";
          }
          {
            name = "syn";
            packageId = "syn 0.15.44";
          }
        ];
        features = {
          "full-syntax" = [ "syn/full" ];
        };
      };
      "num-derive 0.3.0" = rec {
        crateName = "num-derive";
        version = "0.3.0";
        edition = "2018";
        sha256 = "0imprwv8cs01k46g56ajlvc97dp8kz51y2vn6cp9jkw1c6r1b2qc";
        procMacro = true;
        libName = "num_derive";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.10";
          }
          {
            name = "quote";
            packageId = "quote 1.0.3";
          }
          {
            name = "syn";
            packageId = "syn 1.0.17";
          }
        ];
        features = {
          "full-syntax" = [ "syn/full" ];
        };
      };
      "num-integer" = rec {
        crateName = "num-integer";
        version = "0.1.42";
        edition = "2015";
        sha256 = "1fpw8yr9xwsf3qrh91rm7mzqaiwlc2dmnalsxv9pr9w1klpacviz";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.0";
          }
        ];
        features = {
          "default" = [ "std" ];
          "i128" = [ "num-traits/i128" ];
          "std" = [ "num-traits/std" ];
        };
      };
      "num-traits 0.1.43" = rec {
        crateName = "num-traits";
        version = "0.1.43";
        edition = "2015";
        sha256 = "0c9whknf2dm74a3cqirafy6gj83a76gl56g4v3g19k6lkwz13rcj";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
          }
        ];
        
      };
      "num-traits 0.2.11" = rec {
        crateName = "num-traits";
        version = "0.2.11";
        edition = "2015";
        sha256 = "15khrlm1bra50nd48ijl1vln13m9xg4fxzghf28jp16ic5zf8ay6";
        authors = [
          "The Rust Project Developers"
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.0";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "num_cpus" = rec {
        crateName = "num_cpus";
        version = "1.12.0";
        edition = "2015";
        sha256 = "1riw641hsmp2vwb9wz7d26dsycrjbw3zf4nd6p18kzw5y1a3a826";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "hermit-abi";
            packageId = "hermit-abi";
            target = { target, features }: (((target."arch" == "x86_64") || (target."arch" == "aarch64")) && (target."os" == "hermit"));
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        
      };
      "number_prefix" = rec {
        crateName = "number_prefix";
        version = "0.3.0";
        edition = "2015";
        sha256 = "0slm4mqmpgs6hvz22ycny9lvyvl9ivs80a1lncslp7lszz02zc0p";
        authors = [
          "Benjamin Sago <ogham@bsago.me>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "once_cell" = rec {
        crateName = "once_cell";
        version = "1.3.1";
        edition = "2018";
        sha256 = "0nyf4659py8ccnrrwdvw242h3j3qlrw6zi5gsjb9bjbm0n0h3imi";
        authors = [
          "Aleksey Kladov <aleksey.kladov@gmail.com>"
        ];
        dependencies = [
          {
            name = "parking_lot";
            packageId = "parking_lot 0.9.0";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "parking_lot" "std" ];
      };
      "opaque-debug" = rec {
        crateName = "opaque-debug";
        version = "0.2.3";
        edition = "2015";
        sha256 = "172j6bs8ndclqxa2m64qc0y1772rr73g4l9fg2svscgicnbfff98";
        authors = [
          "RustCrypto Developers"
        ];
        
      };
      "openssl" = rec {
        crateName = "openssl";
        version = "0.10.29";
        edition = "2015";
        sha256 = "1p8bybxjkcf8p49jk0lywa10qa1x4f5bdmc5dadgbi5l9igxirnf";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "foreign-types";
            packageId = "foreign-types";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "openssl-sys";
            packageId = "openssl-sys";
          }
        ];
        features = {
          "vendored" = [ "openssl-sys/vendored" ];
        };
      };
      "openssl-probe" = rec {
        crateName = "openssl-probe";
        version = "0.1.2";
        edition = "2015";
        sha256 = "1pijrdifgsdwd45b08c2g0dsmnhz7c3kmagb70839ngrd7d29bvp";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        
      };
      "openssl-sys" = rec {
        crateName = "openssl-sys";
        version = "0.9.55";
        edition = "2015";
        sha256 = "1n55z6jqmwflp5ahnh9893i5b0v0f4gd3rgr4cijw3qah5yhj5vp";
        build = "build/main.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.0";
          }
          {
            name = "cc";
            packageId = "cc";
          }
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
          {
            name = "vcpkg";
            packageId = "vcpkg";
            target = {target, features}: (target."env" == "msvc");
          }
        ];
        features = {
          "vendored" = [ "openssl-src" ];
        };
      };
      "parking_lot 0.10.2" = rec {
        crateName = "parking_lot";
        version = "0.10.2";
        edition = "2018";
        sha256 = "0pjhcbyk6n0g6jsr6s9nf4x8wribm1b2yf8fgc8drbqa77mh99yk";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "lock_api";
            packageId = "lock_api";
          }
          {
            name = "parking_lot_core";
            packageId = "parking_lot_core 0.7.1";
          }
        ];
        features = {
          "deadlock_detection" = [ "parking_lot_core/deadlock_detection" ];
          "nightly" = [ "parking_lot_core/nightly" "lock_api/nightly" ];
          "owning_ref" = [ "lock_api/owning_ref" ];
          "serde" = [ "lock_api/serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "parking_lot 0.9.0" = rec {
        crateName = "parking_lot";
        version = "0.9.0";
        edition = "2018";
        sha256 = "0lk2vq3hp88ygpgsrypdr3ss71fidnqbykva0csgxhmn5scb2hpq";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "lock_api";
            packageId = "lock_api";
          }
          {
            name = "parking_lot_core";
            packageId = "parking_lot_core 0.6.2";
          }
        ];
        buildDependencies = [
          {
            name = "rustc_version";
            packageId = "rustc_version";
          }
        ];
        features = {
          "deadlock_detection" = [ "parking_lot_core/deadlock_detection" ];
          "nightly" = [ "parking_lot_core/nightly" "lock_api/nightly" ];
          "owning_ref" = [ "lock_api/owning_ref" ];
          "serde" = [ "lock_api/serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "parking_lot_core 0.6.2" = rec {
        crateName = "parking_lot_core";
        version = "0.6.2";
        edition = "2018";
        sha256 = "0ay67dpnrn68ryyvp720m9i8hzp189fd4d6slrs1lvmcwywv2xmq";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "cloudabi";
            packageId = "cloudabi";
            target = { target, features }: (target."os" == "cloudabi");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "smallvec";
            packageId = "smallvec 0.6.13";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "winnt" "ntstatus" "minwindef" "winerror" "winbase" "errhandlingapi" "handleapi" ];
          }
        ];
        buildDependencies = [
          {
            name = "rustc_version";
            packageId = "rustc_version";
          }
        ];
        features = {
          "deadlock_detection" = [ "petgraph" "thread-id" "backtrace" ];
        };
      };
      "parking_lot_core 0.7.1" = rec {
        crateName = "parking_lot_core";
        version = "0.7.1";
        edition = "2018";
        sha256 = "1svs4c8xz7calwd52p95285acgs7ini73zg5kklyykb00hcnq4qf";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "cloudabi";
            packageId = "cloudabi";
            target = { target, features }: (target."os" == "cloudabi");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "smallvec";
            packageId = "smallvec 1.3.0";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "winnt" "ntstatus" "minwindef" "winerror" "winbase" "errhandlingapi" "handleapi" ];
          }
        ];
        features = {
          "deadlock_detection" = [ "petgraph" "thread-id" "backtrace" ];
        };
      };
      "paste" = rec {
        crateName = "paste";
        version = "0.1.10";
        edition = "2018";
        sha256 = "0yk4zbi7128dcrklsbwfa63d39x0dv8f7pdbrylvdlcj0s9v2kxb";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "paste-impl";
            packageId = "paste-impl";
          }
          {
            name = "proc-macro-hack";
            packageId = "proc-macro-hack";
          }
        ];
        
      };
      "paste-impl" = rec {
        crateName = "paste-impl";
        version = "0.1.10";
        edition = "2018";
        sha256 = "12jsm83dnsqnrcabfacnwcxh3h4kykl622vi7glv2wg527hqc956";
        procMacro = true;
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro-hack";
            packageId = "proc-macro-hack";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.10";
          }
          {
            name = "quote";
            packageId = "quote 1.0.3";
          }
          {
            name = "syn";
            packageId = "syn 1.0.17";
          }
        ];
        
      };
      "pbkdf2" = rec {
        crateName = "pbkdf2";
        version = "0.3.0";
        edition = "2015";
        sha256 = "1na2fmmfcmksz4xk7m0ihl778501c1krx88dcylrand48f506v00";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
          }
          {
            name = "crypto-mac";
            packageId = "crypto-mac";
          }
        ];
        features = {
          "default" = [ "include_simple" ];
          "include_simple" = [ "sha2" "hmac" "rand" "base64" "subtle" ];
          "parallel" = [ "rayon" ];
        };
      };
      "peeking_take_while" = rec {
        crateName = "peeking_take_while";
        version = "0.1.2";
        edition = "2015";
        sha256 = "16bhqr6rdyrp12zv381cxaaqqd0pwysvm1q8h2ygihvypvfprc8r";
        authors = [
          "Nick Fitzgerald <fitzgen@gmail.com>"
        ];
        
      };
      "percent-encoding 1.0.1" = rec {
        crateName = "percent-encoding";
        version = "1.0.1";
        edition = "2015";
        sha256 = "0cgq08v1fvr6bs5fvy390cz830lq4fak8havdasdacxcw790s09i";
        libPath = "lib.rs";
        authors = [
          "The rust-url developers"
        ];
        
      };
      "percent-encoding 2.1.0" = rec {
        crateName = "percent-encoding";
        version = "2.1.0";
        edition = "2015";
        sha256 = "0bp3zrsk3kr47fbpipyczidbbx4g54lzxdm77ni1i3qws10mdzfl";
        libPath = "lib.rs";
        authors = [
          "The rust-url developers"
        ];
        
      };
      "pin-project" = rec {
        crateName = "pin-project";
        version = "0.4.8";
        edition = "2018";
        sha256 = "0b3pfbqfy3hhgq62zvbw7m0a4d55mrgnll9w8l9jymyrm1is813q";
        authors = [
          "Taiki Endo <te316e89@gmail.com>"
        ];
        dependencies = [
          {
            name = "pin-project-internal";
            packageId = "pin-project-internal";
            usesDefaultFeatures = false;
          }
        ];
        
      };
      "pin-project-internal" = rec {
        crateName = "pin-project-internal";
        version = "0.4.8";
        edition = "2018";
        sha256 = "0gwvrd8y9x1zfhwqw9qg3l2yi1969ad58aldqq839krfbyj24lrq";
        procMacro = true;
        authors = [
          "Taiki Endo <te316e89@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.10";
          }
          {
            name = "quote";
            packageId = "quote 1.0.3";
          }
          {
            name = "syn";
            packageId = "syn 1.0.17";
            features = [ "full" "visit-mut" ];
          }
        ];
        
      };
      "pin-project-lite" = rec {
        crateName = "pin-project-lite";
        version = "0.1.4";
        edition = "2018";
        sha256 = "1bljczwz9yyb6jskjhbkilcbdg7v1mhfwzp2mxknzf7v1isl8y13";
        authors = [
          "Taiki Endo <te316e89@gmail.com>"
        ];
        
      };
      "pin-utils" = rec {
        crateName = "pin-utils";
        version = "0.1.0-alpha.4";
        edition = "2018";
        sha256 = "11xmyx00n4m37d546by2rxb8ryxs12v55cc172i3yak1rqccd52q";
        authors = [
          "Josef Brandl <mail@josefbrandl.de>"
        ];
        
      };
      "pkg-config" = rec {
        crateName = "pkg-config";
        version = "0.3.17";
        edition = "2015";
        sha256 = "0xynnaxdv0gzadlw4h79j855k0q7rj4zb9xb1vk00nc6ss559nh5";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        
      };
      "ppv-lite86" = rec {
        crateName = "ppv-lite86";
        version = "0.2.6";
        edition = "2018";
        sha256 = "06zs492wbms7j5qhy58cs3976c7kyc47rx0d6fn63rgvp580njbl";
        authors = [
          "The CryptoCorrosion Contributors"
        ];
        features = {
          "default" = [ "std" "simd" ];
        };
        resolvedDefaultFeatures = [ "simd" "std" ];
      };
      "pretty-hex" = rec {
        crateName = "pretty-hex";
        version = "0.1.1";
        edition = "2015";
        sha256 = "135x46pijq239byn1j37r1ndiqdawxall6bcdb29sybk7v2br4dy";
        authors = [
          "Andrei Volnin <wolandr@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "pretty_env_logger" = rec {
        crateName = "pretty_env_logger";
        version = "0.2.5";
        edition = "2015";
        sha256 = "0a0c53plsr4abw0y1iyjxs0d64f0a6dn48464a2rp21f0iiix3gd";
        authors = [
          "Sean McArthur <sean@seanmonstar>"
        ];
        dependencies = [
          {
            name = "ansi_term";
            packageId = "ansi_term";
          }
          {
            name = "chrono";
            packageId = "chrono";
          }
          {
            name = "env_logger";
            packageId = "env_logger 0.5.13";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
        ];
        
      };
      "proc-macro-crate" = rec {
        crateName = "proc-macro-crate";
        version = "0.1.4";
        edition = "2018";
        sha256 = "07pyc64bxlcz9g4hl0gc8cwqcjxpgh4ssvgxjvxsgj2ly58ln3g1";
        authors = [
          "Bastian K√∂cher <git@kchr.de>"
        ];
        dependencies = [
          {
            name = "toml";
            packageId = "toml";
          }
        ];
        
      };
      "proc-macro-hack" = rec {
        crateName = "proc-macro-hack";
        version = "0.5.15";
        edition = "2018";
        sha256 = "0qqbfm1byabjkph56r2rlvv4cliz4960j6hav3ljazyjqvkryr8d";
        procMacro = true;
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        
      };
      "proc-macro-nested" = rec {
        crateName = "proc-macro-nested";
        version = "0.1.4";
        edition = "2015";
        sha256 = "15664z2pjnn7ajpbrir4wh4c16jxz4i8r46y73n2kvfkz6an154f";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        
      };
      "proc-macro2 0.4.30" = rec {
        crateName = "proc-macro2";
        version = "0.4.30";
        edition = "2015";
        sha256 = "0nd71fl24sys066jrha6j7i34nfkjv44yzw8yww9742wmc8j0gfg";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "unicode-xid";
            packageId = "unicode-xid 0.1.0";
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "proc-macro2 1.0.10" = rec {
        crateName = "proc-macro2";
        version = "1.0.10";
        edition = "2018";
        sha256 = "1qxbnl8i3a5b2nxb8kdxbq6kj3pd1ckhm35wm7z3jd7n5wlns96z";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "unicode-xid";
            packageId = "unicode-xid 0.2.0";
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "quick-error" = rec {
        crateName = "quick-error";
        version = "1.2.3";
        edition = "2015";
        sha256 = "1q6za3v78hsspisc197bg3g7rpc989qycy8ypr8ap8igv10ikl51";
        authors = [
          "Paul Colomiets <paul@colomiets.name>"
          "Colin Kiegel <kiegel@gmx.de>"
        ];
        
      };
      "quote 0.3.15" = rec {
        crateName = "quote";
        version = "0.3.15";
        edition = "2015";
        sha256 = "0yhnnix4dzsv8y4wwz4csbnqjfh73al33j35msr10py6cl5r4vks";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        
      };
      "quote 0.6.13" = rec {
        crateName = "quote";
        version = "0.6.13";
        edition = "2015";
        sha256 = "1qgqq48jymp5h4y082aanf25hrw6bpb678xh3zw993qfhxmkpqkc";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 0.4.30";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
          "proc-macro" = [ "proc-macro2/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "quote 1.0.3" = rec {
        crateName = "quote";
        version = "1.0.3";
        edition = "2018";
        sha256 = "0zwd6fp74xfg4jnnnwj4v84lkzif2giwj4ch1hka9g35ghc6rp1b";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.10";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
          "proc-macro" = [ "proc-macro2/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "rand 0.4.6" = rec {
        crateName = "rand";
        version = "0.4.6";
        edition = "2015";
        sha256 = "14qjfv3gggzhnma20k0sc1jf8y6pplsaq7n1j9ls5c8kf2wl0a2m";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "fuchsia-cprng";
            packageId = "fuchsia-cprng";
            target = { target, features }: (target."os" == "fuchsia");
          }
          {
            name = "libc";
            packageId = "libc";
            optional = true;
            target = { target, features }: target."unix";
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1";
            usesDefaultFeatures = false;
            target = { target, features }: (target."env" == "sgx");
          }
          {
            name = "rdrand";
            packageId = "rdrand";
            target = { target, features }: (target."env" == "sgx");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "minwindef" "ntsecapi" "profileapi" "winnt" ];
          }
        ];
        features = {
          "default" = [ "std" ];
          "nightly" = [ "i128_support" ];
          "std" = [ "libc" ];
        };
        resolvedDefaultFeatures = [ "default" "libc" "std" ];
      };
      "rand 0.6.5" = rec {
        crateName = "rand";
        version = "0.6.5";
        edition = "2015";
        sha256 = "1jl4449jcl4wgmzld6ffwqj5gwxrp8zvx8w573g1z368qg6xlwbd";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: target."unix";
          }
          {
            name = "rand_chacha";
            packageId = "rand_chacha 0.1.1";
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.4.2";
          }
          {
            name = "rand_hc";
            packageId = "rand_hc 0.1.0";
          }
          {
            name = "rand_isaac";
            packageId = "rand_isaac";
          }
          {
            name = "rand_jitter";
            packageId = "rand_jitter";
          }
          {
            name = "rand_os";
            packageId = "rand_os";
            optional = true;
          }
          {
            name = "rand_pcg";
            packageId = "rand_pcg";
          }
          {
            name = "rand_xorshift";
            packageId = "rand_xorshift";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "minwindef" "ntsecapi" "profileapi" "winnt" ];
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 0.1.7";
          }
        ];
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "nightly" = [ "simd_support" ];
          "serde1" = [ "rand_core/serde1" "rand_isaac/serde1" "rand_xorshift/serde1" ];
          "simd_support" = [ "packed_simd" ];
          "std" = [ "rand_core/std" "alloc" "rand_os" "rand_jitter/std" ];
          "stdweb" = [ "rand_os/stdweb" ];
          "wasm-bindgen" = [ "rand_os/wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "i128_support" "rand_os" "std" ];
      };
      "rand 0.7.3" = rec {
        crateName = "rand";
        version = "0.7.3";
        edition = "2018";
        sha256 = "00sdaimkbz491qgi6qxkv582yivl32m2jd401kzbn94vsiwicsva";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "getrandom";
            packageId = "getrandom";
            rename = "getrandom_package";
            optional = true;
          }
          {
            name = "libc";
            packageId = "libc";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: target."unix";
          }
          {
            name = "rand_chacha";
            packageId = "rand_chacha 0.2.2";
            usesDefaultFeatures = false;
            target = { target, features }: (!(target."os" == "emscripten"));
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1";
          }
          {
            name = "rand_hc";
            packageId = "rand_hc 0.2.0";
            target = { target, features }: (target."os" == "emscripten");
          }
        ];
        devDependencies = [
          {
            name = "rand_hc";
            packageId = "rand_hc 0.2.0";
          }
        ];
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "getrandom" = [ "getrandom_package" "rand_core/getrandom" ];
          "nightly" = [ "simd_support" ];
          "simd_support" = [ "packed_simd" ];
          "small_rng" = [ "rand_pcg" ];
          "std" = [ "rand_core/std" "rand_chacha/std" "alloc" "getrandom" "libc" ];
          "stdweb" = [ "getrandom_package/stdweb" ];
          "wasm-bindgen" = [ "getrandom_package/wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "getrandom" "getrandom_package" "libc" "std" ];
      };
      "rand_chacha 0.1.1" = rec {
        crateName = "rand_chacha";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1vxwyzs4fy1ffjc8l00fsyygpiss135irjf7nyxgq2v0lqf3lvam";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 0.1.7";
          }
        ];
        
      };
      "rand_chacha 0.2.2" = rec {
        crateName = "rand_chacha";
        version = "0.2.2";
        edition = "2018";
        sha256 = "00il36fkdbsmpr99p9ksmmp6dn1md7rmnwmz0rr77jbrca2yvj7l";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
          "The CryptoCorrosion Contributors"
        ];
        dependencies = [
          {
            name = "ppv-lite86";
            packageId = "ppv-lite86";
            usesDefaultFeatures = false;
            features = [ "simd" ];
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1";
          }
        ];
        features = {
          "default" = [ "std" "simd" ];
          "std" = [ "ppv-lite86/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "rand_core 0.3.1" = rec {
        crateName = "rand_core";
        version = "0.3.1";
        edition = "2015";
        sha256 = "0jzdgszfa4bliigiy4hi66k7fs3gfwi2qxn8vik84ph77fwdwvvs";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.4.2";
          }
        ];
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "serde1" = [ "rand_core/serde1" ];
          "std" = [ "rand_core/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "rand_core 0.4.2" = rec {
        crateName = "rand_core";
        version = "0.4.2";
        edition = "2015";
        sha256 = "1p09ynysrq1vcdlmcqnapq4qakl2yd1ng3kxh3qscpx09k2a6cww";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        features = {
          "serde1" = [ "serde" "serde_derive" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
      "rand_core 0.5.1" = rec {
        crateName = "rand_core";
        version = "0.5.1";
        edition = "2018";
        sha256 = "06bdvx08v3rkz451cm7z59xwwqn1rkfh6v9ay77b14f8dwlybgch";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "getrandom";
            packageId = "getrandom";
            optional = true;
          }
        ];
        features = {
          "serde1" = [ "serde" ];
          "std" = [ "alloc" "getrandom" "getrandom/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "getrandom" "std" ];
      };
      "rand_hc 0.1.0" = rec {
        crateName = "rand_hc";
        version = "0.1.0";
        edition = "2015";
        sha256 = "1i0vl8q5ddvvy0x8hf1zxny393miyzxkwqnw31ifg6p0gdy6fh3v";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1";
            usesDefaultFeatures = false;
          }
        ];
        
      };
      "rand_hc 0.2.0" = rec {
        crateName = "rand_hc";
        version = "0.2.0";
        edition = "2018";
        sha256 = "0g31sqwpmsirdlwr0svnacr4dbqyz339im4ssl9738cjgfpjjcfa";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1";
          }
        ];
        
      };
      "rand_isaac" = rec {
        crateName = "rand_isaac";
        version = "0.1.1";
        edition = "2015";
        sha256 = "027flpjr4znx2csxk7gxb7vrf9c7y5mydmvg5az2afgisp4rgnfy";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "serde1" = [ "serde" "serde_derive" "rand_core/serde1" ];
        };
      };
      "rand_jitter" = rec {
        crateName = "rand_jitter";
        version = "0.1.4";
        edition = "2015";
        sha256 = "16z387y46bfz3csc42zxbjq89vcr1axqacncvv8qhyy93p4xarhi";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.4.2";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: (target."os" == "windows");
            features = [ "profileapi" ];
          }
        ];
        features = {
          "std" = [ "rand_core/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "rand_os" = rec {
        crateName = "rand_os";
        version = "0.1.3";
        edition = "2015";
        sha256 = "0wahppm0s64gkr2vmhcgwc0lij37in1lgfxg5rbgqlz0l5vgcxbv";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "cloudabi";
            packageId = "cloudabi";
            target = { target, features }: (target."os" == "cloudabi");
          }
          {
            name = "fuchsia-cprng";
            packageId = "fuchsia-cprng";
            target = { target, features }: (target."os" == "fuchsia");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.4.2";
            features = [ "std" ];
          }
          {
            name = "rdrand";
            packageId = "rdrand";
            target = { target, features }: (target."env" == "sgx");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "minwindef" "ntsecapi" "winnt" ];
          }
        ];
        
      };
      "rand_pcg" = rec {
        crateName = "rand_pcg";
        version = "0.1.2";
        edition = "2015";
        sha256 = "0i0bdla18a8x4jn1w0fxsbs3jg7ajllz6azmch1zw33r06dv1ydb";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.4.2";
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 0.1.7";
          }
        ];
        features = {
          "serde1" = [ "serde" "serde_derive" ];
        };
      };
      "rand_xorshift" = rec {
        crateName = "rand_xorshift";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0p2x8nr00hricpi2m6ca5vysiha7ybnghz79yqhhx6sl4gkfkxyb";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "serde1" = [ "serde" "serde_derive" ];
        };
      };
      "rayon" = rec {
        crateName = "rayon";
        version = "1.3.0";
        edition = "2018";
        sha256 = "1650g13bxlmywhdlw65q3g1zyyb7l0wcm35v45kf31cwgwly6v6v";
        authors = [
          "Niko Matsakis <niko@alum.mit.edu>"
          "Josh Stone <cuviper@gmail.com>"
        ];
        dependencies = [
          {
            name = "crossbeam-deque";
            packageId = "crossbeam-deque";
          }
          {
            name = "either";
            packageId = "either";
            usesDefaultFeatures = false;
          }
          {
            name = "rayon-core";
            packageId = "rayon-core";
          }
        ];
        
      };
      "rayon-core" = rec {
        crateName = "rayon-core";
        version = "1.7.0";
        edition = "2018";
        sha256 = "1ac55kpnh2390ah7r071vnjbiy308qpznql0n597x5dgxx39pa08";
        authors = [
          "Niko Matsakis <niko@alum.mit.edu>"
          "Josh Stone <cuviper@gmail.com>"
        ];
        dependencies = [
          {
            name = "crossbeam-deque";
            packageId = "crossbeam-deque";
          }
          {
            name = "crossbeam-queue";
            packageId = "crossbeam-queue";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
        ];
        
      };
      "rdrand" = rec {
        crateName = "rdrand";
        version = "0.4.0";
        edition = "2015";
        sha256 = "1cjq0kwx1bk7jx3kzyciiish5gqsj7620dm43dc52sr8fzmm9037";
        authors = [
          "Simonas Kazlauskas <rdrand@kazlauskas.me>"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "redox_syscall" = rec {
        crateName = "redox_syscall";
        version = "0.1.56";
        edition = "2015";
        sha256 = "110y7dyfm2vci4x5vk7gr0q551dvp31npl99fnsx2fb17wzwcf94";
        libName = "syscall";
        authors = [
          "Jeremy Soller <jackpot51@gmail.com>"
        ];
        
      };
      "redox_users" = rec {
        crateName = "redox_users";
        version = "0.3.4";
        edition = "2015";
        sha256 = "0cbl5w16l3bqm22i4vszclf6hzpljxicghmllw7j13az4s9k1ch9";
        authors = [
          "Jose Narvaez <goyox86@gmail.com>"
          "Wesley Hershberger <mggmugginsmc@gmail.com>"
        ];
        dependencies = [
          {
            name = "getrandom";
            packageId = "getrandom";
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
          }
          {
            name = "rust-argon2";
            packageId = "rust-argon2";
          }
        ];
        
      };
      "regex" = rec {
        crateName = "regex";
        version = "1.3.6";
        edition = "2015";
        sha256 = "1cx4lcgy7vdi2kij2n1dp2whl33d7974g1kxwiklhs192nclcsbz";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "aho-corasick";
            packageId = "aho-corasick";
            optional = true;
          }
          {
            name = "memchr";
            packageId = "memchr";
            optional = true;
          }
          {
            name = "regex-syntax";
            packageId = "regex-syntax";
            usesDefaultFeatures = false;
          }
          {
            name = "thread_local";
            packageId = "thread_local";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" "perf" "unicode" ];
          "perf" = [ "perf-cache" "perf-dfa" "perf-inline" "perf-literal" ];
          "perf-cache" = [ "thread_local" ];
          "perf-literal" = [ "aho-corasick" "memchr" ];
          "unicode" = [ "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
          "unicode-age" = [ "regex-syntax/unicode-age" ];
          "unicode-bool" = [ "regex-syntax/unicode-bool" ];
          "unicode-case" = [ "regex-syntax/unicode-case" ];
          "unicode-gencat" = [ "regex-syntax/unicode-gencat" ];
          "unicode-perl" = [ "regex-syntax/unicode-perl" ];
          "unicode-script" = [ "regex-syntax/unicode-script" ];
          "unicode-segment" = [ "regex-syntax/unicode-segment" ];
          "unstable" = [ "pattern" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "aho-corasick" "default" "memchr" "perf" "perf-cache" "perf-dfa" "perf-inline" "perf-literal" "std" "thread_local" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
      };
      "regex-syntax" = rec {
        crateName = "regex-syntax";
        version = "0.6.17";
        edition = "2015";
        sha256 = "1blmlgzcg7in3kcxqabpfzzrbnamr2i671flbrmlqhfps5bvvrbz";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "unicode" ];
          "unicode" = [ "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
        };
        resolvedDefaultFeatures = [ "default" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
      };
      "remove_dir_all" = rec {
        crateName = "remove_dir_all";
        version = "0.5.2";
        edition = "2015";
        sha256 = "0bkrlyg26mgizpiy1yb2hhpgscxcag8r5fnckqsvk25608vzm0sa";
        authors = [
          "Aaronepower <theaaronepower@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "std" "errhandlingapi" "winerror" "fileapi" "winbase" ];
          }
        ];
        
      };
      "reqwest" = rec {
        crateName = "reqwest";
        version = "0.10.4";
        edition = "2018";
        sha256 = "1qhlasw182dm5x7rvbp92p4pfczmgwqjlpzwvjlhjlgcvm4ixf02";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64 0.11.0";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "bytes";
            packageId = "bytes 0.5.4";
          }
          {
            name = "encoding_rs";
            packageId = "encoding_rs";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "http";
            packageId = "http 0.2.1";
          }
          {
            name = "http-body";
            packageId = "http-body 0.3.1";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "hyper";
            packageId = "hyper 0.13.4";
            usesDefaultFeatures = false;
            target = { target, features }: (!(target."arch" == "wasm32"));
            features = [ "tcp" ];
          }
          {
            name = "hyper-rustls";
            packageId = "hyper-rustls";
            optional = true;
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "js-sys";
            packageId = "js-sys";
            target = { target, features }: (target."arch" == "wasm32");
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "log";
            packageId = "log 0.4.8";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "mime";
            packageId = "mime 0.3.16";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "mime_guess";
            packageId = "mime_guess";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "percent-encoding";
            packageId = "percent-encoding 2.1.0";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "rustls";
            packageId = "rustls";
            optional = true;
            target = { target, features }: (!(target."arch" == "wasm32"));
            features = [ "dangerous_configuration" ];
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
            optional = true;
          }
          {
            name = "serde_urlencoded";
            packageId = "serde_urlencoded";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "time";
            packageId = "time";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "tokio";
            packageId = "tokio 0.2.17";
            usesDefaultFeatures = false;
            target = { target, features }: (!(target."arch" == "wasm32"));
            features = [ "tcp" "time" ];
          }
          {
            name = "tokio-rustls";
            packageId = "tokio-rustls";
            optional = true;
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "url";
            packageId = "url 2.1.1";
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
            target = { target, features }: (target."arch" == "wasm32");
            features = [ "serde-serialize" ];
          }
          {
            name = "wasm-bindgen-futures";
            packageId = "wasm-bindgen-futures";
            target = { target, features }: (target."arch" == "wasm32");
          }
          {
            name = "web-sys";
            packageId = "web-sys";
            target = { target, features }: (target."arch" == "wasm32");
            features = [ "Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" ];
          }
          {
            name = "webpki-roots";
            packageId = "webpki-roots";
            optional = true;
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "winreg";
            packageId = "winreg";
            target = { target, features }: target."windows";
          }
        ];
        devDependencies = [
          {
            name = "hyper";
            packageId = "hyper 0.13.4";
            usesDefaultFeatures = false;
            target = {target, features}: (!(target."arch" == "wasm32"));
            features = [ "tcp" "stream" ];
          }
          {
            name = "serde";
            packageId = "serde";
            target = {target, features}: (!(target."arch" == "wasm32"));
            features = [ "derive" ];
          }
          {
            name = "tokio";
            packageId = "tokio 0.2.17";
            usesDefaultFeatures = false;
            target = {target, features}: (!(target."arch" == "wasm32"));
            features = [ "macros" ];
          }
        ];
        features = {
          "blocking" = [ "futures-util/io" "tokio/rt-threaded" "tokio/rt-core" "tokio/sync" ];
          "brotli" = [ "async-compression" "async-compression/brotli" ];
          "cookies" = [ "cookie_crate" "cookie_store" ];
          "default" = [ "default-tls" ];
          "default-tls" = [ "hyper-tls" "native-tls-crate" "__tls" "tokio-tls" ];
          "gzip" = [ "async-compression" "async-compression/gzip" ];
          "json" = [ "serde_json" ];
          "native-tls" = [ "default-tls" ];
          "native-tls-vendored" = [ "native-tls" "native-tls-crate/vendored" ];
          "rustls-tls" = [ "hyper-rustls" "tokio-rustls" "webpki-roots" "rustls" "__tls" ];
          "socks" = [ "tokio-socks" ];
          "trust-dns" = [ "trust-dns-resolver" ];
        };
        resolvedDefaultFeatures = [ "__tls" "blocking" "hyper-rustls" "json" "rustls" "rustls-tls" "serde_json" "tokio-rustls" "webpki-roots" ];
      };
      "ring" = rec {
        crateName = "ring";
        version = "0.16.12";
        edition = "2018";
        sha256 = "033sb54dlmiqdivc8v9ykkq3v08lzy0syjf5k1nag2gfcknai98v";
        authors = [
          "Brian Smith <brian@briansmith.org>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: ((target."os" == "android") || (target."os" == "freebsd") || (target."os" == "linux") || (target."os" == "netbsd") || (target."os" == "openbsd") || (target."os" == "solaris"));
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: ((target."os" == "android") || (target."os" == "linux"));
          }
          {
            name = "spin";
            packageId = "spin";
            usesDefaultFeatures = false;
            target = { target, features }: (((target."arch" == "aarch64") || (target."arch" == "arm") || (target."arch" == "x86") || (target."arch" == "x86_64")) && (!(target."os" == "ios")));
          }
          {
            name = "untrusted";
            packageId = "untrusted";
          }
          {
            name = "web-sys";
            packageId = "web-sys";
            usesDefaultFeatures = false;
            target = { target, features }: ((target."arch" == "wasm32") && (target."vendor" == "unknown") && (target."os" == "unknown") && (target."env" == ""));
            features = [ "Crypto" "Window" ];
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            usesDefaultFeatures = false;
            target = { target, features }: (target."os" == "windows");
            features = [ "ntsecapi" "wtypesbase" ];
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = {target, features}: (target."unix" || target."windows");
          }
        ];
        features = {
          "default" = [ "alloc" "dev_urandom_fallback" ];
          "dev_urandom_fallback" = [ "lazy_static" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "dev_urandom_fallback" "lazy_static" ];
      };
      "rocksdb" = rec {
        crateName = "rocksdb";
        version = "0.13.0";
        edition = "2015";
        sha256 = "0hz6q63bbj2l970vf855g43jsj2icz4d2zdb7qyi1il1d489n1hj";
        authors = [
          "Tyler Neely <t@jujit.su>"
          "David Greenberg <dsg123456789@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "librocksdb-sys";
            packageId = "librocksdb-sys";
          }
        ];
        features = {
          "bzip2" = [ "librocksdb-sys/bzip2" ];
          "default" = [ "snappy" "lz4" "zstd" "zlib" "bzip2" ];
          "lz4" = [ "librocksdb-sys/lz4" ];
          "snappy" = [ "librocksdb-sys/snappy" ];
          "zlib" = [ "librocksdb-sys/zlib" ];
          "zstd" = [ "librocksdb-sys/zstd" ];
        };
        resolvedDefaultFeatures = [ "lz4" ];
      };
      "rpassword" = rec {
        crateName = "rpassword";
        version = "4.0.5";
        edition = "2015";
        sha256 = "17z99xazhhbaczw0ib1vnnq450j0zacdn8b2zcbdir68sdbicdwr";
        authors = [
          "Conrad Kleinespel <conradk@conradk.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "std" "winnt" "fileapi" "processenv" "winbase" "handleapi" "consoleapi" "minwindef" "wincon" ];
          }
        ];
        
      };
      "rust-argon2" = rec {
        crateName = "rust-argon2";
        version = "0.7.0";
        edition = "2018";
        sha256 = "05xh5wfxgzq3b6jys8r34f3hmqqfs8ylvf934n9z87wfv95szj1b";
        libName = "argon2";
        authors = [
          "Martijn Rijkeboer <mrr@sru-systems.com>"
        ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64 0.11.0";
          }
          {
            name = "blake2b_simd";
            packageId = "blake2b_simd";
          }
          {
            name = "constant_time_eq";
            packageId = "constant_time_eq";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils";
          }
        ];
        
      };
      "rustc-demangle" = rec {
        crateName = "rustc-demangle";
        version = "0.1.16";
        edition = "2015";
        sha256 = "10qp42sl1wrdbgbbh8rnay2grm976z7hqgz32c4y09l1c071qsac";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
      "rustc-hash" = rec {
        crateName = "rustc-hash";
        version = "1.1.0";
        edition = "2015";
        sha256 = "1qkc5khrmv5pqi5l5ca9p5nl5hs742cagrndhbrlk3dhlrx3zm08";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "rustc_version" = rec {
        crateName = "rustc_version";
        version = "0.2.3";
        edition = "2015";
        sha256 = "02h3x57lcr8l2pm0a645s9whdh33pn5cnrwvn5cb57vcrc53x3hk";
        authors = [
          "Marvin L√∂bel <loebel.marvin@gmail.com>"
        ];
        dependencies = [
          {
            name = "semver";
            packageId = "semver";
          }
        ];
        
      };
      "rustls" = rec {
        crateName = "rustls";
        version = "0.17.0";
        edition = "2018";
        sha256 = "1q8m835viqrf4bbd2fa8rnmaj48fkd984saxf0238hb8blgs7m60";
        authors = [
          "Joseph Birr-Pixton <jpixton@gmail.com>"
        ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64 0.11.0";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
            optional = true;
          }
          {
            name = "ring";
            packageId = "ring";
          }
          {
            name = "sct";
            packageId = "sct";
          }
          {
            name = "webpki";
            packageId = "webpki";
          }
        ];
        devDependencies = [
          {
            name = "log";
            packageId = "log 0.4.8";
          }
        ];
        features = {
          "default" = [ "logging" ];
          "logging" = [ "log" ];
        };
        resolvedDefaultFeatures = [ "dangerous_configuration" "default" "log" "logging" ];
      };
      "rustls-native-certs" = rec {
        crateName = "rustls-native-certs";
        version = "0.3.0";
        edition = "2018";
        sha256 = "199398ics5hl3v7bzw288wz3mnqmwhn5869if4ad1nbb9awgwpx7";
        authors = [
          "Joseph Birr-Pixton <jpixton@gmail.com>"
        ];
        dependencies = [
          {
            name = "openssl-probe";
            packageId = "openssl-probe";
            target = { target, features }: (target."unix" && (!(target."os" == "macos")));
          }
          {
            name = "rustls";
            packageId = "rustls";
          }
          {
            name = "schannel";
            packageId = "schannel";
            target = { target, features }: target."windows";
          }
          {
            name = "security-framework";
            packageId = "security-framework";
            target = { target, features }: (target."os" == "macos");
          }
        ];
        
      };
      "ryu" = rec {
        crateName = "ryu";
        version = "1.0.3";
        edition = "2015";
        sha256 = "0xlx9ybzncrb7d6r9533g8ydlg6mr252pfzl4g9cqaqkpvk24mjk";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
        };
      };
      "safemem" = rec {
        crateName = "safemem";
        version = "0.3.3";
        edition = "2015";
        sha256 = "0wp0d2b2284lw11xhybhaszsczpbq1jbdklkxgifldcknmy3nw7g";
        authors = [
          "Austin Bonander <austin.bonander@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "same-file" = rec {
        crateName = "same-file";
        version = "1.0.6";
        edition = "2018";
        sha256 = "00h5j1w87dmhnvbv9l8bic3y7xxsnjmssvifw2ayvgx9mb1ivz4k";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi-util";
            packageId = "winapi-util";
            target = { target, features }: target."windows";
          }
        ];
        
      };
      "schannel" = rec {
        crateName = "schannel";
        version = "0.1.18";
        edition = "2015";
        sha256 = "06fdagm55j6g26bv4jsffk1ak7v5wbyyfz9dxqhi735x62qjb703";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
          "Steffen Butzer <steffen.butzer@outlook.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            features = [ "lmcons" "minschannel" "securitybaseapi" "schannel" "sspi" "sysinfoapi" "timezoneapi" "winbase" "wincrypt" "winerror" ];
          }
        ];
        
      };
      "scopeguard" = rec {
        crateName = "scopeguard";
        version = "1.1.0";
        edition = "2015";
        sha256 = "1kbqm85v43rq92vx7hfiay6pmcga03vrjbbfwqpyj3pwsg3b16nj";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
      };
      "sct" = rec {
        crateName = "sct";
        version = "0.6.0";
        edition = "2018";
        sha256 = "0g4dz7las43kcpi9vqv9c6l1afjkdv3g3w3s7d2w7a7w77wjl173";
        authors = [
          "Joseph Birr-Pixton <jpixton@gmail.com>"
        ];
        dependencies = [
          {
            name = "ring";
            packageId = "ring";
          }
          {
            name = "untrusted";
            packageId = "untrusted";
          }
        ];
        
      };
      "security-framework" = rec {
        crateName = "security-framework";
        version = "0.4.2";
        edition = "2015";
        sha256 = "0jhlqjrw6i95fbgvk7pdx4sblhadz6ybxd5m8ix9wl450wxglbap";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
          "Kornel <kornel@geekhood.net>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "core-foundation";
            packageId = "core-foundation";
          }
          {
            name = "core-foundation-sys";
            packageId = "core-foundation-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "security-framework-sys";
            packageId = "security-framework-sys";
          }
        ];
        features = {
          "OSX_10_10" = [ "OSX_10_9" "security-framework-sys/OSX_10_10" ];
          "OSX_10_11" = [ "OSX_10_10" "security-framework-sys/OSX_10_11" ];
          "OSX_10_12" = [ "OSX_10_11" "security-framework-sys/OSX_10_12" ];
          "OSX_10_13" = [ "OSX_10_12" "security-framework-sys/OSX_10_13" "alpn" "session-tickets" ];
          "OSX_10_9" = [ "security-framework-sys/OSX_10_9" ];
        };
      };
      "security-framework-sys" = rec {
        crateName = "security-framework-sys";
        version = "0.4.2";
        edition = "2015";
        sha256 = "0ks0gddlw85pyv0gfs9mcwairmfqql4n1sd9p0hp0fy9zsjibnwd";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
          "Kornel <kornel@geekhood.net>"
        ];
        dependencies = [
          {
            name = "core-foundation-sys";
            packageId = "core-foundation-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "OSX_10_10" = [ "OSX_10_9" ];
          "OSX_10_11" = [ "OSX_10_10" ];
          "OSX_10_12" = [ "OSX_10_11" ];
          "OSX_10_13" = [ "OSX_10_12" ];
        };
      };
      "semver" = rec {
        crateName = "semver";
        version = "0.9.0";
        edition = "2015";
        sha256 = "00q4lkcj0rrgbhviv9sd4p6qmdsipkwkbra7rh11jrhq5kpvjzhx";
        authors = [
          "Steve Klabnik <steve@steveklabnik.com>"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "semver-parser";
            packageId = "semver-parser";
          }
        ];
        features = {
          "ci" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "semver-parser" = rec {
        crateName = "semver-parser";
        version = "0.7.0";
        edition = "2015";
        sha256 = "18vhypw6zgccnrlm5ps1pwa0khz7ry927iznpr88b87cagr1v2iq";
        authors = [
          "Steve Klabnik <steve@steveklabnik.com>"
        ];
        
      };
      "serde" = rec {
        crateName = "serde";
        version = "1.0.106";
        edition = "2015";
        sha256 = "169kg1px2k0hlxziiikdwy42wnrs2gjbvsv7yxygcwi08736mprn";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde_derive";
            packageId = "serde_derive";
            optional = true;
          }
        ];
        devDependencies = [
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
        ];
        features = {
          "default" = [ "std" ];
          "derive" = [ "serde_derive" ];
        };
        resolvedDefaultFeatures = [ "default" "derive" "rc" "serde_derive" "std" ];
      };
      "serde_bytes" = rec {
        crateName = "serde_bytes";
        version = "0.11.3";
        edition = "2018";
        sha256 = "1bl45kf3c71xclv7wzk5525nswm4bgsnjd3s1s15f4k2a8whfnij";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "serde/alloc" ];
          "default" = [ "std" ];
          "std" = [ "serde/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "serde_derive" = rec {
        crateName = "serde_derive";
        version = "1.0.106";
        edition = "2015";
        sha256 = "0v7a2rkpx9hi70pv2wr2h0h07rgmr7gi37v0s4dn5f2gpwx9wm4y";
        procMacro = true;
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.10";
          }
          {
            name = "quote";
            packageId = "quote 1.0.3";
          }
          {
            name = "syn";
            packageId = "syn 1.0.17";
            features = [ "visit" ];
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "serde_json" = rec {
        crateName = "serde_json";
        version = "1.0.51";
        edition = "2018";
        sha256 = "1acd43sc1g9w4hzfa2kfbahj44r61fxqh14s3qsnhcv2w9zba1ys";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "itoa";
            packageId = "itoa";
            usesDefaultFeatures = false;
          }
          {
            name = "ryu";
            packageId = "ryu";
          }
          {
            name = "serde";
            packageId = "serde";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "serde/alloc" ];
          "default" = [ "std" ];
          "preserve_order" = [ "indexmap" ];
          "std" = [ "serde/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "serde_urlencoded" = rec {
        crateName = "serde_urlencoded";
        version = "0.6.1";
        edition = "2015";
        sha256 = "15rcwfkff0md5i231m2ym5756ksw1mkh5b5g2rw72wsc5mzdgicy";
        authors = [
          "Anthony Ramine <n.oxyde@gmail.com>"
        ];
        dependencies = [
          {
            name = "dtoa";
            packageId = "dtoa";
          }
          {
            name = "itoa";
            packageId = "itoa";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "url";
            packageId = "url 2.1.1";
          }
        ];
        
      };
      "serde_yaml" = rec {
        crateName = "serde_yaml";
        version = "0.8.11";
        edition = "2018";
        sha256 = "0d9wdjrlx9gxg80kzc6pvdwz5pwhja2n8n0bxja9vv61kzqif6v9";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "dtoa";
            packageId = "dtoa";
          }
          {
            name = "linked-hash-map";
            packageId = "linked-hash-map";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "yaml-rust";
            packageId = "yaml-rust";
          }
        ];
        
      };
      "sha-1" = rec {
        crateName = "sha-1";
        version = "0.8.2";
        edition = "2015";
        sha256 = "1pv387q0r7llk2cqzyq0nivzvkgqgzsiygqzlv7b68z9xl5lvngp";
        libName = "sha1";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "block-buffer";
            packageId = "block-buffer 0.7.3";
          }
          {
            name = "digest";
            packageId = "digest 0.8.1";
          }
          {
            name = "fake-simd";
            packageId = "fake-simd";
          }
          {
            name = "opaque-debug";
            packageId = "opaque-debug";
          }
        ];
        devDependencies = [
          {
            name = "digest";
            packageId = "digest 0.8.1";
            features = [ "dev" ];
          }
        ];
        features = {
          "asm" = [ "sha1-asm" ];
          "asm-aarch64" = [ "asm" "libc" ];
          "default" = [ "std" ];
          "std" = [ "digest/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "sha1" = rec {
        crateName = "sha1";
        version = "0.6.0";
        edition = "2015";
        sha256 = "03gs2q4m67rn2p8xcdfxhip6mpgahdwm12bnb3vh90ahv9grhy95";
        authors = [
          "Armin Ronacher <armin.ronacher@active-4.com>"
        ];
        features = {
        };
      };
      "sha2 0.7.1" = rec {
        crateName = "sha2";
        version = "0.7.1";
        edition = "2015";
        sha256 = "183yhkj16i7yzdp8i7aavpy329vz5xrd502233bq8fn2whjbxdly";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "block-buffer";
            packageId = "block-buffer 0.3.3";
          }
          {
            name = "byte-tools";
            packageId = "byte-tools 0.2.0";
          }
          {
            name = "digest";
            packageId = "digest 0.7.6";
          }
          {
            name = "fake-simd";
            packageId = "fake-simd";
          }
        ];
        devDependencies = [
          {
            name = "digest";
            packageId = "digest 0.7.6";
            features = [ "dev" ];
          }
        ];
        features = {
          "asm" = [ "sha2-asm" ];
        };
      };
      "sha2 0.8.1" = rec {
        crateName = "sha2";
        version = "0.8.1";
        edition = "2015";
        sha256 = "1827pplynq0ahxid1xq281kiv56kj2afp7gm97v7gw71sbgll117";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "block-buffer";
            packageId = "block-buffer 0.7.3";
          }
          {
            name = "digest";
            packageId = "digest 0.8.1";
          }
          {
            name = "fake-simd";
            packageId = "fake-simd";
          }
          {
            name = "opaque-debug";
            packageId = "opaque-debug";
          }
        ];
        devDependencies = [
          {
            name = "digest";
            packageId = "digest 0.8.1";
            features = [ "dev" ];
          }
        ];
        features = {
          "asm" = [ "sha2-asm" ];
          "asm-aarch64" = [ "asm" "libc" ];
          "default" = [ "std" ];
          "std" = [ "digest/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "shlex" = rec {
        crateName = "shlex";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1lmv6san7g8dv6jdfp14m7bdczq9ss7j7bgsfqyqjc3jnjfippvz";
        authors = [
          "comex <comexk@gmail.com>"
        ];
        
      };
      "slab" = rec {
        crateName = "slab";
        version = "0.4.2";
        edition = "2015";
        sha256 = "1y59xsa27jk84sxzswjk60xcjf8b4fm5960jwpznrrcmasyva4f1";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        
      };
      "smallvec 0.6.13" = rec {
        crateName = "smallvec";
        version = "0.6.13";
        edition = "2015";
        sha256 = "1dl219vnfkmsfx28lm3f83lyw24zap6fdsli6rg8nnp1aa67bc7p";
        libPath = "lib.rs";
        authors = [
          "Simon Sapin <simon.sapin@exyr.org>"
        ];
        dependencies = [
          {
            name = "maybe-uninit";
            packageId = "maybe-uninit";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "smallvec 1.3.0" = rec {
        crateName = "smallvec";
        version = "1.3.0";
        edition = "2018";
        sha256 = "02jf46c35hzb0bhhd95cqp1jc0nha2pcx6ba9xry86arc4i0wwh5";
        libPath = "lib.rs";
        authors = [
          "Simon Sapin <simon.sapin@exyr.org>"
        ];
        features = {
        };
      };
      "socket2" = rec {
        crateName = "socket2";
        version = "0.3.12";
        edition = "2018";
        sha256 = "062921z4yc29mwzxx982nwd1kb8lnfqyvhncydbf7p3pys9qf203";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
            target = { target, features }: (target."unix" || (target."os" == "redox"));
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" || (target."os" == "redox"));
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "handleapi" "ws2def" "ws2ipdef" "ws2tcpip" "minwindef" ];
          }
        ];
        features = {
        };
      };
      "solana-archiver-utils" = rec {
        crateName = "solana-archiver-utils";
        version = "1.1.3";
        edition = "2018";
        sha256 = "1clvqmrgcznv3gvx83clvbq36f5j1brj9vp6ivv4kxn0wi80iizv";
        libName = "solana_archiver_utils";
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "rand";
            packageId = "rand 0.6.5";
          }
          {
            name = "solana-chacha";
            packageId = "solana-chacha";
          }
          {
            name = "solana-chacha-sys";
            packageId = "solana-chacha-sys";
          }
          {
            name = "solana-ledger";
            packageId = "solana-ledger";
          }
          {
            name = "solana-logger";
            packageId = "solana-logger";
          }
          {
            name = "solana-perf";
            packageId = "solana-perf";
          }
          {
            name = "solana-sdk";
            packageId = "solana-sdk";
          }
        ];
        
      };
      "solana-bpf-loader-program" = rec {
        crateName = "solana-bpf-loader-program";
        version = "1.1.3";
        edition = "2018";
        sha256 = "0igr7dsy7kw416g34cq2w54xrfyb6q99s9577c5zqigga99p90jg";
        libName = "solana_bpf_loader_program";type = [ "lib" "cdylib" ];
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "bincode";
            packageId = "bincode";
          }
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "num-derive";
            packageId = "num-derive 0.3.0";
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
          }
          {
            name = "solana-logger";
            packageId = "solana-logger";
          }
          {
            name = "solana-sdk";
            packageId = "solana-sdk";
          }
          {
            name = "solana_rbpf";
            packageId = "solana_rbpf";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];
        
      };
      "solana-budget-program" = rec {
        crateName = "solana-budget-program";
        version = "1.1.3";
        edition = "2018";
        sha256 = "0w9a6pv4sikfszki05zfldn81zysb3pfj0r7qfdp7qcw73394zhf";
        libName = "solana_budget_program";type = [ "lib" "cdylib" ];
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "bincode";
            packageId = "bincode";
          }
          {
            name = "chrono";
            packageId = "chrono";
            features = [ "serde" ];
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "num-derive";
            packageId = "num-derive 0.3.0";
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "solana-sdk";
            packageId = "solana-sdk";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];
        
      };
      "solana-chacha" = rec {
        crateName = "solana-chacha";
        version = "1.1.3";
        edition = "2018";
        sha256 = "0cjc8w3rd55913bm747s5f6612pkbxydy1ixp5k7kcwlz5rb2l5y";
        libName = "solana_chacha";
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "rand";
            packageId = "rand 0.6.5";
          }
          {
            name = "rand_chacha";
            packageId = "rand_chacha 0.1.1";
          }
          {
            name = "solana-chacha-sys";
            packageId = "solana-chacha-sys";
          }
          {
            name = "solana-ledger";
            packageId = "solana-ledger";
          }
          {
            name = "solana-logger";
            packageId = "solana-logger";
          }
          {
            name = "solana-perf";
            packageId = "solana-perf";
          }
          {
            name = "solana-sdk";
            packageId = "solana-sdk";
          }
        ];
        
      };
      "solana-chacha-cuda" = rec {
        crateName = "solana-chacha-cuda";
        version = "1.1.3";
        edition = "2018";
        sha256 = "1pgp6ggda7kgqgwx6jj6sxv8xm7giql2pdqwfy1a38r6rn9sh52a";
        libName = "solana_chacha_cuda";
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "solana-archiver-utils";
            packageId = "solana-archiver-utils";
          }
          {
            name = "solana-chacha";
            packageId = "solana-chacha";
          }
          {
            name = "solana-ledger";
            packageId = "solana-ledger";
          }
          {
            name = "solana-logger";
            packageId = "solana-logger";
          }
          {
            name = "solana-perf";
            packageId = "solana-perf";
          }
          {
            name = "solana-sdk";
            packageId = "solana-sdk";
          }
        ];
        
      };
      "solana-chacha-sys" = rec {
        crateName = "solana-chacha-sys";
        version = "1.1.3";
        edition = "2018";
        sha256 = "09mdqpzqjlas3r2b4d94ccwbqc8h4480wkdqy7pza632vix62y6g";
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];
        
      };
      "solana-clap-utils" = rec {
        crateName = "solana-clap-utils";
        version = "1.1.3";
        edition = "2018";
        sha256 = "026ks3r1m2fqqq5qqxmwdkvwn5y2ifnwwrix65f8s4qiprgllmm9";
        libName = "solana_clap_utils";
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "chrono";
            packageId = "chrono";
          }
          {
            name = "clap";
            packageId = "clap";
          }
          {
            name = "rpassword";
            packageId = "rpassword";
          }
          {
            name = "solana-remote-wallet";
            packageId = "solana-remote-wallet";
          }
          {
            name = "solana-sdk";
            packageId = "solana-sdk";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "tiny-bip39";
            packageId = "tiny-bip39";
          }
          {
            name = "url";
            packageId = "url 2.1.1";
          }
        ];
        
      };
      "solana-cli" = rec {
        crateName = "solana-cli";
        version = "1.1.3";
        edition = "2018";
        crateBin = [
          { name = "solana"; path = "src/main.rs"; }
        ];
        src = pkgs.callPackage ./tarball-v1.1.3.nix {};
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "bincode";
            packageId = "bincode";
          }
          {
            name = "bs58";
            packageId = "bs58";
          }
          {
            name = "chrono";
            packageId = "chrono";
            features = [ "serde" ];
          }
          {
            name = "clap";
            packageId = "clap";
          }
          {
            name = "console";
            packageId = "console";
          }
          {
            name = "criterion-stats";
            packageId = "criterion-stats";
          }
          {
            name = "ctrlc";
            packageId = "ctrlc";
            features = [ "termination" ];
          }
          {
            name = "dirs";
            packageId = "dirs";
          }
          {
            name = "humantime";
            packageId = "humantime 2.0.0";
          }
          {
            name = "indicatif";
            packageId = "indicatif";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
          }
          {
            name = "pretty-hex";
            packageId = "pretty-hex";
          }
          {
            name = "reqwest";
            packageId = "reqwest";
            usesDefaultFeatures = false;
            features = [ "blocking" "rustls-tls" "json" ];
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "solana-budget-program";
            packageId = "solana-budget-program";
          }
          {
            name = "solana-clap-utils";
            packageId = "solana-clap-utils";
          }
          {
            name = "solana-cli-config";
            packageId = "solana-cli-config";
          }
          {
            name = "solana-client";
            packageId = "solana-client";
          }
          {
            name = "solana-config-program";
            packageId = "solana-config-program";
          }
          {
            name = "solana-faucet";
            packageId = "solana-faucet";
          }
          {
            name = "solana-logger";
            packageId = "solana-logger";
          }
          {
            name = "solana-net-utils";
            packageId = "solana-net-utils";
          }
          {
            name = "solana-remote-wallet";
            packageId = "solana-remote-wallet";
          }
          {
            name = "solana-runtime";
            packageId = "solana-runtime";
          }
          {
            name = "solana-sdk";
            packageId = "solana-sdk";
          }
          {
            name = "solana-stake-program";
            packageId = "solana-stake-program";
          }
          {
            name = "solana-storage-program";
            packageId = "solana-storage-program";
          }
          {
            name = "solana-vote-program";
            packageId = "solana-vote-program";
          }
          {
            name = "solana-vote-signer";
            packageId = "solana-vote-signer";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "titlecase";
            packageId = "titlecase";
          }
          {
            name = "url";
            packageId = "url 2.1.1";
          }
        ];
        devDependencies = [
          {
            name = "solana-budget-program";
            packageId = "solana-budget-program";
          }
          {
            name = "solana-core";
            packageId = "solana-core";
          }
          {
            name = "tempfile";
            packageId = "tempfile";
          }
        ];
        
      };
      "solana-cli-config" = rec {
        crateName = "solana-cli-config";
        version = "1.1.3";
        edition = "2018";
        sha256 = "1zk3gmljd3cpgnxvjsdfq09agacwi156dymdybsbrgb42zp8a1lx";
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "dirs";
            packageId = "dirs";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "serde_yaml";
            packageId = "serde_yaml";
          }
          {
            name = "url";
            packageId = "url 2.1.1";
          }
        ];
        
      };
      "solana-client" = rec {
        crateName = "solana-client";
        version = "1.1.3";
        edition = "2018";
        sha256 = "0csfy68hmd7xmsfyij6zbjhai8f51pmakik4pkdj527aj397m7w7";
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "bincode";
            packageId = "bincode";
          }
          {
            name = "bs58";
            packageId = "bs58";
          }
          {
            name = "indicatif";
            packageId = "indicatif";
          }
          {
            name = "jsonrpc-core";
            packageId = "jsonrpc-core";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "rayon";
            packageId = "rayon";
          }
          {
            name = "reqwest";
            packageId = "reqwest";
            usesDefaultFeatures = false;
            features = [ "blocking" "rustls-tls" "json" ];
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "solana-net-utils";
            packageId = "solana-net-utils";
          }
          {
            name = "solana-sdk";
            packageId = "solana-sdk";
          }
          {
            name = "solana-transaction-status";
            packageId = "solana-transaction-status";
          }
          {
            name = "solana-vote-program";
            packageId = "solana-vote-program";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "tungstenite";
            packageId = "tungstenite";
          }
          {
            name = "url";
            packageId = "url 2.1.1";
          }
        ];
        devDependencies = [
          {
            name = "jsonrpc-core";
            packageId = "jsonrpc-core";
          }
        ];
        
      };
      "solana-config-program" = rec {
        crateName = "solana-config-program";
        version = "1.1.3";
        edition = "2018";
        sha256 = "04nl8fwb9y6i9lhj03y7ml8nmxd47vf6c1anl2qwyk447y8qim3c";
        libName = "solana_config_program";type = [ "lib" "cdylib" ];
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "bincode";
            packageId = "bincode";
          }
          {
            name = "chrono";
            packageId = "chrono";
            features = [ "serde" ];
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "solana-logger";
            packageId = "solana-logger";
          }
          {
            name = "solana-sdk";
            packageId = "solana-sdk";
          }
        ];
        
      };
      "solana-core" = rec {
        crateName = "solana-core";
        version = "1.1.3";
        edition = "2018";
        sha256 = "0p38hr06vhm5qxhg8wmm90cia10zqid3gsvb99wjl953zap95rr8";
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "bincode";
            packageId = "bincode";
          }
          {
            name = "bs58";
            packageId = "bs58";
          }
          {
            name = "bv";
            packageId = "bv";
            features = [ "serde" ];
          }
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "chrono";
            packageId = "chrono";
            features = [ "serde" ];
          }
          {
            name = "core_affinity";
            packageId = "core_affinity";
          }
          {
            name = "crossbeam-channel";
            packageId = "crossbeam-channel";
          }
          {
            name = "ed25519-dalek";
            packageId = "ed25519-dalek";
          }
          {
            name = "flate2";
            packageId = "flate2";
          }
          {
            name = "fs_extra";
            packageId = "fs_extra";
          }
          {
            name = "indexmap";
            packageId = "indexmap";
          }
          {
            name = "itertools";
            packageId = "itertools 0.9.0";
          }
          {
            name = "jsonrpc-core";
            packageId = "jsonrpc-core";
          }
          {
            name = "jsonrpc-core-client";
            packageId = "jsonrpc-core-client";
            features = [ "ws" ];
          }
          {
            name = "jsonrpc-derive";
            packageId = "jsonrpc-derive";
          }
          {
            name = "jsonrpc-http-server";
            packageId = "jsonrpc-http-server";
          }
          {
            name = "jsonrpc-pubsub";
            packageId = "jsonrpc-pubsub";
          }
          {
            name = "jsonrpc-ws-server";
            packageId = "jsonrpc-ws-server";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
          {
            name = "rand";
            packageId = "rand 0.6.5";
          }
          {
            name = "rand_chacha";
            packageId = "rand_chacha 0.1.1";
          }
          {
            name = "rayon";
            packageId = "rayon";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "solana-budget-program";
            packageId = "solana-budget-program";
          }
          {
            name = "solana-chacha-cuda";
            packageId = "solana-chacha-cuda";
          }
          {
            name = "solana-clap-utils";
            packageId = "solana-clap-utils";
          }
          {
            name = "solana-client";
            packageId = "solana-client";
          }
          {
            name = "solana-faucet";
            packageId = "solana-faucet";
          }
          {
            name = "solana-ledger";
            packageId = "solana-ledger";
          }
          {
            name = "solana-logger";
            packageId = "solana-logger";
          }
          {
            name = "solana-measure";
            packageId = "solana-measure";
          }
          {
            name = "solana-merkle-tree";
            packageId = "solana-merkle-tree";
          }
          {
            name = "solana-metrics";
            packageId = "solana-metrics";
          }
          {
            name = "solana-net-utils";
            packageId = "solana-net-utils";
          }
          {
            name = "solana-perf";
            packageId = "solana-perf";
          }
          {
            name = "solana-rayon-threadlimit";
            packageId = "solana-rayon-threadlimit";
          }
          {
            name = "solana-runtime";
            packageId = "solana-runtime";
          }
          {
            name = "solana-sdk";
            packageId = "solana-sdk";
          }
          {
            name = "solana-stake-program";
            packageId = "solana-stake-program";
          }
          {
            name = "solana-storage-program";
            packageId = "solana-storage-program";
          }
          {
            name = "solana-streamer";
            packageId = "solana-streamer";
          }
          {
            name = "solana-sys-tuner";
            packageId = "solana-sys-tuner";
          }
          {
            name = "solana-transaction-status";
            packageId = "solana-transaction-status";
          }
          {
            name = "solana-vote-program";
            packageId = "solana-vote-program";
          }
          {
            name = "solana-vote-signer";
            packageId = "solana-vote-signer";
          }
          {
            name = "tempfile";
            packageId = "tempfile";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "tokio";
            packageId = "tokio 0.1.22";
          }
          {
            name = "tokio-codec";
            packageId = "tokio-codec";
          }
          {
            name = "tokio-fs";
            packageId = "tokio-fs";
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
          }
          {
            name = "trees";
            packageId = "trees";
          }
        ];
        
      };
      "solana-crate-features" = rec {
        crateName = "solana-crate-features";
        version = "1.1.3";
        edition = "2018";
        sha256 = "1x0p65gx6jc8lkblsi6blifk6sppmhv108zqi84qpqxxpj2jnk03";
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "backtrace";
            packageId = "backtrace";
            features = [ "serialize-serde" ];
          }
          {
            name = "bytes";
            packageId = "bytes 0.4.12";
            features = [ "either" ];
          }
          {
            name = "cc";
            packageId = "cc";
            features = [ "jobserver" "num_cpus" "parallel" ];
          }
          {
            name = "curve25519-dalek";
            packageId = "curve25519-dalek";
          }
          {
            name = "ed25519-dalek";
            packageId = "ed25519-dalek";
            features = [ "serde" ];
          }
          {
            name = "either";
            packageId = "either";
          }
          {
            name = "failure";
            packageId = "failure";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
            features = [ "spin" "spin_no_std" ];
          }
          {
            name = "libc";
            packageId = "libc";
            features = [ "extra_traits" ];
          }
          {
            name = "rand_chacha";
            packageId = "rand_chacha 0.1.1";
          }
          {
            name = "regex-syntax";
            packageId = "regex-syntax";
          }
          {
            name = "reqwest";
            packageId = "reqwest";
            usesDefaultFeatures = false;
            features = [ "blocking" "rustls-tls" "json" ];
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "rc" ];
          }
          {
            name = "syn";
            packageId = "syn 0.15.44";
            rename = "syn_0_15";
            features = [ "extra-traits" "fold" "full" ];
          }
          {
            name = "syn";
            packageId = "syn 1.0.17";
            rename = "syn_1_0";
            features = [ "extra-traits" "fold" "full" ];
          }
          {
            name = "tokio";
            packageId = "tokio 0.1.22";
            features = [ "bytes" "codec" "default" "fs" "io" "mio" "num_cpus" "reactor" "rt-full" "sync" "tcp" "timer" "tokio-codec" "tokio-current-thread" "tokio-executor" "tokio-io" "tokio-io" "tokio-reactor" "tokio-tcp" "tokio-tcp" "tokio-threadpool" "tokio-timer" "tokio-udp" "tokio-uds" "udp" "uds" ];
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            features = [ "basetsd" "consoleapi" "errhandlingapi" "fileapi" "handleapi" "impl-debug" "impl-default" "knownfolders" "libloaderapi" "memoryapi" "minwinbase" "minwindef" "ntdef" "ntsecapi" "ntstatus" "objbase" "processenv" "processthreadsapi" "profileapi" "shlobj" "std" "synchapi" "sysinfoapi" "timezoneapi" "utilapiset" "winbase" "wincon" "windef" "winerror" "winnls" "winnt" "winreg" "winsock2" "winuser" "ws2def" "ws2ipdef" "ws2tcpip" "wtypesbase" ];
          }
        ];
        
      };
      "solana-exchange-program" = rec {
        crateName = "solana-exchange-program";
        version = "1.1.3";
        edition = "2018";
        sha256 = "1if4lglww6lsm2mi4kv5nfzk3fxv8nf4049nymhm4sbbp6c5gvz2";
        libName = "solana_exchange_program";type = [ "lib" "cdylib" ];
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "bincode";
            packageId = "bincode";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "num-derive";
            packageId = "num-derive 0.3.0";
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "solana-logger";
            packageId = "solana-logger";
          }
          {
            name = "solana-metrics";
            packageId = "solana-metrics";
          }
          {
            name = "solana-sdk";
            packageId = "solana-sdk";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];
        
      };
      "solana-faucet" = rec {
        crateName = "solana-faucet";
        version = "1.1.3";
        edition = "2018";
        crateBin = [];
        sha256 = "1i0q8zbcwkjfgfq4wcgl7bkjxkzk7ly6ncf5vlzxydcipd7lm51y";
        libName = "solana_faucet";
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "bincode";
            packageId = "bincode";
          }
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "bytes";
            packageId = "bytes 0.4.12";
          }
          {
            name = "clap";
            packageId = "clap";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "solana-clap-utils";
            packageId = "solana-clap-utils";
          }
          {
            name = "solana-logger";
            packageId = "solana-logger";
          }
          {
            name = "solana-metrics";
            packageId = "solana-metrics";
          }
          {
            name = "solana-sdk";
            packageId = "solana-sdk";
          }
          {
            name = "tokio";
            packageId = "tokio 0.1.22";
          }
          {
            name = "tokio-codec";
            packageId = "tokio-codec";
          }
        ];
        
      };
      "solana-genesis-programs" = rec {
        crateName = "solana-genesis-programs";
        version = "1.1.3";
        edition = "2018";
        sha256 = "1rrl4mxhy0hcv82si1xf5glv25md9aff44qn93ravcdca549qirq";
        libName = "solana_genesis_programs";
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "solana-bpf-loader-program";
            packageId = "solana-bpf-loader-program";
          }
          {
            name = "solana-budget-program";
            packageId = "solana-budget-program";
          }
          {
            name = "solana-config-program";
            packageId = "solana-config-program";
          }
          {
            name = "solana-exchange-program";
            packageId = "solana-exchange-program";
          }
          {
            name = "solana-runtime";
            packageId = "solana-runtime";
          }
          {
            name = "solana-sdk";
            packageId = "solana-sdk";
          }
          {
            name = "solana-stake-program";
            packageId = "solana-stake-program";
          }
          {
            name = "solana-storage-program";
            packageId = "solana-storage-program";
          }
          {
            name = "solana-vest-program";
            packageId = "solana-vest-program";
          }
          {
            name = "solana-vote-program";
            packageId = "solana-vote-program";
          }
        ];
        
      };
      "solana-ledger" = rec {
        crateName = "solana-ledger";
        version = "1.1.3";
        edition = "2018";
        sha256 = "0c3grqw2pj0c49qbb7yh1lfv3ymcz7wb0c1v0d54p1qrr9ibqx12";
        libName = "solana_ledger";
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "bincode";
            packageId = "bincode";
          }
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "bzip2";
            packageId = "bzip2";
          }
          {
            name = "chrono";
            packageId = "chrono";
            features = [ "serde" ];
          }
          {
            name = "crossbeam-channel";
            packageId = "crossbeam-channel";
          }
          {
            name = "dir-diff";
            packageId = "dir-diff";
          }
          {
            name = "ed25519-dalek";
            packageId = "ed25519-dalek";
          }
          {
            name = "fs_extra";
            packageId = "fs_extra";
          }
          {
            name = "itertools";
            packageId = "itertools 0.9.0";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
          {
            name = "rand";
            packageId = "rand 0.6.5";
          }
          {
            name = "rand_chacha";
            packageId = "rand_chacha 0.1.1";
          }
          {
            name = "rayon";
            packageId = "rayon";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "rocksdb";
            packageId = "rocksdb";
            usesDefaultFeatures = false;
            features = [ "lz4" ];
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_bytes";
            packageId = "serde_bytes";
          }
          {
            name = "sha2";
            packageId = "sha2 0.8.1";
          }
          {
            name = "solana-genesis-programs";
            packageId = "solana-genesis-programs";
          }
          {
            name = "solana-logger";
            packageId = "solana-logger";
          }
          {
            name = "solana-measure";
            packageId = "solana-measure";
          }
          {
            name = "solana-merkle-tree";
            packageId = "solana-merkle-tree";
          }
          {
            name = "solana-metrics";
            packageId = "solana-metrics";
          }
          {
            name = "solana-perf";
            packageId = "solana-perf";
          }
          {
            name = "solana-rayon-threadlimit";
            packageId = "solana-rayon-threadlimit";
          }
          {
            name = "solana-reed-solomon-erasure";
            packageId = "solana-reed-solomon-erasure";
            rename = "reed-solomon-erasure";
            features = [ "simd-accel" ];
          }
          {
            name = "solana-runtime";
            packageId = "solana-runtime";
          }
          {
            name = "solana-sdk";
            packageId = "solana-sdk";
          }
          {
            name = "solana-stake-program";
            packageId = "solana-stake-program";
          }
          {
            name = "solana-transaction-status";
            packageId = "solana-transaction-status";
          }
          {
            name = "solana-vote-program";
            packageId = "solana-vote-program";
          }
          {
            name = "symlink";
            packageId = "symlink";
          }
          {
            name = "tar";
            packageId = "tar";
          }
          {
            name = "tempfile";
            packageId = "tempfile";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];
        
      };
      "solana-logger" = rec {
        crateName = "solana-logger";
        version = "1.1.3";
        edition = "2018";
        sha256 = "11lfxnayh2w8fdk8pbgy122kggg0s4riaf056xgg8d24py2f7aan";
        libName = "solana_logger";
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "env_logger";
            packageId = "env_logger 0.7.1";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
        ];
        
      };
      "solana-measure" = rec {
        crateName = "solana-measure";
        version = "1.1.3";
        edition = "2018";
        sha256 = "043z0fxrs7m421pi1w126rw2x5gvlpwk8lq8mqmcvx5xz7m5mmav";
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "jemalloc-ctl";
            packageId = "jemalloc-ctl";
            target = { target, features }: target."unix";
          }
          {
            name = "jemallocator";
            packageId = "jemallocator";
            target = { target, features }: target."unix";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "solana-metrics";
            packageId = "solana-metrics";
          }
          {
            name = "solana-sdk";
            packageId = "solana-sdk";
          }
        ];
        
      };
      "solana-merkle-tree" = rec {
        crateName = "solana-merkle-tree";
        version = "1.1.3";
        edition = "2018";
        sha256 = "16q0sdk0bvdqi2my129v11k58f5dbbqh5r4dfh3qz2p0bq2sv2y7";
        libName = "solana_merkle_tree";
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "fast-math";
            packageId = "fast-math";
          }
          {
            name = "solana-sdk";
            packageId = "solana-sdk";
          }
        ];
        
      };
      "solana-metrics" = rec {
        crateName = "solana-metrics";
        version = "1.1.3";
        edition = "2018";
        sha256 = "0iczh3nvjy98l11zl1dvgnl5yd7vchws16kfhszg549x1iy1sacn";
        libName = "solana_metrics";
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "env_logger";
            packageId = "env_logger 0.7.1";
          }
          {
            name = "gethostname";
            packageId = "gethostname";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "reqwest";
            packageId = "reqwest";
            usesDefaultFeatures = false;
            features = [ "blocking" "rustls-tls" "json" ];
          }
          {
            name = "solana-sdk";
            packageId = "solana-sdk";
          }
        ];
        
      };
      "solana-net-utils" = rec {
        crateName = "solana-net-utils";
        version = "1.1.3";
        edition = "2018";
        crateBin = [];
        sha256 = "0rspr5bvwm1z6lk0ccji9nxd8lcxhdyngymw469pnpzjpsc8lr97";
        libName = "solana_net_utils";
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "bincode";
            packageId = "bincode";
          }
          {
            name = "bytes";
            packageId = "bytes 0.4.12";
          }
          {
            name = "clap";
            packageId = "clap";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "nix";
            packageId = "nix";
          }
          {
            name = "rand";
            packageId = "rand 0.6.5";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "socket2";
            packageId = "socket2";
          }
          {
            name = "solana-clap-utils";
            packageId = "solana-clap-utils";
          }
          {
            name = "solana-logger";
            packageId = "solana-logger";
          }
          {
            name = "tokio";
            packageId = "tokio 0.1.22";
          }
          {
            name = "tokio-codec";
            packageId = "tokio-codec";
          }
        ];
        
      };
      "solana-perf" = rec {
        crateName = "solana-perf";
        version = "1.1.3";
        edition = "2018";
        sha256 = "18pqz84v6hjd2sqypdsw8n3yzw48vizfcv38srarnx3kgvzy90wg";
        libName = "solana_perf";
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "bincode";
            packageId = "bincode";
          }
          {
            name = "dlopen";
            packageId = "dlopen";
          }
          {
            name = "dlopen_derive";
            packageId = "dlopen_derive";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "rand";
            packageId = "rand 0.6.5";
          }
          {
            name = "rayon";
            packageId = "rayon";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "solana-budget-program";
            packageId = "solana-budget-program";
          }
          {
            name = "solana-logger";
            packageId = "solana-logger";
          }
          {
            name = "solana-metrics";
            packageId = "solana-metrics";
          }
          {
            name = "solana-rayon-threadlimit";
            packageId = "solana-rayon-threadlimit";
          }
          {
            name = "solana-sdk";
            packageId = "solana-sdk";
          }
        ];
        
      };
      "solana-rayon-threadlimit" = rec {
        crateName = "solana-rayon-threadlimit";
        version = "1.1.3";
        edition = "2018";
        sha256 = "0lrfyic4d14q1zlzzpbhlrsn8q7sfw5wpwpn4lh450wwf50y3j8b";
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
        ];
        
      };
      "solana-reed-solomon-erasure" = rec {
        crateName = "solana-reed-solomon-erasure";
        version = "4.0.1-3";
        edition = "2018";
        sha256 = "17irfcz29zi6mk62v95d7bnhdg4w55ryxl6hly3zcani9lzspcym";
        authors = [
          "Darren Ldl <darrenldldev@gmail.com>"
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            optional = true;
          }
          {
            name = "smallvec";
            packageId = "smallvec 0.6.13";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
            optional = true;
          }
        ];
        features = {
          "simd-accel" = [ "cc" "libc" ];
        };
        resolvedDefaultFeatures = [ "cc" "default" "libc" "simd-accel" ];
      };
      "solana-remote-wallet" = rec {
        crateName = "solana-remote-wallet";
        version = "1.1.3";
        edition = "2018";
        crateBin = [];
        sha256 = "13bdk7qwsdq0fsv760h83ldyp1qkw6l5hxgggwr0dfizrkxziib7";
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "base32";
            packageId = "base32";
          }
          {
            name = "console";
            packageId = "console";
          }
          {
            name = "dialoguer";
            packageId = "dialoguer";
          }
          {
            name = "hidapi";
            packageId = "hidapi";
            usesDefaultFeatures = false;
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.10.2";
          }
          {
            name = "semver";
            packageId = "semver";
          }
          {
            name = "solana-sdk";
            packageId = "solana-sdk";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "url";
            packageId = "url 2.1.1";
          }
        ];
        features = {
          "default" = [ "linux-static-hidraw" ];
          "linux-shared-hidraw" = [ "hidapi/linux-shared-hidraw" ];
          "linux-shared-libusb" = [ "hidapi/linux-shared-libusb" ];
          "linux-static-hidraw" = [ "hidapi/linux-static-hidraw" ];
          "linux-static-libusb" = [ "hidapi/linux-static-libusb" ];
        };
        resolvedDefaultFeatures = [ "default" "linux-static-hidraw" ];
      };
      "solana-runtime" = rec {
        crateName = "solana-runtime";
        version = "1.1.3";
        edition = "2018";
        sha256 = "1iihla4rrp5z86w3rw8rx0zwaf3h341lxrb2skzi2gwpcqc136pv";
        libName = "solana_runtime";
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "bincode";
            packageId = "bincode";
          }
          {
            name = "bv";
            packageId = "bv";
            features = [ "serde" ];
          }
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "fs_extra";
            packageId = "fs_extra";
          }
          {
            name = "itertools";
            packageId = "itertools 0.9.0";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "libloading";
            packageId = "libloading";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "memmap";
            packageId = "memmap";
          }
          {
            name = "num-derive";
            packageId = "num-derive 0.3.0";
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
          {
            name = "rand";
            packageId = "rand 0.6.5";
          }
          {
            name = "rayon";
            packageId = "rayon";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "rc" ];
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "solana-bpf-loader-program";
            packageId = "solana-bpf-loader-program";
          }
          {
            name = "solana-logger";
            packageId = "solana-logger";
          }
          {
            name = "solana-measure";
            packageId = "solana-measure";
          }
          {
            name = "solana-metrics";
            packageId = "solana-metrics";
          }
          {
            name = "solana-rayon-threadlimit";
            packageId = "solana-rayon-threadlimit";
          }
          {
            name = "solana-sdk";
            packageId = "solana-sdk";
          }
          {
            name = "solana-stake-program";
            packageId = "solana-stake-program";
          }
          {
            name = "solana-storage-program";
            packageId = "solana-storage-program";
          }
          {
            name = "solana-vote-program";
            packageId = "solana-vote-program";
          }
          {
            name = "tempfile";
            packageId = "tempfile";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];
        
      };
      "solana-sdk" = rec {
        crateName = "solana-sdk";
        version = "1.1.3";
        edition = "2018";
        sha256 = "0zqv502jxcykac5jir1b9s112bk2nk6fjd1vjg73qsv7q3jyyqr5";
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "assert_matches";
            packageId = "assert_matches";
            optional = true;
          }
          {
            name = "bincode";
            packageId = "bincode";
          }
          {
            name = "bs58";
            packageId = "bs58";
          }
          {
            name = "bv";
            packageId = "bv";
            features = [ "serde" ];
          }
          {
            name = "byteorder";
            packageId = "byteorder";
            optional = true;
          }
          {
            name = "chrono";
            packageId = "chrono";
            optional = true;
          }
          {
            name = "ed25519-dalek";
            packageId = "ed25519-dalek";
            optional = true;
          }
          {
            name = "generic-array";
            packageId = "generic-array 0.13.2";
            usesDefaultFeatures = false;
            features = [ "serde" "more_lengths" ];
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "hmac";
            packageId = "hmac";
          }
          {
            name = "itertools";
            packageId = "itertools 0.9.0";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "memmap";
            packageId = "memmap";
            optional = true;
          }
          {
            name = "num-derive";
            packageId = "num-derive 0.3.0";
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
          }
          {
            name = "pbkdf2";
            packageId = "pbkdf2";
            usesDefaultFeatures = false;
          }
          {
            name = "rand";
            packageId = "rand 0.6.5";
            optional = true;
          }
          {
            name = "rand_chacha";
            packageId = "rand_chacha 0.1.1";
            optional = true;
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_bytes";
            packageId = "serde_bytes";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
            optional = true;
          }
          {
            name = "sha2";
            packageId = "sha2 0.8.1";
          }
          {
            name = "solana-crate-features";
            packageId = "solana-crate-features";
            optional = true;
          }
          {
            name = "solana-logger";
            packageId = "solana-logger";
            optional = true;
          }
          {
            name = "solana-sdk-macro";
            packageId = "solana-sdk-macro";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];
        features = {
          "default" = [ "assert_matches" "byteorder" "chrono" "memmap" "rand" "rand_chacha" "serde_json" "ed25519-dalek" "solana-logger" "solana-crate-features" ];
        };
        resolvedDefaultFeatures = [ "assert_matches" "byteorder" "chrono" "default" "ed25519-dalek" "memmap" "rand" "rand_chacha" "serde_json" "solana-crate-features" "solana-logger" ];
      };
      "solana-sdk-macro" = rec {
        crateName = "solana-sdk-macro";
        version = "1.1.3";
        edition = "2018";
        sha256 = "0zig9p5lrsy7rbqiv3vxp70v09xkd68sxq2csmrq48046lm8q3g8";
        procMacro = true;
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "bs58";
            packageId = "bs58";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.10";
          }
          {
            name = "quote";
            packageId = "quote 1.0.3";
          }
          {
            name = "syn";
            packageId = "syn 1.0.17";
            features = [ "full" "extra-traits" ];
          }
        ];
        
      };
      "solana-stake-program" = rec {
        crateName = "solana-stake-program";
        version = "1.1.3";
        edition = "2018";
        sha256 = "03b20n8a77lfnpxwdlgsvl8sivn6yjcx2bfwi0jaqj0l5qmd185x";
        libName = "solana_stake_program";type = [ "lib" "cdylib" ];
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "bincode";
            packageId = "bincode";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "num-derive";
            packageId = "num-derive 0.3.0";
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "solana-config-program";
            packageId = "solana-config-program";
          }
          {
            name = "solana-logger";
            packageId = "solana-logger";
          }
          {
            name = "solana-metrics";
            packageId = "solana-metrics";
          }
          {
            name = "solana-sdk";
            packageId = "solana-sdk";
          }
          {
            name = "solana-vote-program";
            packageId = "solana-vote-program";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];
        
      };
      "solana-storage-program" = rec {
        crateName = "solana-storage-program";
        version = "1.1.3";
        edition = "2018";
        sha256 = "0pwmgmjl4j758daa1g4fyjcf5vv71cjwhhlnckwmsa90yy05s1d9";
        libName = "solana_storage_program";type = [ "lib" "cdylib" ];
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "bincode";
            packageId = "bincode";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "num-derive";
            packageId = "num-derive 0.3.0";
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
          }
          {
            name = "rand";
            packageId = "rand 0.6.5";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "solana-logger";
            packageId = "solana-logger";
          }
          {
            name = "solana-sdk";
            packageId = "solana-sdk";
          }
        ];
        
      };
      "solana-streamer" = rec {
        crateName = "solana-streamer";
        version = "1.1.3";
        edition = "2018";
        sha256 = "0yjmlv5sdq6818zb8jkwf57jc29ky6qm074pfmharzx0xzyidy5y";
        libName = "solana_streamer";
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "nix";
            packageId = "nix";
          }
          {
            name = "solana-logger";
            packageId = "solana-logger";
          }
          {
            name = "solana-measure";
            packageId = "solana-measure";
          }
          {
            name = "solana-metrics";
            packageId = "solana-metrics";
          }
          {
            name = "solana-perf";
            packageId = "solana-perf";
          }
          {
            name = "solana-sdk";
            packageId = "solana-sdk";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];
        
      };
      "solana-sys-tuner" = rec {
        crateName = "solana-sys-tuner";
        version = "1.1.3";
        edition = "2018";
        crateBin = [];
        sha256 = "07zrmr1cbymy29xk1qbwxgbpn035i3d9mfwxxdhizrbacmf9h3yc";
        libName = "solana_sys_tuner";
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "clap";
            packageId = "clap";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "nix";
            packageId = "nix";
            target = { target, features }: target."unix";
          }
          {
            name = "solana-clap-utils";
            packageId = "solana-clap-utils";
          }
          {
            name = "solana-logger";
            packageId = "solana-logger";
          }
          {
            name = "sysctl";
            packageId = "sysctl";
            target = { target, features }: target."unix";
          }
          {
            name = "unix_socket2";
            packageId = "unix_socket2";
            target = { target, features }: target."unix";
          }
          {
            name = "users";
            packageId = "users";
            target = { target, features }: target."unix";
          }
        ];
        
      };
      "solana-transaction-status" = rec {
        crateName = "solana-transaction-status";
        version = "1.1.3";
        edition = "2018";
        sha256 = "0yhn9rvbblwp077a3yis0nqfxwa8v9qqm9xm6qlxnijvy0c8bizy";
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "bincode";
            packageId = "bincode";
          }
          {
            name = "bs58";
            packageId = "bs58";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "solana-sdk";
            packageId = "solana-sdk";
          }
        ];
        
      };
      "solana-vest-program" = rec {
        crateName = "solana-vest-program";
        version = "1.1.3";
        edition = "2018";
        sha256 = "17xwv130436ac2jwdgi5n1rgrk38bdj5rkrsnbiz4vkq4jipnpg9";
        libName = "solana_vest_program";
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "bincode";
            packageId = "bincode";
          }
          {
            name = "chrono";
            packageId = "chrono";
            features = [ "serde" ];
          }
          {
            name = "num-derive";
            packageId = "num-derive 0.2.5";
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "solana-config-program";
            packageId = "solana-config-program";
          }
          {
            name = "solana-sdk";
            packageId = "solana-sdk";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];
        
      };
      "solana-vote-program" = rec {
        crateName = "solana-vote-program";
        version = "1.1.3";
        edition = "2018";
        sha256 = "1hf3ziflgp86pbknwb9d269iim4zxxy6nbqmsric6qlk4dvvf03j";
        libName = "solana_vote_program";type = [ "lib" "cdylib" ];
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "bincode";
            packageId = "bincode";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "num-derive";
            packageId = "num-derive 0.3.0";
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "solana-logger";
            packageId = "solana-logger";
          }
          {
            name = "solana-metrics";
            packageId = "solana-metrics";
          }
          {
            name = "solana-sdk";
            packageId = "solana-sdk";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];
        
      };
      "solana-vote-signer" = rec {
        crateName = "solana-vote-signer";
        version = "1.1.3";
        edition = "2018";
        crateBin = [];
        sha256 = "1yxmqcx5mppz79l7qqgrlf5chlnysd7f2wq35wz7a57bnn0vdzpc";
        libName = "solana_vote_signer";
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "clap";
            packageId = "clap";
          }
          {
            name = "jsonrpc-core";
            packageId = "jsonrpc-core";
          }
          {
            name = "jsonrpc-derive";
            packageId = "jsonrpc-derive";
          }
          {
            name = "jsonrpc-http-server";
            packageId = "jsonrpc-http-server";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "solana-clap-utils";
            packageId = "solana-clap-utils";
          }
          {
            name = "solana-metrics";
            packageId = "solana-metrics";
          }
          {
            name = "solana-sdk";
            packageId = "solana-sdk";
          }
        ];
        
      };
      "solana_rbpf" = rec {
        crateName = "solana_rbpf";
        version = "0.1.25";
        edition = "2015";
        sha256 = "1y3xm3zp2x9ahw0giqr8bvl8mfg66hjylp8j5j3sr7030d93km47";
        authors = [
          "Solana Maintainers <maintainers@solana.com>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "combine";
            packageId = "combine";
          }
          {
            name = "elfkit";
            packageId = "elfkit";
          }
          {
            name = "hash32";
            packageId = "hash32";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.11";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "time";
            packageId = "time";
          }
        ];
        
      };
      "spin" = rec {
        crateName = "spin";
        version = "0.5.2";
        edition = "2015";
        sha256 = "0b84m6dbzrwf2kxylnw82d3dr8w06av7rfkr8s85fb5f43rwyqvf";
        authors = [
          "Mathijs van de Nes <git@mathijs.vd-nes.nl>"
          "John Ericson <git@JohnEricson.me>"
        ];
        
      };
      "string" = rec {
        crateName = "string";
        version = "0.2.1";
        edition = "2015";
        sha256 = "0vaxz85ja52fn66akgvggb29wqa5bpj3y38syykpr1pbrjzi8hfj";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.4.12";
            optional = true;
          }
        ];
        features = {
          "default" = [ "bytes" ];
        };
        resolvedDefaultFeatures = [ "bytes" "default" ];
      };
      "strsim" = rec {
        crateName = "strsim";
        version = "0.8.0";
        edition = "2015";
        sha256 = "0sjsm7hrvjdifz661pjxq5w4hf190hx53fra8dfvamacvff139cf";
        authors = [
          "Danny Guo <dannyguo91@gmail.com>"
        ];
        
      };
      "subtle 1.0.0" = rec {
        crateName = "subtle";
        version = "1.0.0";
        edition = "2015";
        sha256 = "1vm80mxbwfj334izwm8x8l65v1xl9hr0kwrg36r1rq565fkaarrd";
        authors = [
          "Isis Lovecruft <isis@patternsinthevoid.net>"
          "Henry de Valence <hdevalence@hdevalence.ca>"
        ];
        features = {
          "default" = [ "std" "i128" ];
        };
      };
      "subtle 2.2.2" = rec {
        crateName = "subtle";
        version = "2.2.2";
        edition = "2015";
        sha256 = "0hg9p61kyqhahk8assj5zcc5nhvyb6506jgkjk1fmjhcn4qdarbw";
        authors = [
          "Isis Lovecruft <isis@patternsinthevoid.net>"
          "Henry de Valence <hdevalence@hdevalence.ca>"
        ];
        features = {
          "default" = [ "std" "i128" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "symlink" = rec {
        crateName = "symlink";
        version = "0.1.0";
        edition = "2015";
        sha256 = "02h1i0b81mxb4vns4xrvrfibpcvs7jqqav8p3yilwik8cv73r5x7";
        authors = [
          "Chris Morgan <me@chrismorgan.info>"
        ];
        
      };
      "syn 0.11.11" = rec {
        crateName = "syn";
        version = "0.11.11";
        edition = "2015";
        sha256 = "1b8x8jdsmj6r9ck7n1pg371526n1q90kx6rv6ivcb22w06wr3f6k";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "quote";
            packageId = "quote 0.3.15";
            optional = true;
          }
          {
            name = "synom";
            packageId = "synom";
            optional = true;
          }
          {
            name = "unicode-xid";
            packageId = "unicode-xid 0.0.4";
            optional = true;
          }
        ];
        features = {
          "default" = [ "parsing" "printing" ];
          "parsing" = [ "unicode-xid" "synom" ];
          "printing" = [ "quote" ];
        };
        resolvedDefaultFeatures = [ "default" "parsing" "printing" "quote" "synom" "unicode-xid" ];
      };
      "syn 0.15.44" = rec {
        crateName = "syn";
        version = "0.15.44";
        edition = "2015";
        sha256 = "1id5g6x6zihv3j7hwrw3m1jp636bg8dpi671r7zy3jvpkavb794w";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 0.4.30";
            usesDefaultFeatures = false;
          }
          {
            name = "quote";
            packageId = "quote 0.6.13";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "unicode-xid";
            packageId = "unicode-xid 0.1.0";
          }
        ];
        features = {
          "default" = [ "derive" "parsing" "printing" "clone-impls" "proc-macro" ];
          "printing" = [ "quote" ];
          "proc-macro" = [ "proc-macro2/proc-macro" "quote/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "clone-impls" "default" "derive" "extra-traits" "fold" "full" "parsing" "printing" "proc-macro" "quote" ];
      };
      "syn 1.0.17" = rec {
        crateName = "syn";
        version = "1.0.17";
        edition = "2018";
        sha256 = "00xvf772ys4fj9fr8kplmsqb9if215dsipi3nv54aw9q7xkfpw0d";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.10";
            usesDefaultFeatures = false;
          }
          {
            name = "quote";
            packageId = "quote 1.0.3";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "unicode-xid";
            packageId = "unicode-xid 0.2.0";
          }
        ];
        features = {
          "default" = [ "derive" "parsing" "printing" "clone-impls" "proc-macro" ];
          "printing" = [ "quote" ];
          "proc-macro" = [ "proc-macro2/proc-macro" "quote/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "clone-impls" "default" "derive" "extra-traits" "fold" "full" "parsing" "printing" "proc-macro" "quote" "visit" "visit-mut" ];
      };
      "synom" = rec {
        crateName = "synom";
        version = "0.11.3";
        edition = "2015";
        sha256 = "1dj536sh5xxhan2h0znxhv0sl6sb7lvzmsmrc3nvl3h1v5p0d4x3";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "unicode-xid";
            packageId = "unicode-xid 0.0.4";
          }
        ];
        
      };
      "synstructure" = rec {
        crateName = "synstructure";
        version = "0.12.3";
        edition = "2018";
        sha256 = "0igmc5fzpk6fg7kgff914j05lbpc6ai2wmji312v2h8vvjhnwrb7";
        authors = [
          "Nika Layzell <nika@thelayzells.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.10";
            usesDefaultFeatures = false;
          }
          {
            name = "quote";
            packageId = "quote 1.0.3";
            usesDefaultFeatures = false;
          }
          {
            name = "syn";
            packageId = "syn 1.0.17";
            usesDefaultFeatures = false;
            features = [ "derive" "parsing" "printing" "clone-impls" "visit" "extra-traits" ];
          }
          {
            name = "unicode-xid";
            packageId = "unicode-xid 0.2.0";
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
          "proc-macro" = [ "proc-macro2/proc-macro" "syn/proc-macro" "quote/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "sysctl" = rec {
        crateName = "sysctl";
        version = "0.4.0";
        edition = "2015";
        sha256 = "0p6bfjsw3v12nb2qsgm6r9klwb5qyh4w55zzmccv8r5aqb8g0085";
        authors = [
          "Johannes Lundberg <johalun0@gmail.com>"
          "Ivan Temchenko <ivan.temchenko@yandex.ua>"
          "Fabian Freyer <fabian.freyer@physik.tu-berlin.de>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "failure";
            packageId = "failure";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "walkdir";
            packageId = "walkdir";
            target = { target, features }: ((target."os" == "android") || (target."os" == "linux"));
          }
        ];
        
      };
      "tar" = rec {
        crateName = "tar";
        version = "0.4.26";
        edition = "2018";
        sha256 = "1lr6v3cpkfxd2lk5ll2jd8wr1xdskwj35smnh5sfb8xvzzxnn6dk";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "filetime";
            packageId = "filetime";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "xattr";
            packageId = "xattr";
            optional = true;
            target = { target, features }: target."unix";
          }
        ];
        features = {
          "default" = [ "xattr" ];
        };
        resolvedDefaultFeatures = [ "default" "xattr" ];
      };
      "tempfile" = rec {
        crateName = "tempfile";
        version = "3.1.0";
        edition = "2018";
        sha256 = "1a9cfdqw70n7bcnkx05aih9xdba8lqazmqlkjpkmn2la6gcj8vks";
        authors = [
          "Steven Allen <steven@stebalien.com>"
          "The Rust Project Developers"
          "Ashley Mannix <ashleymannix@live.com.au>"
          "Jason White <jasonaw0@gmail.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: target."unix";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "remove_dir_all";
            packageId = "remove_dir_all";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "fileapi" "handleapi" "winbase" ];
          }
        ];
        
      };
      "termcolor" = rec {
        crateName = "termcolor";
        version = "1.1.0";
        edition = "2018";
        sha256 = "0pyp8vc0gx7124y80ixdl6plbfn1yjhw04i875k5fz2dk8lglsxv";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi-util";
            packageId = "winapi-util";
            target = { target, features }: target."windows";
          }
        ];
        
      };
      "termios" = rec {
        crateName = "termios";
        version = "0.3.2";
        edition = "2015";
        sha256 = "1hh0qh03cfibgrg2jmlqph3xzc21dvgb8nqdwifnf9aanbkww3vg";
        authors = [
          "David Cuddeback <david.cuddeback@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        
      };
      "textwrap" = rec {
        crateName = "textwrap";
        version = "0.11.0";
        edition = "2015";
        sha256 = "0q5hky03ik3y50s9sz25r438bc4nwhqc6dqwynv4wylc807n29nk";
        authors = [
          "Martin Geisler <martin@geisler.net>"
        ];
        dependencies = [
          {
            name = "unicode-width";
            packageId = "unicode-width";
          }
        ];
        
      };
      "thiserror" = rec {
        crateName = "thiserror";
        version = "1.0.15";
        edition = "2018";
        sha256 = "04j0j9kzhfqzjqavmm2bpqd90v5j1jxvcyr5mc042438zz9d7csl";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "thiserror-impl";
            packageId = "thiserror-impl";
          }
        ];
        
      };
      "thiserror-impl" = rec {
        crateName = "thiserror-impl";
        version = "1.0.15";
        edition = "2018";
        sha256 = "1p8hjdj4lhsprh7zl4d0c8y06387k3dhs9cidwk1axrv2642k5ya";
        procMacro = true;
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.10";
          }
          {
            name = "quote";
            packageId = "quote 1.0.3";
          }
          {
            name = "syn";
            packageId = "syn 1.0.17";
          }
        ];
        
      };
      "thread-scoped" = rec {
        crateName = "thread-scoped";
        version = "1.0.2";
        edition = "2015";
        sha256 = "16dxl8grpii4vh20qikv2x7r871ggsf9m733xysv1lz506inmfxw";
        authors = [
          "arcnmx"
          "The Rust Project Developers"
        ];
        
      };
      "thread_local" = rec {
        crateName = "thread_local";
        version = "1.0.1";
        edition = "2015";
        sha256 = "054vlrr1vsdy1h4b7n99mr24pnj8928ig9qwzg36wnkld4dns36l";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
        ];
        
      };
      "time" = rec {
        crateName = "time";
        version = "0.1.42";
        edition = "2015";
        sha256 = "0vsbvsz0ryxb35dy9j4anxvy8zlaplmjmi0a4z4l64bc135cz3fv";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "std" "minwinbase" "minwindef" "ntdef" "profileapi" "sysinfoapi" "timezoneapi" ];
          }
        ];
        devDependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            features = [ "std" "processthreadsapi" "winbase" ];
          }
        ];
        
      };
      "tiny-bip39" = rec {
        crateName = "tiny-bip39";
        version = "0.7.3";
        edition = "2018";
        sha256 = "1wiigssfjr86gl7v348gxc7vdanvfqb5x9hc4xh1dbn2bh25w5mh";
        libName = "bip39";
        authors = [
          "Stephen Oliver <steve@infincia.com>"
          "Maciej Hirsz <hello@maciej.codes>"
        ];
        dependencies = [
          {
            name = "failure";
            packageId = "failure";
          }
          {
            name = "hmac";
            packageId = "hmac";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
            features = [ "parking_lot" ];
          }
          {
            name = "pbkdf2";
            packageId = "pbkdf2";
            usesDefaultFeatures = false;
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "rustc-hash";
            packageId = "rustc-hash";
          }
          {
            name = "sha2";
            packageId = "sha2 0.8.1";
          }
          {
            name = "unicode-normalization";
            packageId = "unicode-normalization";
          }
        ];
        features = {
          "default" = [ "chinese-simplified" "chinese-traditional" "french" "italian" "japanese" "korean" "spanish" ];
        };
        resolvedDefaultFeatures = [ "chinese-simplified" "chinese-traditional" "default" "french" "italian" "japanese" "korean" "spanish" ];
      };
      "titlecase" = rec {
        crateName = "titlecase";
        version = "1.1.0";
        edition = "2015";
        crateBin = [];
        sha256 = "05qizspxihjhmzsd9y6kfxzrss4jl4y042wni4m2yk62rw8f8rgm";
        authors = [
          "Wesley Moore <wes@wezm.net>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "regex";
            packageId = "regex";
          }
        ];
        
      };
      "tokio 0.1.22" = rec {
        crateName = "tokio";
        version = "0.1.22";
        edition = "2015";
        sha256 = "1xhaadfmm6m37f79xv5020gc3np9wqza3bq95ymp522qpfsw02as";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.4.12";
            optional = true;
          }
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "mio";
            packageId = "mio";
            optional = true;
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
            optional = true;
          }
          {
            name = "tokio-codec";
            packageId = "tokio-codec";
            optional = true;
          }
          {
            name = "tokio-current-thread";
            packageId = "tokio-current-thread";
            optional = true;
          }
          {
            name = "tokio-executor";
            packageId = "tokio-executor";
            optional = true;
          }
          {
            name = "tokio-fs";
            packageId = "tokio-fs";
            optional = true;
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
            optional = true;
          }
          {
            name = "tokio-reactor";
            packageId = "tokio-reactor";
            optional = true;
          }
          {
            name = "tokio-sync";
            packageId = "tokio-sync";
            optional = true;
          }
          {
            name = "tokio-tcp";
            packageId = "tokio-tcp";
            optional = true;
          }
          {
            name = "tokio-threadpool";
            packageId = "tokio-threadpool";
            optional = true;
          }
          {
            name = "tokio-timer";
            packageId = "tokio-timer";
            optional = true;
          }
          {
            name = "tokio-udp";
            packageId = "tokio-udp";
            optional = true;
          }
          {
            name = "tokio-uds";
            packageId = "tokio-uds";
            optional = true;
            target = { target, features }: target."unix";
          }
        ];
        devDependencies = [
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
        ];
        features = {
          "codec" = [ "io" "tokio-codec" ];
          "default" = [ "codec" "fs" "io" "reactor" "rt-full" "sync" "tcp" "timer" "udp" "uds" ];
          "experimental-tracing" = [ "tracing-core" ];
          "fs" = [ "tokio-fs" ];
          "io" = [ "bytes" "tokio-io" ];
          "reactor" = [ "io" "mio" "tokio-reactor" ];
          "rt-full" = [ "num_cpus" "reactor" "timer" "tokio-current-thread" "tokio-executor" "tokio-threadpool" ];
          "sync" = [ "tokio-sync" ];
          "tcp" = [ "tokio-tcp" ];
          "timer" = [ "tokio-timer" ];
          "udp" = [ "tokio-udp" ];
          "uds" = [ "tokio-uds" ];
        };
        resolvedDefaultFeatures = [ "bytes" "codec" "default" "fs" "io" "mio" "num_cpus" "reactor" "rt-full" "sync" "tcp" "timer" "tokio-codec" "tokio-current-thread" "tokio-executor" "tokio-fs" "tokio-io" "tokio-reactor" "tokio-sync" "tokio-tcp" "tokio-threadpool" "tokio-timer" "tokio-udp" "tokio-uds" "udp" "uds" ];
      };
      "tokio 0.2.17" = rec {
        crateName = "tokio";
        version = "0.2.17";
        edition = "2018";
        sha256 = "0z7im8k956xygcdf1viql54v2h44c5i4w5199xzw773fxd193yrr";
        authors = [
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.5.4";
          }
          {
            name = "fnv";
            packageId = "fnv";
            optional = true;
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            optional = true;
          }
          {
            name = "iovec";
            packageId = "iovec";
            optional = true;
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
            optional = true;
          }
          {
            name = "memchr";
            packageId = "memchr";
            optional = true;
          }
          {
            name = "mio";
            packageId = "mio";
            optional = true;
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
            optional = true;
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite";
          }
          {
            name = "slab";
            packageId = "slab";
            optional = true;
          }
        ];
        features = {
          "blocking" = [ "rt-core" ];
          "dns" = [ "rt-core" ];
          "fs" = [ "rt-core" "io-util" ];
          "full" = [ "blocking" "dns" "fs" "io-driver" "io-util" "io-std" "macros" "net" "process" "rt-core" "rt-util" "rt-threaded" "signal" "stream" "sync" "time" ];
          "io-driver" = [ "mio" "lazy_static" ];
          "io-std" = [ "rt-core" ];
          "io-util" = [ "memchr" ];
          "macros" = [ "tokio-macros" ];
          "net" = [ "dns" "tcp" "udp" "uds" ];
          "process" = [ "io-driver" "libc" "mio-named-pipes" "signal" "winapi/consoleapi" "winapi/minwindef" "winapi/threadpoollegacyapiset" "winapi/winerror" ];
          "rt-threaded" = [ "num_cpus" "rt-core" ];
          "signal" = [ "io-driver" "lazy_static" "libc" "mio-uds" "signal-hook-registry" "winapi/consoleapi" "winapi/minwindef" ];
          "stream" = [ "futures-core" ];
          "sync" = [ "fnv" ];
          "tcp" = [ "io-driver" "iovec" ];
          "time" = [ "slab" ];
          "udp" = [ "io-driver" ];
          "uds" = [ "io-driver" "mio-uds" "libc" ];
        };
        resolvedDefaultFeatures = [ "blocking" "default" "fnv" "futures-core" "io-driver" "io-util" "iovec" "lazy_static" "memchr" "mio" "num_cpus" "rt-core" "rt-threaded" "slab" "stream" "sync" "tcp" "time" ];
      };
      "tokio-buf" = rec {
        crateName = "tokio-buf";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0inwrkh8knqy44mr9h2i305zyy4pxhfy90y0gr5rm1akdks21clg";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.4.12";
          }
          {
            name = "either";
            packageId = "either";
            optional = true;
          }
          {
            name = "futures";
            packageId = "futures";
          }
        ];
        features = {
          "default" = [ "util" ];
          "util" = [ "bytes/either" "either" ];
        };
        resolvedDefaultFeatures = [ "default" "either" "util" ];
      };
      "tokio-codec" = rec {
        crateName = "tokio-codec";
        version = "0.1.2";
        edition = "2015";
        sha256 = "0swpfngcb331lzggk6j68yks6w0bnw35vpl4hv8p03msc239kci5";
        authors = [
          "Carl Lerche <me@carllerche.com>"
          "Bryan Burgers <bryan@burgers.io>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.4.12";
          }
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
          }
        ];
        
      };
      "tokio-current-thread" = rec {
        crateName = "tokio-current-thread";
        version = "0.1.7";
        edition = "2015";
        sha256 = "03p2w316ha0irgzvy37njx9hl71133gcrmrq4801w4rzm0r0xpmi";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "tokio-executor";
            packageId = "tokio-executor";
          }
        ];
        
      };
      "tokio-executor" = rec {
        crateName = "tokio-executor";
        version = "0.1.10";
        edition = "2015";
        sha256 = "0w8n78d2vixs1vghqc4wy9w0d1h6qkli51c1yzhzbns88n7inbgv";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils";
          }
          {
            name = "futures";
            packageId = "futures";
          }
        ];
        
      };
      "tokio-fs" = rec {
        crateName = "tokio-fs";
        version = "0.1.7";
        edition = "2015";
        sha256 = "1x3gkdi5x7bjlzzg7qlnymb549rb546p0nykxsh04qyaw0314yi9";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
          }
          {
            name = "tokio-threadpool";
            packageId = "tokio-threadpool";
          }
        ];
        devDependencies = [
          {
            name = "tokio-io";
            packageId = "tokio-io";
          }
        ];
        
      };
      "tokio-io" = rec {
        crateName = "tokio-io";
        version = "0.1.13";
        edition = "2015";
        sha256 = "0x06zyzinans1pn90g6i150lgixijdf1cg8y2gipjd09ms58dz2p";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.4.12";
          }
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
        ];
        
      };
      "tokio-reactor" = rec {
        crateName = "tokio-reactor";
        version = "0.1.12";
        edition = "2015";
        sha256 = "0l8klnd41q55f3ialzz0lb7s5bfwa38nh86sa9vai2xsqh75kg09";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils";
          }
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "mio";
            packageId = "mio";
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.9.0";
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "tokio-executor";
            packageId = "tokio-executor";
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
          }
          {
            name = "tokio-sync";
            packageId = "tokio-sync";
          }
        ];
        devDependencies = [
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
        ];
        
      };
      "tokio-rustls" = rec {
        crateName = "tokio-rustls";
        version = "0.13.0";
        edition = "2018";
        sha256 = "0ni65wi28fjxl6cdmk086s17lqajvsv1az2fnpqhgdw6bwz8pnsa";
        authors = [
          "quininer kel <quininer@live.com>"
        ];
        dependencies = [
          {
            name = "futures-core";
            packageId = "futures-core";
          }
          {
            name = "rustls";
            packageId = "rustls";
          }
          {
            name = "tokio";
            packageId = "tokio 0.2.17";
          }
          {
            name = "webpki";
            packageId = "webpki";
          }
        ];
        devDependencies = [
          {
            name = "tokio";
            packageId = "tokio 0.2.17";
            features = [ "macros" "net" "io-util" "rt-core" "time" ];
          }
        ];
        features = {
          "dangerous_configuration" = [ "rustls/dangerous_configuration" ];
          "unstable" = [ "bytes" ];
        };
      };
      "tokio-sync" = rec {
        crateName = "tokio-sync";
        version = "0.1.8";
        edition = "2015";
        sha256 = "1vkxz0y7qf9sshfpxvn506pvxy4vza8piavd8p64y5n85cam1zpd";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "futures";
            packageId = "futures";
          }
        ];
        
      };
      "tokio-tcp" = rec {
        crateName = "tokio-tcp";
        version = "0.1.4";
        edition = "2015";
        sha256 = "0whzqnkyfym1ipzznibyjl3j9281walq4n0q5xs2xdz3cvniipwq";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.4.12";
          }
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "iovec";
            packageId = "iovec";
          }
          {
            name = "mio";
            packageId = "mio";
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
          }
          {
            name = "tokio-reactor";
            packageId = "tokio-reactor";
          }
        ];
        
      };
      "tokio-threadpool" = rec {
        crateName = "tokio-threadpool";
        version = "0.1.18";
        edition = "2015";
        sha256 = "12azq8jm71b7hdm72pxrgqm2879bn6b0fcdl1s7i2k3qh5jhnwnz";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "crossbeam-deque";
            packageId = "crossbeam-deque";
          }
          {
            name = "crossbeam-queue";
            packageId = "crossbeam-queue";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils";
          }
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "tokio-executor";
            packageId = "tokio-executor";
          }
        ];
        
      };
      "tokio-timer" = rec {
        crateName = "tokio-timer";
        version = "0.2.13";
        edition = "2015";
        sha256 = "15pjjj6daks3sii8p24a509b0dapl2kyk740nwfgz59w64nly14k";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils";
          }
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "tokio-executor";
            packageId = "tokio-executor";
          }
        ];
        
      };
      "tokio-tls" = rec {
        crateName = "tokio-tls";
        version = "0.2.1";
        edition = "2015";
        sha256 = "0z0gmvv7jrpan6y42p5f5wd48rqcd96igp592w1c5cr573c8qjrm";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "native-tls";
            packageId = "native-tls";
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
          }
        ];
        
      };
      "tokio-udp" = rec {
        crateName = "tokio-udp";
        version = "0.1.6";
        edition = "2015";
        sha256 = "10hdcnxdp0dxvj44jl1nrrpg30jbisqclbqs0f5w6f8bc47b3872";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.4.12";
          }
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "mio";
            packageId = "mio";
          }
          {
            name = "tokio-codec";
            packageId = "tokio-codec";
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
          }
          {
            name = "tokio-reactor";
            packageId = "tokio-reactor";
          }
        ];
        
      };
      "tokio-uds" = rec {
        crateName = "tokio-uds";
        version = "0.2.6";
        edition = "2015";
        sha256 = "167pz94gm0074abgindk8zf1z6h955v495bmvwinbp3g1m0xnxjh";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.4.12";
          }
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "iovec";
            packageId = "iovec";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "mio";
            packageId = "mio";
          }
          {
            name = "mio-uds";
            packageId = "mio-uds";
          }
          {
            name = "tokio-codec";
            packageId = "tokio-codec";
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
          }
          {
            name = "tokio-reactor";
            packageId = "tokio-reactor";
          }
        ];
        
      };
      "tokio-util" = rec {
        crateName = "tokio-util";
        version = "0.3.1";
        edition = "2018";
        sha256 = "16b48dl6sbc9x944jgjvsd65ab1w2c2qcziddbrbwv1b3y4l50my";
        authors = [
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.5.4";
          }
          {
            name = "futures-core";
            packageId = "futures-core";
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite";
          }
          {
            name = "tokio";
            packageId = "tokio 0.2.17";
          }
        ];
        devDependencies = [
          {
            name = "tokio";
            packageId = "tokio 0.2.17";
            features = [ "full" ];
          }
        ];
        features = {
          "codec" = [ "tokio/stream" ];
          "compat" = [ "futures-io" ];
          "full" = [ "codec" "udp" "compat" ];
          "udp" = [ "tokio/udp" ];
        };
        resolvedDefaultFeatures = [ "codec" "default" ];
      };
      "toml" = rec {
        crateName = "toml";
        version = "0.5.6";
        edition = "2018";
        sha256 = "06n7j8z63hj6g0kj2x6sqwxnm4q3s0q5d873bdk41vqy1cb2vjgz";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde";
          }
        ];
        features = {
          "preserve_order" = [ "indexmap" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "tower-service" = rec {
        crateName = "tower-service";
        version = "0.3.0";
        edition = "2018";
        sha256 = "0q4q53w82w1wd71x7vbspg2l3jicb6al2w1qdwxmnjrz8jzvd1z9";
        authors = [
          "Tower Maintainers <team@tower-rs.com>"
        ];
        
      };
      "traitobject" = rec {
        crateName = "traitobject";
        version = "0.1.0";
        edition = "2015";
        sha256 = "0yb0n8822mr59j200fyr2fxgzzgqljyxflx9y8bdy3rlaqngilgg";
        authors = [
          "Jonathan Reem <jonathan.reem@gmail.com>"
        ];
        
      };
      "trees" = rec {
        crateName = "trees";
        version = "0.2.1";
        edition = "2015";
        sha256 = "10618zvwgxljg5irrv8br42x29hf5k1xp2yhbg65ckxyhlg858dg";
        authors = [
          "oooutlk <oooutlk@outlook.com>"
        ];
        dependencies = [
          {
            name = "indexed";
            packageId = "indexed";
          }
        ];
        features = {
        };
      };
      "try-lock" = rec {
        crateName = "try-lock";
        version = "0.2.2";
        edition = "2015";
        sha256 = "10p36rx6pqi9d0zr876xa8vksx2m66ha45myakl50rn08dxyn176";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        
      };
      "tungstenite" = rec {
        crateName = "tungstenite";
        version = "0.10.1";
        edition = "2018";
        sha256 = "0ki6qhd6wh9ysa717i6p3cba6wbhy3jyhql9j68gjx7nidsk3sng";
        authors = [
          "Alexey Galakhov"
        ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64 0.11.0";
          }
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "bytes";
            packageId = "bytes 0.5.4";
          }
          {
            name = "http";
            packageId = "http 0.2.1";
          }
          {
            name = "httparse";
            packageId = "httparse";
          }
          {
            name = "input_buffer";
            packageId = "input_buffer";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "native-tls";
            packageId = "native-tls";
            optional = true;
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "sha-1";
            packageId = "sha-1";
          }
          {
            name = "url";
            packageId = "url 2.1.1";
          }
          {
            name = "utf-8";
            packageId = "utf-8";
          }
        ];
        features = {
          "default" = [ "tls" ];
          "tls" = [ "native-tls" ];
        };
        resolvedDefaultFeatures = [ "default" "native-tls" "tls" ];
      };
      "typeable" = rec {
        crateName = "typeable";
        version = "0.1.2";
        edition = "2015";
        sha256 = "11w8dywgnm32hb291izjvh4zjd037ccnkk77ahk63l913zwzc40l";
        authors = [
          "Jonathan Reem <jonathan.reem@gmail.com>"
        ];
        
      };
      "typenum" = rec {
        crateName = "typenum";
        version = "1.11.2";
        edition = "2015";
        sha256 = "1ybmfpp7j37zmaw50w35wiwx66lbpr0yp1312c0i333b5pz869vd";
        build = "build/main.rs";
        authors = [
          "Paho Lurie-Gregg <paho@paholg.com>"
          "Andre Bogus <bogusandre@gmail.com>"
        ];
        features = {
        };
      };
      "unicase 1.4.2" = rec {
        crateName = "unicase";
        version = "1.4.2";
        edition = "2015";
        sha256 = "0cwazh4qsmm9msckjk86zc1z35xg7hjxjykrgjalzdv367w6aivz";
        authors = [
          "Sean McArthur <sean.monstar@gmail.com>"
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check 0.1.5";
          }
        ];
        features = {
          "heap_size" = [ "heapsize" "heapsize_plugin" ];
        };
      };
      "unicase 2.6.0" = rec {
        crateName = "unicase";
        version = "2.6.0";
        edition = "2015";
        sha256 = "1xmlbink4ycgxrkjspp0mf7pghcx4m7vxq7fpfm04ikr2zk7pwsh";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check 0.9.1";
          }
        ];
        features = {
        };
      };
      "unicode-bidi" = rec {
        crateName = "unicode-bidi";
        version = "0.3.4";
        edition = "2015";
        sha256 = "1malx8ljgm7v1gbaazkn7iicy5wj0bwcyadj3l727a38ch6bvwj9";
        libName = "unicode_bidi";
        authors = [
          "The Servo Project Developers"
        ];
        dependencies = [
          {
            name = "matches";
            packageId = "matches";
          }
        ];
        features = {
          "flame_it" = [ "flame" "flamer" ];
          "with_serde" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "unicode-normalization" = rec {
        crateName = "unicode-normalization";
        version = "0.1.12";
        edition = "2015";
        sha256 = "195gb4fzlgg4g9cv6w057ncpmvvnx30r00w9hj114knhmlmm6yal";
        authors = [
          "kwantam <kwantam@gmail.com>"
        ];
        dependencies = [
          {
            name = "smallvec";
            packageId = "smallvec 1.3.0";
          }
        ];
        
      };
      "unicode-width" = rec {
        crateName = "unicode-width";
        version = "0.1.7";
        edition = "2015";
        sha256 = "0yflmxkxmm89ckrb3sz58whn491aycrj8cxra0hzzlb72x9rvana";
        authors = [
          "kwantam <kwantam@gmail.com>"
          "Manish Goregaokar <manishsmail@gmail.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "std" "core" "compiler_builtins" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "unicode-xid 0.0.4" = rec {
        crateName = "unicode-xid";
        version = "0.0.4";
        edition = "2015";
        sha256 = "1p5l9h3n3i53cp95fb65p8q3vbwib79ryd9z5z5h5kr9gl6qc7wc";
        authors = [
          "erick.tryzelaar <erick.tryzelaar@gmail.com>"
          "kwantam <kwantam@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "unicode-xid 0.1.0" = rec {
        crateName = "unicode-xid";
        version = "0.1.0";
        edition = "2015";
        sha256 = "1z57lqh4s18rr4x0j4fw4fmp9hf9346h0kmdgqsqx0fhjr3k0wpw";
        authors = [
          "erick.tryzelaar <erick.tryzelaar@gmail.com>"
          "kwantam <kwantam@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "unicode-xid 0.2.0" = rec {
        crateName = "unicode-xid";
        version = "0.2.0";
        edition = "2015";
        sha256 = "0z09fn515xm7zyr0mmdyxa9mx2f7azcpv74pqmg611iralwpcvl2";
        authors = [
          "erick.tryzelaar <erick.tryzelaar@gmail.com>"
          "kwantam <kwantam@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "unix_socket2" = rec {
        crateName = "unix_socket2";
        version = "0.5.4";
        edition = "2015";
        sha256 = "12hxkasbrqjr3n1i6pnxbdlb1skh6gdqb3m2k35yq03cw6n6wz5m";
        libName = "unix_socket";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
          "Jethro Beekman <jethro@fortanix.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        
      };
      "untrusted" = rec {
        crateName = "untrusted";
        version = "0.7.0";
        edition = "2018";
        sha256 = "1kmfykcwif6ashkwg54gcnhxj03kpba2i9vc7z5rpr0xlgvrwdk0";
        libPath = "src/untrusted.rs";
        authors = [
          "Brian Smith <brian@briansmith.org>"
        ];
        
      };
      "url 1.7.2" = rec {
        crateName = "url";
        version = "1.7.2";
        edition = "2015";
        sha256 = "0nim1c90mxpi9wgdw2xh8dqd72vlklwlzam436akcrhjac6pqknx";
        authors = [
          "The rust-url developers"
        ];
        dependencies = [
          {
            name = "idna";
            packageId = "idna 0.1.5";
          }
          {
            name = "matches";
            packageId = "matches";
          }
          {
            name = "percent-encoding";
            packageId = "percent-encoding 1.0.1";
          }
        ];
        features = {
          "heap_size" = [ "heapsize" ];
          "query_encoding" = [ "encoding" ];
        };
      };
      "url 2.1.1" = rec {
        crateName = "url";
        version = "2.1.1";
        edition = "2015";
        sha256 = "1jw7cw8br4xvjb92ddrrh1r7jvqhyhiknnnfpgq9np63fs24m7c2";
        authors = [
          "The rust-url developers"
        ];
        dependencies = [
          {
            name = "idna";
            packageId = "idna 0.2.0";
          }
          {
            name = "matches";
            packageId = "matches";
          }
          {
            name = "percent-encoding";
            packageId = "percent-encoding 2.1.0";
          }
        ];
        
      };
      "users" = rec {
        crateName = "users";
        version = "0.9.1";
        edition = "2015";
        sha256 = "1kxl3y2hcrqqip7jpqn5mz7xlpbwmmpfmaza0xnyrhx0mrkl4by7";
        authors = [
          "Benjamin Sago <ogham@bsago.me>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "default" = [ "cache" "mock" ];
        };
        resolvedDefaultFeatures = [ "cache" "default" "mock" ];
      };
      "utf-8" = rec {
        crateName = "utf-8";
        version = "0.7.5";
        edition = "2015";
        sha256 = "1iw5rp4i3mfi9k51picbr5bgjqhjcmnxx7001clh5ydq31y2zr05";
        libName = "utf8";
        authors = [
          "Simon Sapin <simon.sapin@exyr.org>"
        ];
        
      };
      "vcpkg" = rec {
        crateName = "vcpkg";
        version = "0.2.8";
        edition = "2015";
        sha256 = "0s1ijdrsg6917imja2hb07l0z4vbx7ydm8m2i1n9g62fg7r3ki1z";
        authors = [
          "Jim McGrath <jimmc2@gmail.com>"
        ];
        
      };
      "vec_map" = rec {
        crateName = "vec_map";
        version = "0.8.1";
        edition = "2015";
        sha256 = "06n8hw4hlbcz328a3gbpvmy0ma46vg1lc0r5wf55900szf3qdiq5";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Jorge Aparicio <japaricious@gmail.com>"
          "Alexis Beingessner <a.beingessner@gmail.com>"
          "Brian Anderson <>"
          "tbu- <>"
          "Manish Goregaokar <>"
          "Aaron Turon <aturon@mozilla.com>"
          "Adolfo Ochagav√≠a <>"
          "Niko Matsakis <>"
          "Steven Fackler <>"
          "Chase Southwood <csouth3@illinois.edu>"
          "Eduard Burtescu <>"
          "Florian Wilkens <>"
          "F√©lix Raimundo <>"
          "Tibor Benke <>"
          "Markus Siemens <markus@m-siemens.de>"
          "Josh Branchaud <jbranchaud@gmail.com>"
          "Huon Wilson <dbau.pp@gmail.com>"
          "Corey Farwell <coref@rwell.org>"
          "Aaron Liblong <>"
          "Nick Cameron <nrc@ncameron.org>"
          "Patrick Walton <pcwalton@mimiga.net>"
          "Felix S Klock II <>"
          "Andrew Paseltiner <apaseltiner@gmail.com>"
          "Sean McArthur <sean.monstar@gmail.com>"
          "Vadim Petrochenkov <>"
        ];
        features = {
          "eders" = [ "serde" ];
        };
      };
      "version_check 0.1.5" = rec {
        crateName = "version_check";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1pf91pvj8n6akh7w6j5ypka6aqz08b3qpzgs0ak2kjf4frkiljwi";
        authors = [
          "Sergio Benitez <sb@sergio.bz>"
        ];
        
      };
      "version_check 0.9.1" = rec {
        crateName = "version_check";
        version = "0.9.1";
        edition = "2015";
        sha256 = "1kikqlnggii1rvnxrbls55sc46lxvinz5k3giscgncjj4p87b1q7";
        authors = [
          "Sergio Benitez <sb@sergio.bz>"
        ];
        
      };
      "void" = rec {
        crateName = "void";
        version = "1.0.2";
        edition = "2015";
        sha256 = "0zc8f0ksxvmhvgx4fdg0zyn6vdnbxd2xv9hfx4nhzg6kbs4f80ka";
        authors = [
          "Jonathan Reem <jonathan.reem@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "walkdir" = rec {
        crateName = "walkdir";
        version = "2.3.1";
        edition = "2018";
        sha256 = "0z9g39f49cycdm9vzjf8hnfh3f1csxgd65kmlphj8r2vffy84wbp";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "same-file";
            packageId = "same-file";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "std" "winnt" ];
          }
          {
            name = "winapi-util";
            packageId = "winapi-util";
            target = { target, features }: target."windows";
          }
        ];
        
      };
      "want 0.2.0" = rec {
        crateName = "want";
        version = "0.2.0";
        edition = "2015";
        sha256 = "0c52g7b4hhj033jc56sx9z3krivyciz0hlblixq2gc448zx5wfdn";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "try-lock";
            packageId = "try-lock";
          }
        ];
        
      };
      "want 0.3.0" = rec {
        crateName = "want";
        version = "0.3.0";
        edition = "2018";
        sha256 = "181b2zmwfq389x9n2g1n37cvcvvdand832zz6v8i1l8wrdlaks0w";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "try-lock";
            packageId = "try-lock";
          }
        ];
        
      };
      "wasi" = rec {
        crateName = "wasi";
        version = "0.9.0+wasi-snapshot-preview1";
        edition = "2018";
        sha256 = "06g5v3vrdapfzvfq662cij7v8a1flwr2my45nnncdv2galrdzkfc";
        authors = [
          "The Cranelift Project Developers"
        ];
        features = {
          "default" = [ "std" ];
          "rustc-dep-of-std" = [ "compiler_builtins" "core" "rustc-std-workspace-alloc" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "wasm-bindgen" = rec {
        crateName = "wasm-bindgen";
        version = "0.2.60";
        edition = "2018";
        sha256 = "0zx42zryw03w3maz8p65gr5bhhybr2sdzgcck5p3gy47abh7ri9c";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
          }
          {
            name = "serde_json";
            packageId = "serde_json";
            optional = true;
          }
          {
            name = "wasm-bindgen-macro";
            packageId = "wasm-bindgen-macro";
          }
        ];
        features = {
          "default" = [ "spans" "std" ];
          "enable-interning" = [ "std" ];
          "serde-serialize" = [ "serde" "serde_json" "std" ];
          "spans" = [ "wasm-bindgen-macro/spans" ];
          "strict-macro" = [ "wasm-bindgen-macro/strict-macro" ];
          "xxx_debug_only_print_generated_code" = [ "wasm-bindgen-macro/xxx_debug_only_print_generated_code" ];
        };
        resolvedDefaultFeatures = [ "default" "serde" "serde-serialize" "serde_json" "spans" "std" ];
      };
      "wasm-bindgen-backend" = rec {
        crateName = "wasm-bindgen-backend";
        version = "0.2.60";
        edition = "2018";
        sha256 = "1k9p8a7ng6nqan0m9555wj936lm2s1qz0fnafclwlv61yrxx6ryr";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "bumpalo";
            packageId = "bumpalo";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.10";
          }
          {
            name = "quote";
            packageId = "quote 1.0.3";
          }
          {
            name = "syn";
            packageId = "syn 1.0.17";
            features = [ "full" ];
          }
          {
            name = "wasm-bindgen-shared";
            packageId = "wasm-bindgen-shared";
          }
        ];
        features = {
          "extra-traits" = [ "syn/extra-traits" ];
        };
        resolvedDefaultFeatures = [ "spans" ];
      };
      "wasm-bindgen-futures" = rec {
        crateName = "wasm-bindgen-futures";
        version = "0.4.10";
        edition = "2018";
        sha256 = "0aii3h6x0dy6810x4ar9fqrxddrkmyk33q15vjlxlzxcl4p59pbs";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "js-sys";
            packageId = "js-sys";
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
          }
          {
            name = "web-sys";
            packageId = "web-sys";
            target = { target, features }: (target."feature" == "atomics");
            features = [ "MessageEvent" "Worker" ];
          }
        ];
        
      };
      "wasm-bindgen-macro" = rec {
        crateName = "wasm-bindgen-macro";
        version = "0.2.60";
        edition = "2018";
        sha256 = "1973xr0vr2aj85fkp3smk61z5ki7c4fhxlicfjxq3a0y7sv53lcb";
        procMacro = true;
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "quote";
            packageId = "quote 1.0.3";
          }
          {
            name = "wasm-bindgen-macro-support";
            packageId = "wasm-bindgen-macro-support";
          }
        ];
        features = {
          "spans" = [ "wasm-bindgen-macro-support/spans" ];
          "strict-macro" = [ "wasm-bindgen-macro-support/strict-macro" ];
        };
        resolvedDefaultFeatures = [ "spans" ];
      };
      "wasm-bindgen-macro-support" = rec {
        crateName = "wasm-bindgen-macro-support";
        version = "0.2.60";
        edition = "2018";
        sha256 = "0ca9bb9hnyzcmjww83x8asb76drf55ijhqv8yrl7igpixqv5p2nn";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.10";
          }
          {
            name = "quote";
            packageId = "quote 1.0.3";
          }
          {
            name = "syn";
            packageId = "syn 1.0.17";
            features = [ "visit" ];
          }
          {
            name = "wasm-bindgen-backend";
            packageId = "wasm-bindgen-backend";
          }
          {
            name = "wasm-bindgen-shared";
            packageId = "wasm-bindgen-shared";
          }
        ];
        features = {
          "extra-traits" = [ "syn/extra-traits" ];
          "spans" = [ "wasm-bindgen-backend/spans" ];
        };
        resolvedDefaultFeatures = [ "spans" ];
      };
      "wasm-bindgen-shared" = rec {
        crateName = "wasm-bindgen-shared";
        version = "0.2.60";
        edition = "2018";
        sha256 = "0ffn4152w8n629f29lwjgj3adiyixvdbff3mld49gisssbknzxys";
        authors = [
          "The wasm-bindgen Developers"
        ];
        
      };
      "web-sys" = rec {
        crateName = "web-sys";
        version = "0.3.37";
        edition = "2018";
        sha256 = "1jy4q5jawzg3dxzhfwa0g3fsz7h4j0ra6y232ikc6mlcimj52vrd";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "js-sys";
            packageId = "js-sys";
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
          }
        ];
        features = {
          "AbortSignal" = [ "EventTarget" ];
          "AnalyserNode" = [ "AudioNode" "EventTarget" ];
          "Animation" = [ "EventTarget" ];
          "AnimationEvent" = [ "Event" ];
          "AnimationPlaybackEvent" = [ "Event" ];
          "Attr" = [ "EventTarget" "Node" ];
          "AudioBufferSourceNode" = [ "AudioNode" "AudioScheduledSourceNode" "EventTarget" ];
          "AudioContext" = [ "BaseAudioContext" "EventTarget" ];
          "AudioDestinationNode" = [ "AudioNode" "EventTarget" ];
          "AudioNode" = [ "EventTarget" ];
          "AudioProcessingEvent" = [ "Event" ];
          "AudioScheduledSourceNode" = [ "AudioNode" "EventTarget" ];
          "AudioStreamTrack" = [ "EventTarget" "MediaStreamTrack" ];
          "AudioTrackList" = [ "EventTarget" ];
          "AudioWorklet" = [ "Worklet" ];
          "AudioWorkletGlobalScope" = [ "WorkletGlobalScope" ];
          "AudioWorkletNode" = [ "AudioNode" "EventTarget" ];
          "AuthenticatorAssertionResponse" = [ "AuthenticatorResponse" ];
          "AuthenticatorAttestationResponse" = [ "AuthenticatorResponse" ];
          "BaseAudioContext" = [ "EventTarget" ];
          "BatteryManager" = [ "EventTarget" ];
          "BeforeUnloadEvent" = [ "Event" ];
          "BiquadFilterNode" = [ "AudioNode" "EventTarget" ];
          "BlobEvent" = [ "Event" ];
          "BroadcastChannel" = [ "EventTarget" ];
          "CanvasCaptureMediaStream" = [ "EventTarget" "MediaStream" ];
          "CdataSection" = [ "CharacterData" "EventTarget" "Node" "Text" ];
          "ChannelMergerNode" = [ "AudioNode" "EventTarget" ];
          "ChannelSplitterNode" = [ "AudioNode" "EventTarget" ];
          "CharacterData" = [ "EventTarget" "Node" ];
          "ChromeWorker" = [ "EventTarget" "Worker" ];
          "ClipboardEvent" = [ "Event" ];
          "CloseEvent" = [ "Event" ];
          "Comment" = [ "CharacterData" "EventTarget" "Node" ];
          "CompositionEvent" = [ "Event" "UiEvent" ];
          "ConstantSourceNode" = [ "AudioNode" "AudioScheduledSourceNode" "EventTarget" ];
          "ConvolverNode" = [ "AudioNode" "EventTarget" ];
          "CssAnimation" = [ "Animation" "EventTarget" ];
          "CssConditionRule" = [ "CssGroupingRule" "CssRule" ];
          "CssCounterStyleRule" = [ "CssRule" ];
          "CssFontFaceRule" = [ "CssRule" ];
          "CssFontFeatureValuesRule" = [ "CssRule" ];
          "CssGroupingRule" = [ "CssRule" ];
          "CssImportRule" = [ "CssRule" ];
          "CssKeyframeRule" = [ "CssRule" ];
          "CssKeyframesRule" = [ "CssRule" ];
          "CssMediaRule" = [ "CssConditionRule" "CssGroupingRule" "CssRule" ];
          "CssNamespaceRule" = [ "CssRule" ];
          "CssPageRule" = [ "CssRule" ];
          "CssStyleRule" = [ "CssRule" ];
          "CssStyleSheet" = [ "StyleSheet" ];
          "CssSupportsRule" = [ "CssConditionRule" "CssGroupingRule" "CssRule" ];
          "CssTransition" = [ "Animation" "EventTarget" ];
          "CustomEvent" = [ "Event" ];
          "DedicatedWorkerGlobalScope" = [ "EventTarget" "WorkerGlobalScope" ];
          "DelayNode" = [ "AudioNode" "EventTarget" ];
          "DeviceLightEvent" = [ "Event" ];
          "DeviceMotionEvent" = [ "Event" ];
          "DeviceOrientationEvent" = [ "Event" ];
          "DeviceProximityEvent" = [ "Event" ];
          "Document" = [ "EventTarget" "Node" ];
          "DocumentFragment" = [ "EventTarget" "Node" ];
          "DocumentTimeline" = [ "AnimationTimeline" ];
          "DocumentType" = [ "EventTarget" "Node" ];
          "DomMatrix" = [ "DomMatrixReadOnly" ];
          "DomPoint" = [ "DomPointReadOnly" ];
          "DomRect" = [ "DomRectReadOnly" ];
          "DomRequest" = [ "EventTarget" ];
          "DragEvent" = [ "Event" "MouseEvent" "UiEvent" ];
          "DynamicsCompressorNode" = [ "AudioNode" "EventTarget" ];
          "Element" = [ "EventTarget" "Node" ];
          "ErrorEvent" = [ "Event" ];
          "EventSource" = [ "EventTarget" ];
          "ExtendableEvent" = [ "Event" ];
          "ExtendableMessageEvent" = [ "Event" "ExtendableEvent" ];
          "FetchEvent" = [ "Event" "ExtendableEvent" ];
          "FetchObserver" = [ "EventTarget" ];
          "File" = [ "Blob" ];
          "FileReader" = [ "EventTarget" ];
          "FileSystemDirectoryEntry" = [ "FileSystemEntry" ];
          "FileSystemFileEntry" = [ "FileSystemEntry" ];
          "FocusEvent" = [ "Event" "UiEvent" ];
          "FontFaceSet" = [ "EventTarget" ];
          "FontFaceSetLoadEvent" = [ "Event" ];
          "GainNode" = [ "AudioNode" "EventTarget" ];
          "GamepadAxisMoveEvent" = [ "Event" "GamepadEvent" ];
          "GamepadButtonEvent" = [ "Event" "GamepadEvent" ];
          "GamepadEvent" = [ "Event" ];
          "GpuDevice" = [ "EventTarget" ];
          "GpuUncapturedErrorEvent" = [ "Event" ];
          "HashChangeEvent" = [ "Event" ];
          "HtmlAnchorElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlAreaElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlAudioElement" = [ "Element" "EventTarget" "HtmlElement" "HtmlMediaElement" "Node" ];
          "HtmlBaseElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlBodyElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlBrElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlButtonElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlCanvasElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDListElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDataElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDataListElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDetailsElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDialogElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDirectoryElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDivElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDocument" = [ "Document" "EventTarget" "Node" ];
          "HtmlElement" = [ "Element" "EventTarget" "Node" ];
          "HtmlEmbedElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlFieldSetElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlFontElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlFormControlsCollection" = [ "HtmlCollection" ];
          "HtmlFormElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlFrameElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlFrameSetElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlHeadElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlHeadingElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlHrElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlHtmlElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlIFrameElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlImageElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlInputElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlLabelElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlLegendElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlLiElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlLinkElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlMapElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlMediaElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlMenuElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlMenuItemElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlMetaElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlMeterElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlModElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlOListElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlObjectElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlOptGroupElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlOptionElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlOptionsCollection" = [ "HtmlCollection" ];
          "HtmlOutputElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlParagraphElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlParamElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlPictureElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlPreElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlProgressElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlQuoteElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlScriptElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlSelectElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlSlotElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlSourceElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlSpanElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlStyleElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTableCaptionElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTableCellElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTableColElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTableElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTableRowElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTableSectionElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTemplateElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTextAreaElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTimeElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTitleElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTrackElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlUListElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlUnknownElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlVideoElement" = [ "Element" "EventTarget" "HtmlElement" "HtmlMediaElement" "Node" ];
          "IdbCursorWithValue" = [ "IdbCursor" ];
          "IdbDatabase" = [ "EventTarget" ];
          "IdbFileHandle" = [ "EventTarget" ];
          "IdbFileRequest" = [ "DomRequest" "EventTarget" ];
          "IdbLocaleAwareKeyRange" = [ "IdbKeyRange" ];
          "IdbMutableFile" = [ "EventTarget" ];
          "IdbOpenDbRequest" = [ "EventTarget" "IdbRequest" ];
          "IdbRequest" = [ "EventTarget" ];
          "IdbTransaction" = [ "EventTarget" ];
          "IdbVersionChangeEvent" = [ "Event" ];
          "IirFilterNode" = [ "AudioNode" "EventTarget" ];
          "ImageCapture" = [ "EventTarget" ];
          "ImageCaptureErrorEvent" = [ "Event" ];
          "InputEvent" = [ "Event" "UiEvent" ];
          "KeyboardEvent" = [ "Event" "UiEvent" ];
          "KeyframeEffect" = [ "AnimationEffect" ];
          "LocalMediaStream" = [ "EventTarget" "MediaStream" ];
          "MediaDevices" = [ "EventTarget" ];
          "MediaElementAudioSourceNode" = [ "AudioNode" "EventTarget" ];
          "MediaEncryptedEvent" = [ "Event" ];
          "MediaKeyError" = [ "Event" ];
          "MediaKeyMessageEvent" = [ "Event" ];
          "MediaKeySession" = [ "EventTarget" ];
          "MediaQueryList" = [ "EventTarget" ];
          "MediaQueryListEvent" = [ "Event" ];
          "MediaRecorder" = [ "EventTarget" ];
          "MediaRecorderErrorEvent" = [ "Event" ];
          "MediaSource" = [ "EventTarget" ];
          "MediaStream" = [ "EventTarget" ];
          "MediaStreamAudioDestinationNode" = [ "AudioNode" "EventTarget" ];
          "MediaStreamAudioSourceNode" = [ "AudioNode" "EventTarget" ];
          "MediaStreamEvent" = [ "Event" ];
          "MediaStreamTrack" = [ "EventTarget" ];
          "MediaStreamTrackEvent" = [ "Event" ];
          "MessageEvent" = [ "Event" ];
          "MessagePort" = [ "EventTarget" ];
          "MidiAccess" = [ "EventTarget" ];
          "MidiConnectionEvent" = [ "Event" ];
          "MidiInput" = [ "EventTarget" "MidiPort" ];
          "MidiMessageEvent" = [ "Event" ];
          "MidiOutput" = [ "EventTarget" "MidiPort" ];
          "MidiPort" = [ "EventTarget" ];
          "MouseEvent" = [ "Event" "UiEvent" ];
          "MouseScrollEvent" = [ "Event" "MouseEvent" "UiEvent" ];
          "MutationEvent" = [ "Event" ];
          "NetworkInformation" = [ "EventTarget" ];
          "Node" = [ "EventTarget" ];
          "Notification" = [ "EventTarget" ];
          "NotificationEvent" = [ "Event" "ExtendableEvent" ];
          "OfflineAudioCompletionEvent" = [ "Event" ];
          "OfflineAudioContext" = [ "BaseAudioContext" "EventTarget" ];
          "OfflineResourceList" = [ "EventTarget" ];
          "OffscreenCanvas" = [ "EventTarget" ];
          "OscillatorNode" = [ "AudioNode" "AudioScheduledSourceNode" "EventTarget" ];
          "PageTransitionEvent" = [ "Event" ];
          "PaintWorkletGlobalScope" = [ "WorkletGlobalScope" ];
          "PannerNode" = [ "AudioNode" "EventTarget" ];
          "PaymentMethodChangeEvent" = [ "Event" "PaymentRequestUpdateEvent" ];
          "PaymentRequestUpdateEvent" = [ "Event" ];
          "Performance" = [ "EventTarget" ];
          "PerformanceMark" = [ "PerformanceEntry" ];
          "PerformanceMeasure" = [ "PerformanceEntry" ];
          "PerformanceNavigationTiming" = [ "PerformanceEntry" "PerformanceResourceTiming" ];
          "PerformanceResourceTiming" = [ "PerformanceEntry" ];
          "PermissionStatus" = [ "EventTarget" ];
          "PointerEvent" = [ "Event" "MouseEvent" "UiEvent" ];
          "PopStateEvent" = [ "Event" ];
          "PopupBlockedEvent" = [ "Event" ];
          "PresentationAvailability" = [ "EventTarget" ];
          "PresentationConnection" = [ "EventTarget" ];
          "PresentationConnectionAvailableEvent" = [ "Event" ];
          "PresentationConnectionCloseEvent" = [ "Event" ];
          "PresentationConnectionList" = [ "EventTarget" ];
          "PresentationRequest" = [ "EventTarget" ];
          "ProcessingInstruction" = [ "CharacterData" "EventTarget" "Node" ];
          "ProgressEvent" = [ "Event" ];
          "PromiseRejectionEvent" = [ "Event" ];
          "PublicKeyCredential" = [ "Credential" ];
          "PushEvent" = [ "Event" "ExtendableEvent" ];
          "RadioNodeList" = [ "NodeList" ];
          "RtcDataChannel" = [ "EventTarget" ];
          "RtcDataChannelEvent" = [ "Event" ];
          "RtcPeerConnection" = [ "EventTarget" ];
          "RtcPeerConnectionIceEvent" = [ "Event" ];
          "RtcTrackEvent" = [ "Event" ];
          "RtcdtmfSender" = [ "EventTarget" ];
          "RtcdtmfToneChangeEvent" = [ "Event" ];
          "Screen" = [ "EventTarget" ];
          "ScreenOrientation" = [ "EventTarget" ];
          "ScriptProcessorNode" = [ "AudioNode" "EventTarget" ];
          "ScrollAreaEvent" = [ "Event" "UiEvent" ];
          "SecurityPolicyViolationEvent" = [ "Event" ];
          "ServiceWorker" = [ "EventTarget" ];
          "ServiceWorkerContainer" = [ "EventTarget" ];
          "ServiceWorkerGlobalScope" = [ "EventTarget" "WorkerGlobalScope" ];
          "ServiceWorkerRegistration" = [ "EventTarget" ];
          "ShadowRoot" = [ "DocumentFragment" "EventTarget" "Node" ];
          "SharedWorker" = [ "EventTarget" ];
          "SharedWorkerGlobalScope" = [ "EventTarget" "WorkerGlobalScope" ];
          "SourceBuffer" = [ "EventTarget" ];
          "SourceBufferList" = [ "EventTarget" ];
          "SpeechRecognition" = [ "EventTarget" ];
          "SpeechRecognitionError" = [ "Event" ];
          "SpeechRecognitionEvent" = [ "Event" ];
          "SpeechSynthesis" = [ "EventTarget" ];
          "SpeechSynthesisErrorEvent" = [ "Event" "SpeechSynthesisEvent" ];
          "SpeechSynthesisEvent" = [ "Event" ];
          "SpeechSynthesisUtterance" = [ "EventTarget" ];
          "StereoPannerNode" = [ "AudioNode" "EventTarget" ];
          "StorageEvent" = [ "Event" ];
          "SvgAnimateElement" = [ "Element" "EventTarget" "Node" "SvgAnimationElement" "SvgElement" ];
          "SvgAnimateMotionElement" = [ "Element" "EventTarget" "Node" "SvgAnimationElement" "SvgElement" ];
          "SvgAnimateTransformElement" = [ "Element" "EventTarget" "Node" "SvgAnimationElement" "SvgElement" ];
          "SvgAnimationElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgCircleElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGeometryElement" "SvgGraphicsElement" ];
          "SvgClipPathElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgComponentTransferFunctionElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgDefsElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgDescElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgElement" = [ "Element" "EventTarget" "Node" ];
          "SvgEllipseElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGeometryElement" "SvgGraphicsElement" ];
          "SvgFilterElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgForeignObjectElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgGeometryElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgGradientElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgGraphicsElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgImageElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgLineElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGeometryElement" "SvgGraphicsElement" ];
          "SvgLinearGradientElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGradientElement" ];
          "SvgMarkerElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgMaskElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgMetadataElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgPathElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGeometryElement" "SvgGraphicsElement" ];
          "SvgPathSegArcAbs" = [ "SvgPathSeg" ];
          "SvgPathSegArcRel" = [ "SvgPathSeg" ];
          "SvgPathSegClosePath" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoCubicAbs" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoCubicRel" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoCubicSmoothAbs" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoCubicSmoothRel" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoQuadraticAbs" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoQuadraticRel" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoQuadraticSmoothAbs" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoQuadraticSmoothRel" = [ "SvgPathSeg" ];
          "SvgPathSegLinetoAbs" = [ "SvgPathSeg" ];
          "SvgPathSegLinetoHorizontalAbs" = [ "SvgPathSeg" ];
          "SvgPathSegLinetoHorizontalRel" = [ "SvgPathSeg" ];
          "SvgPathSegLinetoRel" = [ "SvgPathSeg" ];
          "SvgPathSegLinetoVerticalAbs" = [ "SvgPathSeg" ];
          "SvgPathSegLinetoVerticalRel" = [ "SvgPathSeg" ];
          "SvgPathSegMovetoAbs" = [ "SvgPathSeg" ];
          "SvgPathSegMovetoRel" = [ "SvgPathSeg" ];
          "SvgPatternElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgPolygonElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGeometryElement" "SvgGraphicsElement" ];
          "SvgPolylineElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGeometryElement" "SvgGraphicsElement" ];
          "SvgRadialGradientElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGradientElement" ];
          "SvgRectElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGeometryElement" "SvgGraphicsElement" ];
          "SvgScriptElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgSetElement" = [ "Element" "EventTarget" "Node" "SvgAnimationElement" "SvgElement" ];
          "SvgStopElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgStyleElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgSwitchElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgSymbolElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgTextContentElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgTextElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" "SvgTextContentElement" "SvgTextPositioningElement" ];
          "SvgTextPathElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" "SvgTextContentElement" ];
          "SvgTextPositioningElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" "SvgTextContentElement" ];
          "SvgTitleElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgUseElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgViewElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgaElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgfeBlendElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeColorMatrixElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeComponentTransferElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeCompositeElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeConvolveMatrixElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeDiffuseLightingElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeDisplacementMapElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeDistantLightElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeDropShadowElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeFloodElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeFuncAElement" = [ "Element" "EventTarget" "Node" "SvgComponentTransferFunctionElement" "SvgElement" ];
          "SvgfeFuncBElement" = [ "Element" "EventTarget" "Node" "SvgComponentTransferFunctionElement" "SvgElement" ];
          "SvgfeFuncGElement" = [ "Element" "EventTarget" "Node" "SvgComponentTransferFunctionElement" "SvgElement" ];
          "SvgfeFuncRElement" = [ "Element" "EventTarget" "Node" "SvgComponentTransferFunctionElement" "SvgElement" ];
          "SvgfeGaussianBlurElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeImageElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeMergeElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeMergeNodeElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeMorphologyElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeOffsetElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfePointLightElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeSpecularLightingElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeSpotLightElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeTileElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeTurbulenceElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvggElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgmPathElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgsvgElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgtSpanElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" "SvgTextContentElement" "SvgTextPositioningElement" ];
          "TcpServerSocket" = [ "EventTarget" ];
          "TcpServerSocketEvent" = [ "Event" ];
          "TcpSocket" = [ "EventTarget" ];
          "TcpSocketErrorEvent" = [ "Event" ];
          "TcpSocketEvent" = [ "Event" ];
          "Text" = [ "CharacterData" "EventTarget" "Node" ];
          "TextTrack" = [ "EventTarget" ];
          "TextTrackCue" = [ "EventTarget" ];
          "TextTrackList" = [ "EventTarget" ];
          "TimeEvent" = [ "Event" ];
          "TouchEvent" = [ "Event" "UiEvent" ];
          "TrackEvent" = [ "Event" ];
          "TransitionEvent" = [ "Event" ];
          "UiEvent" = [ "Event" ];
          "UserProximityEvent" = [ "Event" ];
          "VideoStreamTrack" = [ "EventTarget" "MediaStreamTrack" ];
          "VideoTrackList" = [ "EventTarget" ];
          "VrDisplay" = [ "EventTarget" ];
          "VttCue" = [ "EventTarget" "TextTrackCue" ];
          "WaveShaperNode" = [ "AudioNode" "EventTarget" ];
          "WebGlContextEvent" = [ "Event" ];
          "WebKitCssMatrix" = [ "DomMatrix" "DomMatrixReadOnly" ];
          "WebSocket" = [ "EventTarget" ];
          "WheelEvent" = [ "Event" "MouseEvent" "UiEvent" ];
          "Window" = [ "EventTarget" ];
          "WindowClient" = [ "Client" ];
          "Worker" = [ "EventTarget" ];
          "WorkerDebuggerGlobalScope" = [ "EventTarget" ];
          "WorkerGlobalScope" = [ "EventTarget" ];
          "XmlDocument" = [ "Document" "EventTarget" "Node" ];
          "XmlHttpRequest" = [ "EventTarget" "XmlHttpRequestEventTarget" ];
          "XmlHttpRequestEventTarget" = [ "EventTarget" ];
          "XmlHttpRequestUpload" = [ "EventTarget" "XmlHttpRequestEventTarget" ];
          "Xr" = [ "EventTarget" ];
          "XrBoundedReferenceSpace" = [ "EventTarget" "XrReferenceSpace" "XrSpace" ];
          "XrInputSourceEvent" = [ "Event" ];
          "XrInputSourcesChangeEvent" = [ "Event" ];
          "XrReferenceSpace" = [ "EventTarget" "XrSpace" ];
          "XrReferenceSpaceEvent" = [ "Event" ];
          "XrSession" = [ "EventTarget" ];
          "XrSessionEvent" = [ "Event" ];
          "XrSpace" = [ "EventTarget" ];
          "XrViewerPose" = [ "XrPose" ];
        };
        resolvedDefaultFeatures = [ "Crypto" "Event" "EventTarget" "Headers" "MessageEvent" "Request" "RequestInit" "RequestMode" "Response" "Window" "Worker" ];
      };
      "webpki" = rec {
        crateName = "webpki";
        version = "0.21.2";
        edition = "2018";
        sha256 = "1vv3x2alvczfy6jhx79c9h00d1nliqf7s5jlvcd6npc6f8chxxgi";
        libPath = "src/webpki.rs";
        authors = [
          "Brian Smith <brian@briansmith.org>"
        ];
        dependencies = [
          {
            name = "ring";
            packageId = "ring";
            usesDefaultFeatures = false;
            features = [ "alloc" ];
          }
          {
            name = "untrusted";
            packageId = "untrusted";
          }
        ];
        features = {
          "default" = [ "std" "trust_anchor_util" ];
          "trust_anchor_util" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" "trust_anchor_util" ];
      };
      "webpki-roots" = rec {
        crateName = "webpki-roots";
        version = "0.18.0";
        edition = "2018";
        crateBin = [];
        sha256 = "1d4ss607rgi9pj01zzqa13c1p3m35z314yh6lmjaj4kzvwv5gkci";
        authors = [
          "Joseph Birr-Pixton <jpixton@gmail.com>"
        ];
        dependencies = [
          {
            name = "webpki";
            packageId = "webpki";
          }
        ];
        
      };
      "websocket" = rec {
        crateName = "websocket";
        version = "0.24.0";
        edition = "2015";
        sha256 = "1l41wm6cmhbf42q4rg7mfa6dwc87w7nikcwirr0b69wy1f23ffs1";
        authors = [
          "cyderize <admin@cyderize.org>"
          "Michael Eden <themichaeleden@gmail.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.4.12";
            optional = true;
          }
          {
            name = "futures";
            packageId = "futures";
            optional = true;
          }
          {
            name = "hyper";
            packageId = "hyper 0.10.16";
          }
          {
            name = "native-tls";
            packageId = "native-tls";
            optional = true;
          }
          {
            name = "rand";
            packageId = "rand 0.6.5";
          }
          {
            name = "tokio-codec";
            packageId = "tokio-codec";
            optional = true;
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
            optional = true;
          }
          {
            name = "tokio-reactor";
            packageId = "tokio-reactor";
            optional = true;
          }
          {
            name = "tokio-tcp";
            packageId = "tokio-tcp";
            optional = true;
          }
          {
            name = "tokio-tls";
            packageId = "tokio-tls";
            optional = true;
          }
          {
            name = "unicase";
            packageId = "unicase 1.4.2";
          }
          {
            name = "url";
            packageId = "url 1.7.2";
          }
          {
            name = "websocket-base";
            packageId = "websocket-base";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "async" = [ "bytes" "futures" "tokio-io" "tokio-tcp" "tokio-reactor" "tokio-codec" "websocket-base/async" ];
          "async-ssl" = [ "native-tls" "tokio-tls" "async" "websocket-base/async-ssl" ];
          "default" = [ "sync" "sync-ssl" "async" "async-ssl" ];
          "nightly" = [ "hyper/nightly" ];
          "sync" = [ "websocket-base/sync" ];
          "sync-ssl" = [ "native-tls" "sync" "websocket-base/sync-ssl" ];
        };
        resolvedDefaultFeatures = [ "async" "async-ssl" "bytes" "default" "futures" "native-tls" "sync" "sync-ssl" "tokio-codec" "tokio-io" "tokio-reactor" "tokio-tcp" "tokio-tls" ];
      };
      "websocket-base" = rec {
        crateName = "websocket-base";
        version = "0.24.0";
        edition = "2015";
        sha256 = "0x535b292mqivc3v1iyy34l260z72plfx91h9jswqk8cs3q10f2y";
        authors = [
          "cyderize <admin@cyderize.org>"
          "Michael Eden <themichaeleden@gmail.com>"
        ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64 0.10.1";
          }
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "bytes";
            packageId = "bytes 0.4.12";
            optional = true;
          }
          {
            name = "futures";
            packageId = "futures";
            optional = true;
          }
          {
            name = "native-tls";
            packageId = "native-tls";
            optional = true;
          }
          {
            name = "rand";
            packageId = "rand 0.6.5";
          }
          {
            name = "sha1";
            packageId = "sha1";
          }
          {
            name = "tokio-codec";
            packageId = "tokio-codec";
            optional = true;
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
            optional = true;
          }
          {
            name = "tokio-tcp";
            packageId = "tokio-tcp";
            optional = true;
          }
          {
            name = "tokio-tls";
            packageId = "tokio-tls";
            optional = true;
          }
        ];
        features = {
          "async" = [ "tokio-codec" "tokio-io" "tokio-tcp" "bytes" "futures" ];
          "async-ssl" = [ "native-tls" "tokio-tls" "async" ];
          "default" = [ "sync" "async" "sync-ssl" "async-ssl" ];
          "sync-ssl" = [ "native-tls" "sync" ];
        };
        resolvedDefaultFeatures = [ "async" "async-ssl" "bytes" "futures" "native-tls" "sync" "sync-ssl" "tokio-codec" "tokio-io" "tokio-tcp" "tokio-tls" ];
      };
      "which" = rec {
        crateName = "which";
        version = "3.1.1";
        edition = "2015";
        sha256 = "094pw9pi48szshn9ln69z2kg7syq1jp80h5ps1qncbsaw4d0f4fh";
        authors = [
          "Harry Fei <tiziyuanfang@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "default" = [ "failure" ];
        };
      };
      "winapi 0.2.8" = rec {
        crateName = "winapi";
        version = "0.2.8";
        edition = "2015";
        sha256 = "0yh816lh6lf56dpsgxy189c2ai1z3j8mw9si6izqb6wsjkbcjz8n";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        
      };
      "winapi 0.3.8" = rec {
        crateName = "winapi";
        version = "0.3.8";
        edition = "2015";
        sha256 = "1ii9j9lzrhwri0902652awifzx9fpayimbp6hfhhc296xcg0k4w0";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi-i686-pc-windows-gnu";
            packageId = "winapi-i686-pc-windows-gnu";
            target = { target, features }: (stdenv.hostPlatform.config == "i686-pc-windows-gnu");
          }
          {
            name = "winapi-x86_64-pc-windows-gnu";
            packageId = "winapi-x86_64-pc-windows-gnu";
            target = { target, features }: (stdenv.hostPlatform.config == "x86_64-pc-windows-gnu");
          }
        ];
        features = {
          "debug" = [ "impl-debug" ];
        };
        resolvedDefaultFeatures = [ "basetsd" "consoleapi" "dbghelp" "errhandlingapi" "fileapi" "handleapi" "impl-debug" "impl-default" "knownfolders" "libloaderapi" "lmcons" "memoryapi" "minschannel" "minwinbase" "minwindef" "ntdef" "ntsecapi" "ntstatus" "objbase" "processenv" "processthreadsapi" "profileapi" "schannel" "securitybaseapi" "shlobj" "sspi" "std" "synchapi" "sysinfoapi" "timezoneapi" "utilapiset" "winbase" "wincon" "wincrypt" "windef" "winerror" "winnls" "winnt" "winreg" "winsock2" "winuser" "ws2def" "ws2ipdef" "ws2tcpip" "wtypesbase" ];
      };
      "winapi-build" = rec {
        crateName = "winapi-build";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1g4rqsgjky0a7530qajn2bbfcrl2v0zb39idgdws9b1l7gp5wc9d";
        libName = "build";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        
      };
      "winapi-i686-pc-windows-gnu" = rec {
        crateName = "winapi-i686-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "1dmpa6mvcvzz16zg6d5vrfy4bxgg541wxrcip7cnshi06v38ffxc";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        
      };
      "winapi-util" = rec {
        crateName = "winapi-util";
        version = "0.1.4";
        edition = "2018";
        sha256 = "0vj3984cxwnf1ys3fdz6bpl7p0kdsgykpzbhmcmwi759cd8mqlgs";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            target = { target, features }: target."windows";
            features = [ "std" "consoleapi" "errhandlingapi" "fileapi" "minwindef" "processenv" "winbase" "wincon" "winerror" "winnt" ];
          }
        ];
        
      };
      "winapi-x86_64-pc-windows-gnu" = rec {
        crateName = "winapi-x86_64-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "0gqq64czqb64kskjryj8isp62m2sgvx25yyj3kpc2myh85w24bki";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        
      };
      "winreg" = rec {
        crateName = "winreg";
        version = "0.6.2";
        edition = "2015";
        sha256 = "1jdcqr6zmvwyrp87h48miasfdvv16gjsb60rc8dy2kqwb3mnv65j";
        authors = [
          "Igor Shaula <gentoo90@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8";
            features = [ "impl-default" "impl-debug" "minwindef" "minwinbase" "timezoneapi" "winerror" "winnt" "winreg" "handleapi" ];
          }
        ];
        features = {
          "serialization-serde" = [ "transactions" "serde" ];
          "transactions" = [ "winapi/ktmw32" ];
        };
      };
      "ws" = rec {
        crateName = "ws";
        version = "0.9.1";
        edition = "2015";
        sha256 = "151d3ypx3kc31is9rz92sxsl4z7cd99zz4zv9xvwr33rnm3jq6n5";
        authors = [
          "Jason Housley <HousleyJK@gmail.com>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "bytes";
            packageId = "bytes 0.4.12";
          }
          {
            name = "httparse";
            packageId = "httparse";
          }
          {
            name = "log";
            packageId = "log 0.4.8";
          }
          {
            name = "mio";
            packageId = "mio";
          }
          {
            name = "mio-extras";
            packageId = "mio-extras";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "sha-1";
            packageId = "sha-1";
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "url";
            packageId = "url 2.1.1";
          }
        ];
        features = {
          "nativetls" = [ "native-tls" ];
          "permessage-deflate" = [ "libz-sys" "libc" ];
          "ssl" = [ "openssl" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "ws2_32-sys" = rec {
        crateName = "ws2_32-sys";
        version = "0.2.1";
        edition = "2015";
        sha256 = "0ppscg5qfqaw0gzwv2a4nhn5bn01ff9iwn6ysqnzm4n8s3myz76m";
        libName = "ws2_32";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
          }
        ];
        buildDependencies = [
          {
            name = "winapi-build";
            packageId = "winapi-build";
          }
        ];
        
      };
      "xattr" = rec {
        crateName = "xattr";
        version = "0.2.2";
        edition = "2015";
        sha256 = "0k556fb6f5jc907975j9c8iynl2fqz3rf0w6fiig83i4yi0kfk14";
        authors = [
          "Steven Allen <steven@stebalien.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "default" = [ "unsupported" ];
        };
        resolvedDefaultFeatures = [ "default" "unsupported" ];
      };
      "yaml-rust" = rec {
        crateName = "yaml-rust";
        version = "0.4.3";
        edition = "2015";
        sha256 = "0ka3qhqc5lvk3hz14wmsj32jhmh44blcbfrx5hfxli2gg38kv4k5";
        authors = [
          "Yuheng Chen <yuhengchen@sensetime.com>"
        ];
        dependencies = [
          {
            name = "linked-hash-map";
            packageId = "linked-hash-map";
          }
        ];
        
      };
    };

    #
# crate2nix/default.nix (excerpt start)
#

  /* Target (platform) data for conditional dependencies.
     This corresponds roughly to what buildRustCrate is setting.
  */
  defaultTarget = {
    unix = true;
    windows = false;
    fuchsia = true;
    test = false;

    # This doesn't appear to be officially documented anywhere yet.
    # See https://github.com/rust-lang-nursery/rust-forge/issues/101.
    os = if stdenv.hostPlatform.isDarwin
    then "macos"
    else stdenv.hostPlatform.parsed.kernel.name;
    arch = stdenv.hostPlatform.parsed.cpu.name;
    family = "unix";
    env = "gnu";
    endian =
      if stdenv.hostPlatform.parsed.cpu.significantByte.name == "littleEndian"
      then "little" else "big";
    pointer_width = toString stdenv.hostPlatform.parsed.cpu.bits;
    vendor = stdenv.hostPlatform.parsed.vendor.name;
    debug_assertions = false;
  };

  /* Filters common temp files and build files. */
  # TODO(pkolloch): Substitute with gitignore filter
  sourceFilter = name: type:
    let
      baseName = builtins.baseNameOf (builtins.toString name);
    in
      ! (
        # Filter out git
        baseName == ".gitignore"
        || (type == "directory" && baseName == ".git")

        # Filter out build results
        || (
          type == "directory" && (
            baseName == "target"
            || baseName == "_site"
            || baseName == ".sass-cache"
            || baseName == ".jekyll-metadata"
            || baseName == "build-artifacts"
          )
        )

        # Filter out nix-build result symlinks
        || (
          type == "symlink" && lib.hasPrefix "result" baseName
        )

        # Filter out IDE config
        || (
          type == "directory" && (
            baseName == ".idea" || baseName == ".vscode"
          )
        ) || lib.hasSuffix ".iml" baseName

        # Filter out nix build files
        || baseName == "Cargo.nix"

        # Filter out editor backup / swap files.
        || lib.hasSuffix "~" baseName
        || builtins.match "^\\.sw[a-z]$$" baseName != null
        || builtins.match "^\\..*\\.sw[a-z]$$" baseName != null
        || lib.hasSuffix ".tmp" baseName
        || lib.hasSuffix ".bak" baseName
        || baseName == "tests.nix"
      );

  /* Returns a crate which depends on successful test execution
     of crate given as the second argument.

     testCrateFlags: list of flags to pass to the test exectuable
     testInputs: list of packages that should be available during test execution
  */
  crateWithTest = { crate, testCrate, testCrateFlags, testInputs }:
    assert builtins.typeOf testCrateFlags == "list";
    assert builtins.typeOf testInputs == "list";
    let
      # override the `crate` so that it will build and execute tests instead of
      # building the actual lib and bin targets We just have to pass `--test`
      # to rustc and it will do the right thing.  We execute the tests and copy
      # their log and the test executables to $out for later inspection.
      test = let
        drv = testCrate.override (
          _: {
            buildTests = true;
          }
        );
      in
        pkgs.runCommand "run-tests-${testCrate.name}" {
          inherit testCrateFlags;
          buildInputs = testInputs;
        } ''
          set -ex

          export RUST_BACKTRACE=1

          # recreate a file hierarchy as when running tests with cargo

          # the source for test data
          ${pkgs.xorg.lndir}/bin/lndir ${crate.src}

          # build outputs
          testRoot=target/debug
          mkdir -p $testRoot

          # executables of the crate
          # we copy to prevent std::env::current_exe() to resolve to a store location
          for i in ${crate}/bin/*; do
            cp "$i" "$testRoot"
          done
          chmod +w -R .

          # test harness executables are suffixed with a hash, like cargo does
          # this allows to prevent name collision with the main
          # executables of the crate
          hash=$(basename $out)
          for file in ${drv}/tests/*; do
            f=$testRoot/$(basename $file)-$hash
            cp $file $f
            $f $testCrateFlags 2>&1 | tee -a $out
          done
        '';
    in
      crate.overrideAttrs (
        old: {
          checkPhase = ''
            test -e ${test}
          '';
          passthru = (old.passthru or {}) // {
            inherit test;
          };
        }
      );

  /* A restricted overridable version of builtRustCratesWithFeatures. */
  buildRustCrateWithFeatures =
    { packageId
    , features ? rootFeatures
    , crateOverrides ? defaultCrateOverrides
    , buildRustCrateFunc ? null
    , runTests ? false
    , testCrateFlags ? []
    , testInputs ? []
    }:
      lib.makeOverridable
        (
          { features
          , crateOverrides
          , runTests
          , testCrateFlags
          , testInputs
          }:
            let
              buildRustCrateFuncOverriden = if buildRustCrateFunc != null
              then buildRustCrateFunc
              else (
                if crateOverrides == pkgs.defaultCrateOverrides
                then buildRustCrate
                else buildRustCrate.override {
                  defaultCrateOverrides = crateOverrides;
                }
              );
              builtRustCrates = builtRustCratesWithFeatures {
                inherit packageId features;
                buildRustCrateFunc = buildRustCrateFuncOverriden;
                runTests = false;
              };
              builtTestRustCrates = builtRustCratesWithFeatures {
                inherit packageId features;
                buildRustCrateFunc = buildRustCrateFuncOverriden;
                runTests = true;
              };
              drv = builtRustCrates.${packageId};
              testDrv = builtTestRustCrates.${packageId};
              derivation = if runTests then
                crateWithTest {
                  crate = drv;
                  testCrate = testDrv;
                  inherit testCrateFlags testInputs;
                }
              else drv;
            in
              derivation
        )
        { inherit features crateOverrides runTests testCrateFlags testInputs; };

  /* Returns an attr set with packageId mapped to the result of buildRustCrateFunc
     for the corresponding crate.
  */
  builtRustCratesWithFeatures =
    { packageId
    , features
    , crateConfigs ? crates
    , buildRustCrateFunc
    , runTests
    , target ? defaultTarget
    } @ args:
      assert (builtins.isAttrs crateConfigs);
      assert (builtins.isString packageId);
      assert (builtins.isList features);
      assert (builtins.isAttrs target);
      assert (builtins.isBool runTests);
      let
        rootPackageId = packageId;
        mergedFeatures = mergePackageFeatures (
          args // {
            inherit rootPackageId;
            target = target // { test = runTests; };
          }
        );

        buildByPackageId = packageId: buildByPackageIdImpl packageId;

        # Memoize built packages so that reappearing packages are only built once.
        builtByPackageId =
          lib.mapAttrs (packageId: value: buildByPackageId packageId) crateConfigs;

        buildByPackageIdImpl = packageId:
          let
            features = mergedFeatures."${packageId}" or [];
            crateConfig' = crateConfigs."${packageId}";
            crateConfig =
              builtins.removeAttrs crateConfig' [ "resolvedDefaultFeatures" "devDependencies" ];
            devDependencies =
              lib.optionals
                (runTests && packageId == rootPackageId)
                (crateConfig'.devDependencies or []);
            dependencies =
              dependencyDerivations {
                inherit builtByPackageId features target;
                dependencies =
                  (crateConfig.dependencies or [])
                  ++ devDependencies;
              };
            buildDependencies =
              dependencyDerivations {
                inherit builtByPackageId features target;
                dependencies = crateConfig.buildDependencies or [];
              };

            filterEnabledDependenciesForThis = dependencies: filterEnabledDependencies {
              inherit dependencies features target;
            };

            dependenciesWithRenames =
              lib.filter (d: d ? "rename") (
                filterEnabledDependenciesForThis
                  (
                    (crateConfig.buildDependencies or [])
                    ++ (crateConfig.dependencies or [])
                    ++ devDependencies
                  )
              );

            crateRenames =
              builtins.listToAttrs
                (map (d: { name = d.name; value = d.rename; }) dependenciesWithRenames);
          in
            buildRustCrateFunc (
              crateConfig // {
                src = crateConfig.src or (
                  pkgs.fetchurl {
                    name = "${crateConfig.crateName}-${crateConfig.version}.tar.gz";
                    # https://www.pietroalbini.org/blog/downloading-crates-io/
                    # Not rate-limited, CDN URL.
                    url = "https://static.crates.io/crates/${crateConfig.crateName}/${crateConfig.crateName}-${crateConfig.version}.crate";
                    sha256 = crateConfig.sha256;
                  }
                );
                inherit features dependencies buildDependencies crateRenames release;
              }
            );
      in
        builtByPackageId;

  /* Returns the actual derivations for the given dependencies. */
  dependencyDerivations =
    { builtByPackageId
    , features
    , dependencies
    , target
    }:
      assert (builtins.isAttrs builtByPackageId);
      assert (builtins.isList features);
      assert (builtins.isList dependencies);
      assert (builtins.isAttrs target);
      let
        enabledDependencies = filterEnabledDependencies {
          inherit dependencies features target;
        };
        depDerivation = dependency: builtByPackageId.${dependency.packageId};
      in
        map depDerivation enabledDependencies;

  /* Returns a sanitized version of val with all values substituted that cannot
     be serialized as JSON.
  */
  sanitizeForJson = val:
    if builtins.isAttrs val
    then lib.mapAttrs (n: v: sanitizeForJson v) val
    else if builtins.isList val
    then builtins.map sanitizeForJson val
    else if builtins.isFunction val
    then "function"
    else val;

  /* Returns various tools to debug a crate. */
  debugCrate = { packageId, target ? defaultTarget }:
    assert (builtins.isString packageId);
    let
      debug = rec {
        # The built tree as passed to buildRustCrate.
        buildTree = buildRustCrateWithFeatures {
          buildRustCrateFunc = lib.id;
          inherit packageId;
        };
        sanitizedBuildTree = sanitizeForJson buildTree;
        dependencyTree = sanitizeForJson (
          buildRustCrateWithFeatures {
            buildRustCrateFunc = crate: {
              "01_crateName" = crate.crateName or false;
              "02_features" = crate.features or [];
              "03_dependencies" = crate.dependencies or [];
            };
            inherit packageId;
          }
        );
        mergedPackageFeatures = mergePackageFeatures {
          features = rootFeatures;
          inherit packageId target;
        };
        diffedDefaultPackageFeatures = diffDefaultPackageFeatures {
          inherit packageId target;
        };
      };
    in
      { internal = debug; };

  /* Returns differences between cargo default features and crate2nix default
     features.

     This is useful for verifying the feature resolution in crate2nix.
  */
  diffDefaultPackageFeatures =
    { crateConfigs ? crates
    , packageId
    , target
    }:
      assert (builtins.isAttrs crateConfigs);
      let
        prefixValues = prefix: lib.mapAttrs (n: v: { "${prefix}" = v; });
        mergedFeatures =
          prefixValues
            "crate2nix"
            (mergePackageFeatures { inherit crateConfigs packageId target; features = [ "default" ]; });
        configs = prefixValues "cargo" crateConfigs;
        combined = lib.foldAttrs (a: b: a // b) {} [ mergedFeatures configs ];
        onlyInCargo =
          builtins.attrNames
            (lib.filterAttrs (n: v: !(v ? "crate2nix") && (v ? "cargo")) combined);
        onlyInCrate2Nix =
          builtins.attrNames
            (lib.filterAttrs (n: v: (v ? "crate2nix") && !(v ? "cargo")) combined);
        differentFeatures = lib.filterAttrs
          (
            n: v:
              (v ? "crate2nix")
              && (v ? "cargo")
              && (v.crate2nix.features or []) != (v."cargo".resolved_default_features or [])
          )
          combined;
      in
        builtins.toJSON {
          inherit onlyInCargo onlyInCrate2Nix differentFeatures;
        };

  /* Returns an attrset mapping packageId to the list of enabled features.

     If multiple paths to a dependency enable different features, the
     corresponding feature sets are merged. Features in rust are additive.
  */
  mergePackageFeatures =
    { crateConfigs ? crates
    , packageId
    , rootPackageId ? packageId
    , features ? rootFeatures
    , dependencyPath ? [ crates.${packageId}.crateName ]
    , featuresByPackageId ? {}
    , target
      # Adds devDependencies to the crate with rootPackageId.
    , runTests ? false
    , ...
    } @ args:
      assert (builtins.isAttrs crateConfigs);
      assert (builtins.isString packageId);
      assert (builtins.isString rootPackageId);
      assert (builtins.isList features);
      assert (builtins.isList dependencyPath);
      assert (builtins.isAttrs featuresByPackageId);
      assert (builtins.isAttrs target);
      assert (builtins.isBool runTests);
      let
        crateConfig = crateConfigs."${packageId}" or (builtins.throw "Package not found: ${packageId}");
        expandedFeatures = expandFeatures (crateConfig.features or {}) features;

        depWithResolvedFeatures = dependency:
          let
            packageId = dependency.packageId;
            features = dependencyFeatures expandedFeatures dependency;
          in
            { inherit packageId features; };

        resolveDependencies = cache: path: dependencies:
          assert (builtins.isAttrs cache);
          assert (builtins.isList dependencies);
          let
            enabledDependencies = filterEnabledDependencies {
              inherit dependencies target;
              features = expandedFeatures;
            };
            directDependencies = map depWithResolvedFeatures enabledDependencies;
            foldOverCache = op: lib.foldl op cache directDependencies;
          in
            foldOverCache
              (
                cache: { packageId, features }:
                  let
                    cacheFeatures = cache.${packageId} or [];
                    combinedFeatures = sortedUnique (cacheFeatures ++ features);
                  in
                    if cache ? ${packageId} && cache.${packageId} == combinedFeatures
                    then cache
                    else mergePackageFeatures {
                      features = combinedFeatures;
                      featuresByPackageId = cache;
                      inherit crateConfigs packageId target runTests rootPackageId;
                    }
              );

        cacheWithSelf =
          let
            cacheFeatures = featuresByPackageId.${packageId} or [];
            combinedFeatures = sortedUnique (cacheFeatures ++ expandedFeatures);
          in
            featuresByPackageId // {
              "${packageId}" = combinedFeatures;
            };

        cacheWithDependencies =
          resolveDependencies cacheWithSelf "dep" (
            crateConfig.dependencies or []
            ++ lib.optionals
              (runTests && packageId == rootPackageId)
              (crateConfig.devDependencies or [])
          );

        cacheWithAll =
          resolveDependencies
            cacheWithDependencies "build"
            (crateConfig.buildDependencies or []);
      in
        cacheWithAll;

  /* Returns the enabled dependencies given the enabled features. */
  filterEnabledDependencies = { dependencies, features, target }:
    assert (builtins.isList dependencies);
    assert (builtins.isList features);
    assert (builtins.isAttrs target);

    lib.filter
      (
        dep:
          let
            targetFunc = dep.target or (features: true);
          in
            targetFunc { inherit features target; }
            && (
              !(dep.optional or false)
              || builtins.any (doesFeatureEnableDependency dep) features
            )
      )
      dependencies;

  /* Returns whether the given feature should enable the given dependency. */
  doesFeatureEnableDependency = { name, rename ? null, ... }: feature:
    let
      prefix = "${name}/";
      len = builtins.stringLength prefix;
      startsWithPrefix = builtins.substring 0 len feature == prefix;
    in
      (rename == null && feature == name)
      || (rename != null && rename == feature)
      || startsWithPrefix;

  /* Returns the expanded features for the given inputFeatures by applying the
     rules in featureMap.

     featureMap is an attribute set which maps feature names to lists of further
     feature names to enable in case this feature is selected.
  */
  expandFeatures = featureMap: inputFeatures:
    assert (builtins.isAttrs featureMap);
    assert (builtins.isList inputFeatures);
    let
      expandFeature = feature:
        assert (builtins.isString feature);
        [ feature ] ++ (expandFeatures featureMap (featureMap."${feature}" or []));
      outFeatures = lib.concatMap expandFeature inputFeatures;
    in
      sortedUnique outFeatures;

  /*
     Returns the actual features for the given dependency.

     features: The features of the crate that refers this dependency.
  */
  dependencyFeatures = features: dependency:
    assert (builtins.isList features);
    assert (builtins.isAttrs dependency);
    let
      defaultOrNil = if dependency.usesDefaultFeatures or true
      then [ "default" ]
      else [];
      explicitFeatures = dependency.features or [];
      additionalDependencyFeatures =
        let
          dependencyPrefix = (dependency.rename or dependency.name) + "/";
          dependencyFeatures =
            builtins.filter (f: lib.hasPrefix dependencyPrefix f) features;
        in
          builtins.map (lib.removePrefix dependencyPrefix) dependencyFeatures;
    in
      defaultOrNil ++ explicitFeatures ++ additionalDependencyFeatures;

  /* Sorts and removes duplicates from a list of strings. */
  sortedUnique = features:
    assert (builtins.isList features);
    assert (builtins.all builtins.isString features);
    let
      outFeaturesSet = lib.foldl (set: feature: set // { "${feature}" = 1; }) {} features;
      outFeaturesUnique = builtins.attrNames outFeaturesSet;
    in
      builtins.sort (a: b: a < b) outFeaturesUnique;

  deprecationWarning = message: value:
    if strictDeprecation
    then builtins.throw "strictDeprecation enabled, aborting: ${message}"
    else builtins.trace message value;

  #
  # crate2nix/default.nix (excerpt end)
  #

  };
}
